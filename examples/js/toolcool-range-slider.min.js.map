{
  "version": 3,
  "sources": ["../../src/app/range-slider.ts", "../../src/index.ts"],
  "sourcesContent": ["// @ts-ignore: esbuild custom loader\nimport styles from './styles.pcss';\n\n/*\n Usage:\n ------\n <toolcool-range-slider value=\"0\"></toolcool-range-slider>\n */\nclass RangeSlider extends HTMLElement {\n  // ------------------------- INIT ----------------\n\n  static get observedAttributes() {\n    return ['value'];\n  }\n\n  private _$slider: HTMLElement | null;\n  private _$pointer: HTMLElement | null;\n  private _value: number = 0;\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n\n    this.pointerClicked = this.pointerClicked.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onValueChange = this.onValueChange.bind(this);\n    this.pointerKeyDown = this.pointerKeyDown.bind(this);\n    this.getSafeValue = this.getSafeValue.bind(this);\n  }\n\n  // ----------- APIs ------------------------\n\n  /**\n   * value in % [0, 100]\n   */\n  public set value(percent: number) {\n    this._value = this.getSafeValue(percent);\n    this.render();\n  }\n\n  /**\n   * returns % [0, 100]\n   */\n  public get value() {\n    return this._value;\n  }\n\n  // ----------------------------------------------\n\n  getSafeValue(percent: number) {\n    return Math.min(Math.max(0, percent), 100);\n  }\n\n  render() {\n    if (!this._$pointer) return;\n\n    this._$pointer.style.left = `${this.value}%`;\n  }\n\n  pointerClicked() {\n    this._$pointer?.focus();\n  }\n\n  pointerKeyDown(evt: KeyboardEvent) {\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        this.value = this.getSafeValue(this.value - 1);\n        this.render();\n        break;\n      }\n\n      case 'ArrowRight': {\n        this.value = this.getSafeValue(this.value + 1);\n        this.render();\n        break;\n      }\n    }\n  }\n\n  onMouseDown(evt: MouseEvent) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    this.onValueChange(evt);\n    window.addEventListener('mousemove', this.onValueChange);\n    window.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseUp() {\n    window.removeEventListener('mousemove', this.onValueChange);\n    window.removeEventListener('mouseup', this.onValueChange);\n  }\n\n  onValueChange(evt: MouseEvent | TouchEvent) {\n    if (!this._$slider) return;\n\n    const { width: boxWidth, left: boxLeft } = this._$slider.getBoundingClientRect();\n    let mouseX;\n\n    if (evt.type.indexOf('mouse') !== -1) {\n      mouseX = (evt as MouseEvent).clientX;\n    } else {\n      mouseX = (evt as TouchEvent).touches[0].clientX;\n    }\n\n    const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n\n    this.value = Math.round((left * 100) / boxWidth);\n    this.render();\n  }\n\n  // ------------------------- WEB COMPONENT LIFECYCLE ----------------------------\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    // initial values of attributes\n    this.value = Number(this.getAttribute('value')) || 0;\n\n    this.shadowRoot.innerHTML = `\n        <style>\n            ${styles} \n        </style>\n\n        <div class=\"range-slider\">\n          <div class=\"container\">\n            <div class=\"panel\"></div>\n            \n            <div class=\"container\">\n              <div class=\"pointer\" tabindex=\"0\" style=\"left: ${this.value}%;\">\n                <div class=\"pointer-shape\"></div>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n    `;\n\n    // init slider element and its events\n    this._$slider = this.shadowRoot.querySelector('.range-slider');\n    this._$slider?.addEventListener('mousedown', this.onMouseDown);\n    this._$slider?.addEventListener('mouseup', this.onMouseUp);\n    this._$slider?.addEventListener('touchmove', this.onValueChange);\n    this._$slider?.addEventListener('touchstart', this.onValueChange);\n\n    // init pointer and its events\n    this._$pointer = this.shadowRoot.querySelector('.pointer');\n    this._$pointer?.addEventListener('click', this.pointerClicked);\n    this._$pointer?.addEventListener('keydown', this.pointerKeyDown);\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    this._$pointer?.removeEventListener('click', this.pointerClicked);\n    this._$pointer?.removeEventListener('keydown', this.pointerClicked);\n\n    this._$slider?.removeEventListener('mousedown', this.onMouseDown);\n    this._$slider?.removeEventListener('mouseup', this.onMouseUp);\n    this._$slider?.removeEventListener('touchmove', this.onValueChange);\n    this._$slider?.removeEventListener('touchstart', this.onValueChange);\n  }\n\n  /**\n   * when attributes change\n   */\n  attributeChangedCallback(attrName: string) {\n    if (attrName === 'value') {\n      this.value = Number(this.getAttribute('value')) || 0;\n      this.render();\n    }\n  }\n}\n\nexport default RangeSlider;\n", "import RangeSlider from './app/range-slider';\n\n/*\n Usage:\n Demo:\n */\n\n// register web components\nif (!customElements.get('toolcool-range-slider')) {\n  customElements.define('toolcool-range-slider', RangeSlider);\n}\n"],
  "mappings": "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",
  "names": ["RangeSlider", "__publicField", "percent", "_a", "evt", "boxWidth", "boxLeft", "mouseX", "left", "_b", "_c", "_d", "_e", "_f", "styles_default", "attrName", "range_slider_default", "range_slider_default"]
}
