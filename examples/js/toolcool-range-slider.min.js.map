{
  "version": 3,
  "sources": ["../../src/domain/math-provider.ts", "../../src/app/range-slider.ts", "../../src/index.ts"],
  "sourcesContent": ["/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b - a) * (x - min) / (max - min) + a\n */\nexport const convertRange = (min: number, max: number, a: number, b: number, x: number) => {\n  return ((b - a) * (x - min)) / (max - min) + a;\n};\n\n// the below function should receive any\n// eslint-disable-next-line\nexport const getNumber = (input: any, defaultValue: any) => {\n  const isNumber = !isNaN(parseFloat(input)) && isFinite(input);\n  return isNumber ? Number(input) : defaultValue;\n};\n\n/**\n * Round up to the next multiple of X,\n * where X is the step provided by the user.\n */\nexport const roundToStep = (num: number, step: number) => {\n  return Math.round(num / step) * step;\n};\n", "// @ts-ignore: esbuild custom loader\nimport styles from './styles.pcss';\nimport { convertRange, getNumber, roundToStep } from '../domain/math-provider';\n\n/*\n Usage:\n ------\n <toolcool-range-slider value=\"0\" min=\"0\" max=\"100\"></toolcool-range-slider>\n <toolcool-range-slider value=\"0\" min=\"-100\" max=\"100\" step=\"1\"></toolcool-range-slider>\n <toolcool-range-slider slider-width=\"250px\" slider-height=\"10px\" slider-radius=\"5px\"></toolcool-range-slider>\n <toolcool-range-slider pointer-width=\"20px\" pointer-height=\"20px\" pointer-radius=\"5px\"></toolcool-range-slider>\n */\nclass RangeSlider extends HTMLElement {\n  // ------------------------- INIT ----------------\n\n  static get observedAttributes() {\n    return ['value', 'min', 'max', 'step', 'slider-width', 'slider-height', 'slider-radius', 'pointer-width', 'pointer-height', 'pointer-radius'];\n  }\n\n  private _$slider: HTMLElement | null;\n  private _$panel: HTMLElement | null;\n  private _$pointer: HTMLElement | null;\n  private _$pointerShape: HTMLElement | null;\n\n  private _value = 0; // [min, max]\n  private _min = 0;\n  private _max = 100;\n  private _step: number | undefined = undefined;\n\n  private _sliderWidth: string | undefined = undefined;\n  private _sliderHeight: string | undefined = undefined;\n  private _sliderRadius: string | undefined = undefined;\n\n  private _pointerWidth: string | undefined = undefined;\n  private _pointerHeight: string | undefined = undefined;\n  private _pointerRadius: string | undefined = undefined;\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n\n    this.pointerClicked = this.pointerClicked.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onValueChange = this.onValueChange.bind(this);\n    this.pointerKeyDown = this.pointerKeyDown.bind(this);\n    this.getSafeValues = this.getSafeValues.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  // ----------- APIs ------------------------\n\n  /**\n   * value in [min, max] range\n   */\n  public set value(num: number) {\n    const safe = this.getSafeValues(num, this.min, this.max);\n    this._value = safe.value;\n    this.render();\n    this.sendChangeEvent();\n  }\n\n  /**\n   * returns value from [min, max] range\n   */\n  public get value() {\n    return this._value;\n  }\n\n  public set min(num: number) {\n    const safe = this.getSafeValues(this.value, num, this.max);\n    this._min = safe.min;\n    this.render();\n  }\n\n  public get min() {\n    return this._min;\n  }\n\n  public set max(num: number) {\n    const safe = this.getSafeValues(this.value, this.min, num);\n    this._max = safe.max;\n    this.render();\n  }\n\n  public get max() {\n    return this._max;\n  }\n\n  public set step(num: number | undefined) {\n    const range = Math.abs(this.max - this.min);\n    if (num !== undefined && num > range) {\n      num = undefined;\n    }\n    this._step = num;\n  }\n\n  public get step() {\n    return this._step;\n  }\n\n  public set sliderWidth(val: string | undefined) {\n    this._sliderWidth = val;\n    this.render();\n  }\n\n  public get sliderWidth() {\n    return this._sliderWidth;\n  }\n\n  public set sliderHeight(val: string | undefined) {\n    this._sliderHeight = val;\n    this.render();\n  }\n\n  public get sliderHeight() {\n    return this._sliderHeight;\n  }\n\n  public set sliderRadius(val: string | undefined) {\n    this._sliderRadius = val;\n    this.render();\n  }\n\n  public get sliderRadius() {\n    return this._sliderRadius;\n  }\n\n  public set pointerWidth(val: string | undefined) {\n    this._pointerWidth = val;\n    this.render();\n  }\n\n  public get pointerWidth() {\n    return this._pointerWidth;\n  }\n\n  public set pointerHeight(val: string | undefined) {\n    this._pointerHeight = val;\n    this.render();\n  }\n\n  public get pointerHeight() {\n    return this._pointerHeight;\n  }\n\n  public set pointerRadius(val: string | undefined) {\n    this._pointerRadius = val;\n    this.render();\n  }\n\n  public get pointerRadius() {\n    return this._pointerRadius;\n  }\n\n  // ----------------------------------------------\n\n  sendChangeEvent() {\n    this.dispatchEvent(\n      new CustomEvent('change', {\n        detail: {\n          value: this.value,\n        },\n      })\n    );\n  }\n\n  getSafeValues(value: number, min: number, max: number) {\n    const _min = min;\n    let _max = max;\n    let _val = value;\n\n    if (_min > _max) {\n      _max = _min + 100;\n    }\n\n    if (_val < _min) {\n      _val = _min;\n    }\n\n    if (_val > _max) {\n      _val = _max;\n    }\n\n    return {\n      min: _min,\n      max: _max,\n      value: _val,\n    };\n  }\n\n  render() {\n    if (!this._$slider || !this._$panel || !this._$pointer || !this._$pointerShape) return;\n\n    // update the pointer position\n    const percent = convertRange(this.min, this.max, 0, 100, this.value);\n    this._$pointer.style.left = `${percent}%`;\n\n    if (this.sliderWidth) {\n      this._$slider.style.width = this.sliderWidth;\n    }\n\n    if (this.sliderHeight) {\n      this._$slider.style.height = this.sliderHeight;\n    }\n\n    if (this.sliderRadius) {\n      this._$panel.style.borderRadius = this.sliderRadius;\n    }\n\n    if (this.pointerWidth) {\n      this._$pointerShape.style.width = this.pointerWidth;\n    }\n\n    if (this.pointerHeight) {\n      this._$pointerShape.style.height = this.pointerHeight;\n    }\n\n    if (this.pointerRadius) {\n      this._$pointerShape.style.borderRadius = this.pointerRadius;\n    }\n  }\n\n  pointerClicked() {\n    this._$pointer?.focus();\n  }\n\n  pointerKeyDown(evt: KeyboardEvent) {\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        const step = getNumber(this.step, 1);\n        const safe = this.getSafeValues(this.value - step, this.min, this.max);\n        this.value = safe.value;\n        this.render();\n        break;\n      }\n\n      case 'ArrowRight': {\n        const step = getNumber(this.step, 1);\n        const safe = this.getSafeValues(this.value + step, this.min, this.max);\n        this.value = safe.value;\n        this.render();\n        break;\n      }\n    }\n  }\n\n  onMouseDown(evt: MouseEvent) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    this.onValueChange(evt);\n    window.addEventListener('mousemove', this.onValueChange);\n    window.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseUp() {\n    window.removeEventListener('mousemove', this.onValueChange);\n    window.removeEventListener('mouseup', this.onValueChange);\n  }\n\n  onValueChange(evt: MouseEvent | TouchEvent) {\n    if (!this._$slider) return;\n\n    const { width: boxWidth, left: boxLeft } = this._$slider.getBoundingClientRect();\n\n    let mouseX;\n    if (evt.type.indexOf('mouse') !== -1) {\n      mouseX = (evt as MouseEvent).clientX;\n    } else {\n      mouseX = (evt as TouchEvent).touches[0].clientX;\n    }\n\n    const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n    const percent = (left * 100) / boxWidth;\n\n    let value = convertRange(0, 100, this.min, this.max, percent);\n\n    if (this.step !== undefined) {\n      value = roundToStep(value, this.step);\n    }\n\n    this.value = value;\n    this.render();\n  }\n\n  // ------------------------- WEB COMPONENT LIFECYCLE ----------------------------\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    // initial values of attributes\n    this.min = getNumber(this.getAttribute('min'), 0);\n    this.max = getNumber(this.getAttribute('max'), 100);\n    this.value = getNumber(this.getAttribute('value'), this.min);\n    this.step = getNumber(this.getAttribute('step'), undefined);\n\n    this.sliderWidth = this.getAttribute('slider-width') || undefined;\n    this.sliderHeight = this.getAttribute('slider-height') || undefined;\n    this.sliderRadius = this.getAttribute('slider-radius') || undefined;\n\n    this.pointerWidth = this.getAttribute('pointer-width') || undefined;\n    this.pointerHeight = this.getAttribute('pointer-height') || undefined;\n    this.pointerRadius = this.getAttribute('pointer-radius') || undefined;\n\n    const percent = convertRange(this.min, this.max, 0, 100, this.value);\n\n    this.shadowRoot.innerHTML = `\n        <style>\n            ${styles} \n        </style>\n\n        <div class=\"range-slider\">\n          <div class=\"container\">\n            <div class=\"panel\"></div>\n            \n            <div class=\"container\">\n              <div class=\"pointer\" tabindex=\"0\" style=\"left: ${percent}%;\">\n                <div class=\"pointer-shape\"></div>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n    `;\n\n    // init slider elements\n    this._$slider = this.shadowRoot.querySelector('.range-slider');\n    this._$panel = this.shadowRoot.querySelector('.panel');\n    this._$pointer = this.shadowRoot.querySelector('.pointer');\n    this._$pointerShape = this.shadowRoot.querySelector('.pointer-shape');\n\n    // init slider events\n    this._$slider?.addEventListener('mousedown', this.onMouseDown);\n    this._$slider?.addEventListener('mouseup', this.onMouseUp);\n    this._$slider?.addEventListener('touchmove', this.onValueChange);\n    this._$slider?.addEventListener('touchstart', this.onValueChange);\n\n    // init pointer events\n    this._$pointer?.addEventListener('click', this.pointerClicked);\n    this._$pointer?.addEventListener('keydown', this.pointerKeyDown);\n\n    // update the initial position of the pointer\n    this.render();\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    this._$pointer?.removeEventListener('click', this.pointerClicked);\n    this._$pointer?.removeEventListener('keydown', this.pointerClicked);\n\n    this._$slider?.removeEventListener('mousedown', this.onMouseDown);\n    this._$slider?.removeEventListener('mouseup', this.onMouseUp);\n    this._$slider?.removeEventListener('touchmove', this.onValueChange);\n    this._$slider?.removeEventListener('touchstart', this.onValueChange);\n  }\n\n  /**\n   * when attributes change\n   */\n  attributeChangedCallback(attrName: string) {\n    switch (attrName) {\n      case 'min': {\n        this.min = getNumber(this.getAttribute('min'), 0);\n        this.render();\n        break;\n      }\n\n      case 'max': {\n        this.max = getNumber(this.getAttribute('max'), 100);\n        this.render();\n        break;\n      }\n\n      case 'value': {\n        this.value = getNumber(this.getAttribute('value'), this.min);\n        this.render();\n        break;\n      }\n\n      case 'step': {\n        this.step = getNumber(this.getAttribute('step'), undefined);\n        break;\n      }\n\n      case 'slider-width': {\n        this.sliderWidth = this.getAttribute('slider-width') || undefined;\n        this.render();\n        break;\n      }\n\n      case 'slider-height': {\n        this.sliderHeight = this.getAttribute('slider-height') || undefined;\n        this.render();\n        break;\n      }\n\n      case 'slider-radius': {\n        this.sliderRadius = this.getAttribute('slider-radius') || undefined;\n        this.render();\n        break;\n      }\n\n      case 'pointer-width': {\n        this.pointerWidth = this.getAttribute('pointer-width') || undefined;\n        this.render();\n        break;\n      }\n\n      case 'pointer-height': {\n        this.pointerHeight = this.getAttribute('pointer-height') || undefined;\n        this.render();\n        break;\n      }\n\n      case 'pointer-radius': {\n        this.pointerRadius = this.getAttribute('pointer-radius') || undefined;\n        this.render();\n        break;\n      }\n    }\n  }\n}\n\nexport default RangeSlider;\n", "import RangeSlider from './app/range-slider';\n\n/*\n Usage:\n Demo:\n */\n\n// register web components\nif (!customElements.get('toolcool-range-slider')) {\n  customElements.define('toolcool-range-slider', RangeSlider);\n}\n"],
  "mappings": "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",
  "names": ["convertRange", "min", "max", "a", "b", "x", "getNumber", "input", "defaultValue", "roundToStep", "num", "step", "RangeSlider", "__publicField", "num", "safe", "range", "val", "value", "min", "max", "_min", "_max", "_val", "percent", "convertRange", "_a", "evt", "step", "getNumber", "boxWidth", "boxLeft", "mouseX", "roundToStep", "_b", "_c", "_d", "_e", "_f", "styles_default", "attrName", "range_slider_default", "range_slider_default"]
}
