import RangeSlider from '../../../core';
import { IBindingLabelsPlugin } from '../../../plugins/binding-labels-plugin';
import { IGeneratedLabelsPlugin } from '../../../plugins/generated-labels-plugin';

export const getSetValuesExamples = () => {
  if(!document.querySelector('[data-examples="get-set-values"]')) return;

  try{
    const $slider1 = document.getElementById('slider-1') as RangeSlider;
    const $label1 = document.getElementById('label-1') as HTMLElement;

    $slider1.addEventListener('change', (evt: CustomEvent) => {
      $label1.textContent = evt.detail.value;
    });

    $slider1.value = 50;
  }
  catch(ex) { console.error(ex); }

  try{
    const $slider2 = document.getElementById('slider-2') as RangeSlider;
    const $label2 = document.getElementById('label-2') as HTMLElement;
    const $label3 = document.getElementById('label-3') as HTMLElement;

    $slider2.addEventListener('change', (evt: CustomEvent) => {
      $label2.textContent = evt.detail.value;
      $label3.textContent = evt.detail.value2;
    });

    $slider2.value1 = 40;
    $slider2.value2 = 80;
  }
  catch(ex) { console.error(ex); }
};

export const autoBindingValuesExamples = () => {
  if(!document.querySelector('[data-examples="auto-binding-values"]')) return;

  try{
    const $slider2 = document.getElementById('slider-2') as RangeSlider;

    ($slider2 as IBindingLabelsPlugin).valueLabel = '.value-22';
    // $slider2.setAttribute('value-label', '.value-22');
  }
  catch(ex) { console.error(ex); }
};

export const autoGeneratedLabelsExamples = () => {
  if(!document.querySelector('[data-examples="auto-generated-labels"]')) return;

  try{
    const $slider = document.getElementById('slider-3');
    if(!$slider) return;

    const $btn = document.getElementById('toggle-gen-labels');
    if(!$btn) return;

    $btn.addEventListener('click', () => {
      const $plugin = ($slider as IGeneratedLabelsPlugin);
      $plugin.generateLabels = !$plugin.generateLabels;
      // $slider.setAttribute('generate-labels', (!$plugin.generateLabels) + '');
    });
  }
  catch(ex) { console.error(ex); }
};

export const minMaxExamples = () => {
  if(!document.querySelector('[data-examples="min-max"]')) return;

  try{
    const $slider = document.getElementById('slider-4') as RangeSlider;
    const $changeBtn = document.getElementById('set-min-max-btn') as HTMLElement;
    const $resetBtn = document.getElementById('set-min-max-btn-reset') as HTMLElement;

    $changeBtn.addEventListener('click', () => {
      $slider.min = -200;
      $slider.max = 200;
    });

    $resetBtn.addEventListener('click', () => {
      $slider.min = -500;
      $slider.max = 500;
    });
  }
  catch(ex) { console.error(ex); }
};