{
  "version": 3,
  "sources": ["../src/core/templates/main.html.js", "../src/core/domain/math-provider.ts", "../src/core/dal/data-provider.ts", "../src/core/ui/panel-fill.ts", "../src/core/domain/events-provider.ts", "../src/core/ui/styles.ts", "../src/core/ui/pointer.ts", "../src/core/domain/common-provider.ts", "../src/core/plugins/plugins-manager.ts", "../src/core/ui/slider.ts", "../src/core/domain/attributes-provider.ts", "../src/core/app/range-slider.ts", "../src/core/index.ts"],
  "sourcesContent": ["export default (styles, linkHrefs) => { return ` <style> ${styles} </style> ${ linkHrefs && linkHrefs.length > 0 ? linkHrefs.map(linkHref => `<link rel=\"stylesheet\" href=\"${ linkHref }\" />`).join('') : '' } <div class=\"range-slider-box\"> <div class=\"labels-row\"> <slot name=\"value-label\"></slot> <slot name=\"value2-label\"></slot> </div> <div class=\"row\"> <slot name=\"min-label\"></slot> <div id=\"range-slider\" class=\"range-slider\"> <div class=\"container\"> <div class=\"panel\"></div> <div class=\"panel-fill\"></div> <div class=\"container\"> <div class=\"pointer\" tabindex=\"0\" role=\"slider\"> <div class=\"pointer-shape\"></div> </div> </div> </div> </div> <slot name=\"max-label\"></slot> </div> </div>`; }; ", "/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b - a) * (x - min) / (max - min) + a\n */\nexport const convertRange = (min: number, max: number, a: number, b: number, x: number) => {\n  const temp = (max - min);\n  if(temp === 0) return a;\n  return ((b - a) * (x - min)) / temp + a;\n};\n\n// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n\n// the below function should receive any\n// eslint-disable-next-line\nexport const getNumber = (input: any, defaultValue: any) : number => {\n  return isNumber(input) ? Number(input) : defaultValue;\n};\n\n/**\n * Round up to the next multiple of X,\n * where X is the step provided by the user.\n */\nexport const roundToStep = (num: number, step: number) => {\n  return step === 0 ? 0 : Math.round(num / step) * step;\n};\n\n/**\n * round to decimal places\n * https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n */\nexport const setDecimalPlaces = (num: number, decimalPlaces = Infinity) => {\n  if (decimalPlaces === Infinity) return num;\n\n  const coeff = 10 ** decimalPlaces;\n  return Math.round(num * coeff) / coeff;\n};\n\nexport const getBoolean = (val: string | null | undefined | boolean) => {\n  if(val === null || val === undefined) return false;\n  if(typeof val === 'boolean') return val;\n  return val.trim().toLowerCase() === 'true';\n};\n", "import { isNumber } from '../domain/math-provider';\n\nexport const parseData = (dataString: string | undefined | null): (string | number)[] | undefined => {\n  if (dataString === undefined || dataString === null) return undefined;\n\n  if(Array.isArray(dataString)) return dataString as (string | number)[];\n\n  const result = dataString.trim();\n  if (result === '') return undefined;\n\n  const parts = dataString.split(',');\n  const list: string[] = [];\n  let allValuesAreNumbers = true;\n\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i].trim();\n    if (part === '') continue;\n\n    list.push(part);\n\n    if (!isNumber(part)) {\n      allValuesAreNumbers = false;\n    }\n  }\n\n  if (!allValuesAreNumbers) return list;\n\n  return list.map((item) => Number(item));\n};\n\nexport const findValueIndexInData = (val: string | number, data: (string | number)[] | undefined) => {\n  return data ? data.findIndex((item) => item === val || item.toString().trim() === val.toString().trim()) : -1;\n};", "import { TypeEnum } from '../enums/type-enum';\n\nexport interface IPanelFill {\n  updatePosition: (type: TypeEnum, percent1: number, percent2: number | undefined, rightToLeft: boolean, bottomToTop: boolean) => void;\n}\n\nexport const PanelFill = ($fill: HTMLElement) : IPanelFill => {\n\n  const updatePosition = (type: TypeEnum, percent1: number, percent2: number | undefined, rightToLeft: boolean, bottomToTop: boolean) => {\n\n    if (type === TypeEnum.Vertical) {\n      $fill.style.removeProperty('width');\n      $fill.style.removeProperty('right');\n      $fill.style.removeProperty('left');\n\n      if (percent2 !== undefined) {\n        $fill.style.height = `${Math.abs(percent1 - percent2)}%`;\n      }\n      else{\n        $fill.style.height = `${ percent1 }%`;\n      }\n\n      if (bottomToTop) {\n        $fill.style.bottom = '0%';\n\n        if (percent2 !== undefined) {\n          $fill.style.top = `${Math.min(100 - percent2, 100 - percent1)}%`;\n        }\n        else{\n          $fill.style.top = 'auto';\n        }\n      }\n      else {\n        $fill.style.bottom = 'auto';\n\n        if (percent2 !== undefined) {\n          $fill.style.top = `${Math.min(percent1, percent2)}%`;\n        }\n        else{\n          $fill.style.top = '0%';\n        }\n      }\n    }\n    else {\n      $fill.style.removeProperty('height');\n      $fill.style.removeProperty('top');\n      $fill.style.removeProperty('bottom');\n\n      if (percent2 !== undefined) {\n        $fill.style.width = `${ Math.abs(percent1 - percent2) }%`;\n      }\n      else{\n        $fill.style.width = `${ percent1 }%`;\n      }\n\n      if (rightToLeft) {\n        $fill.style.right = '0%';\n\n        if (percent2 !== undefined) {\n          $fill.style.left = `${ Math.min(100 - percent2, 100 - percent1) }%`;\n        }\n        else{\n          $fill.style.left = 'auto';\n        }\n      }\n      else {\n        $fill.style.right = 'auto';\n\n        if (percent2 !== undefined) {\n          $fill.style.left = `${ Math.min(percent1, percent2) }%`;\n        }\n        else{\n          $fill.style.left = '0%';\n        }\n      }\n    }\n  };\n\n  return {\n    updatePosition,\n  };\n};", "import { getNumber, isNumber } from './math-provider';\n\nexport const sendPointerClickedEvent = ($component: HTMLElement, $pointer: HTMLElement) => {\n  $component.dispatchEvent(\n    new CustomEvent('onPointerClicked', {\n      detail: {\n        $pointer: $pointer,\n      },\n    })\n  );\n};\n\nexport const sendMouseDownEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendMouseUpEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseUp', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendOnKeyDownEvent = ($component: HTMLElement, evt: KeyboardEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onKeyDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport interface IChangeEventDetail {\n  value?: number | string | undefined,\n  value2?: number | string | undefined,\n}\n\nexport const sendChangeEvent = ($component: HTMLElement, value1: string | number | undefined, value2: string | number | undefined) => {\n  const detail: IChangeEventDetail = {\n    value: isNumber(value1) ? getNumber(value1, value1) : value1,\n    value2: isNumber(value2) ? getNumber(value2, value2) : value2,\n  };\n\n  $component.dispatchEvent(\n    new CustomEvent('change', {\n      detail,\n    })\n  );\n};", "import { AttributesEnum } from '../enums/attributes-enum';\nimport { CSSVariables } from '../enums/css-vars-enum';\n\nexport interface IStyles {\n\n  setStyle: (key: string, value: string | null | undefined, index: number) => void;\n  getStyle: (key: string, index: number) => string | undefined;\n\n  theme: string | null;\n  pointerShape: string | null;\n  pointer2Shape: string | null;\n}\n\nexport const Styles = ($component: HTMLElement, $slider: HTMLElement, $pointer2: HTMLElement | undefined) : IStyles => {\n\n  let theme: string | null = null;\n  let pointerShape: string | null = null;\n  let pointer2Shape: string | null = null;\n\n  const stylesMap: Map<string, string> = new Map();\n\n  // ----- SETTERS ---------------------------\n\n  const removeClassesStartWith = (prefix: string) => {\n    const classList = [...$slider.classList];\n    for(const className of classList){\n      if(className.startsWith(prefix)){\n        $slider.classList.remove(className);\n      }\n    }\n  };\n\n  const setTheme = (val: string | null) => {\n    theme = val;\n    if(typeof val === 'string'){\n      $slider.classList.add(`theme-${ val }`);\n    }\n    else{\n      removeClassesStartWith('theme-');\n    }\n  };\n\n  const setPointerShape = (val: string | null, index: number) => {\n\n    if(index < 2){\n      pointerShape = val;\n\n      if(typeof val === 'string'){\n        $slider.classList.add('shape', `shape-${ val }`);\n      }\n      else{\n        removeClassesStartWith('shape-');\n      }\n    }\n    else{\n      pointer2Shape = val;\n\n      if(typeof val === 'string'){\n        $slider.classList.add('shape2', `shape2-${ val }`);\n      }\n      else{\n        removeClassesStartWith('shape2-');\n      }\n    }\n  };\n\n  const getKey = (key: string, index: number) => {\n    return `${ key }-${ index }`;\n  };\n\n  const setStyle = (key: string, value: string | null | undefined, index: number) => {\n\n    if(value === null || value === undefined){\n      if(stylesMap.has(getKey(key, index))){\n        stylesMap.delete(getKey(key, index));\n      }\n\n      if(index < 2){\n        $slider.style.removeProperty(key);\n      }\n      else{\n        $pointer2?.style.removeProperty(key);\n      }\n      return;\n    }\n\n    stylesMap.set(getKey(key, index), value);\n\n    if(index < 2){\n      $slider.style.setProperty(key, value);\n    }\n    else{\n      $pointer2?.style.setProperty(key, value);\n    }\n  };\n\n  const getStyle = (key: string, index: number) => {\n    return stylesMap.get(getKey(key, index));\n  };\n\n  // ---- initialization ---------------------\n  (() => {\n\n    const list = [\n      [CSSVariables.SliderWidth, $component.getAttribute(AttributesEnum.SliderWidth), 1],\n      [CSSVariables.SliderHeight, $component.getAttribute(AttributesEnum.SliderHeight), 1],\n      [CSSVariables.SliderRadius, $component.getAttribute(AttributesEnum.SliderRadius), 1],\n\n      [CSSVariables.SliderBg, $component.getAttribute(AttributesEnum.SliderBg), 1],\n      [CSSVariables.SliderBgHover, $component.getAttribute(AttributesEnum.SliderBgHover), 1],\n      [CSSVariables.SliderBgFill, $component.getAttribute(AttributesEnum.SliderBgFill), 1],\n\n      [CSSVariables.PointerWidth, $component.getAttribute(AttributesEnum.PointerWidth), 1],\n      [CSSVariables.PointerHeight, $component.getAttribute(AttributesEnum.PointerHeight), 1],\n      [CSSVariables.PointerRadius, $component.getAttribute(AttributesEnum.PointerRadius), 1],\n      [CSSVariables.PointerBg, $component.getAttribute(AttributesEnum.PointerBg), 1],\n      [CSSVariables.PointerBgHover, $component.getAttribute(AttributesEnum.PointerBgHover), 1],\n      [CSSVariables.PointerBgFocus, $component.getAttribute(AttributesEnum.PointerBgFocus), 1],\n      [CSSVariables.PointerShadow, $component.getAttribute(AttributesEnum.PointerShadow), 1],\n      [CSSVariables.PointerShadowHover, $component.getAttribute(AttributesEnum.PointerShadowHover), 1],\n      [CSSVariables.PointerShadowFocus, $component.getAttribute(AttributesEnum.PointerShadowFocus), 1],\n      [CSSVariables.PointerBorder, $component.getAttribute(AttributesEnum.PointerBorder), 1],\n      [CSSVariables.PointerBorderHover, $component.getAttribute(AttributesEnum.PointerBorderHover), 1],\n      [CSSVariables.PointerBorderFocus, $component.getAttribute(AttributesEnum.PointerBorderFocus), 1],\n\n      [CSSVariables.PointerWidth, $component.getAttribute(AttributesEnum.Pointer2Width), 2],\n      [CSSVariables.PointerHeight, $component.getAttribute(AttributesEnum.Pointer2Height), 2],\n      [CSSVariables.PointerRadius, $component.getAttribute(AttributesEnum.Pointer2Radius), 2],\n      [CSSVariables.PointerBg, $component.getAttribute(AttributesEnum.Pointer2Bg), 2],\n      [CSSVariables.PointerBgHover, $component.getAttribute(AttributesEnum.Pointer2BgHover), 2],\n      [CSSVariables.PointerBgFocus, $component.getAttribute(AttributesEnum.Pointer2BgFocus), 2],\n      [CSSVariables.PointerShadow, $component.getAttribute(AttributesEnum.Pointer2Shadow), 2],\n      [CSSVariables.PointerShadowHover, $component.getAttribute(AttributesEnum.Pointer2ShadowHover), 2],\n      [CSSVariables.PointerShadowFocus, $component.getAttribute(AttributesEnum.Pointer2ShadowFocus), 2],\n      [CSSVariables.PointerBorder, $component.getAttribute(AttributesEnum.Pointer2Border), 2],\n      [CSSVariables.PointerBorderHover, $component.getAttribute(AttributesEnum.Pointer2BorderHover), 2],\n      [CSSVariables.PointerBorderFocus, $component.getAttribute(AttributesEnum.Pointer2BorderFocus), 2],\n    ];\n\n    for(const item of list){\n      const [cssVariableName, cssVariableValue, index] = item;\n      setStyle(cssVariableName as string, cssVariableValue as string, index as number);\n    }\n\n    setTheme($component.getAttribute(AttributesEnum.Theme));\n    setPointerShape($component.getAttribute(AttributesEnum.PointerShape), 1);\n    setPointerShape($component.getAttribute(AttributesEnum.Pointer2Shape), 2);\n  })();\n\n  return {\n    setStyle,\n    getStyle,\n\n    get theme() {\n      return theme;\n    },\n\n    set theme(val){\n      setTheme(val);\n    },\n\n    get pointerShape() {\n      return pointerShape;\n    },\n\n    set pointerShape(val){\n      setPointerShape(val, 1);\n    },\n\n    get pointer2Shape() {\n      return pointer2Shape;\n    },\n\n    set pointer2Shape(val){\n      setPointerShape(val, 2);\n    },\n\n  };\n};", "import { TypeEnum } from '../enums/type-enum';\nimport { sendOnKeyDownEvent, sendPointerClickedEvent } from '../domain/events-provider';\n\nexport interface IPointer {\n  readonly percent: number;\n  readonly $pointer: HTMLElement;\n\n  updatePosition: (percent: number, leftWall: number | undefined, rightWall: number | undefined, type: TypeEnum, rightToLeft: boolean, bottomToTop: boolean) => void;\n\n  disabled: boolean;\n\n  isClicked: ($target: HTMLElement) => boolean;\n  setCallbacks: (\n    arrowLeft: (pointerIndex: number) => void,\n    arrowRight: (pointerIndex: number) => void,\n    arrowUp: (pointerIndex: number) => void,\n    arrowDown: (pointerIndex: number) => void\n  ) => void;\n\n  setAttr: (key: string, value: string | null | undefined) => void;\n  getAttr: (key: string) => string | null;\n\n  destroy: () => void;\n}\n\nexport const Pointer = ($component: HTMLElement, $pointer: HTMLElement, index: number) : IPointer => {\n\n  // the pointer value in % in the range [0, 100] -\n  // used to render the pointer position\n  let percent = 0;\n\n  let arrowLeft: (pointerIndex: number) => void;\n  let arrowRight: (pointerIndex: number) => void;\n  let arrowUp: (pointerIndex: number) => void;\n  let arrowDown: (pointerIndex: number) => void;\n\n  let disabled = false;\n\n  // -------------- APIs -------------------------\n  const updatePosition = (_percent: number, _leftWall: number | undefined, _rightWall: number | undefined, _type: TypeEnum, _rightToLeft: boolean, _bottomToTop: boolean) => {\n    if(_rightWall !== undefined && _percent > _rightWall){\n      _percent = _rightWall;\n    }\n\n    if(_leftWall !== undefined && _percent < _leftWall){\n      _percent = _leftWall;\n    }\n\n    percent = _percent;\n    $pointer.focus();\n\n    // the below code should not change the global pointer percent,\n    // only its position on the panel\n    let percentPos = percent;\n    if((_type === TypeEnum.Vertical && _bottomToTop) ||\n      (_type === TypeEnum.Horizontal && _rightToLeft)) {\n      percentPos = 100 - percentPos;\n    }\n\n    if (_type === TypeEnum.Vertical) {\n      $pointer.style.top = `${ percentPos }%`;\n    }\n    else {\n      $pointer.style.left = `${ percentPos }%`;\n    }\n  };\n\n  const isClicked = ($target: HTMLElement) => {\n    return $target === $pointer || $pointer.contains($target);\n  };\n\n  const setCallbacks = (\n    _arrowLeft: (pointerIndex: number) => void,\n    _arrowRight: (pointerIndex: number) => void,\n    _arrowUp: (pointerIndex: number) => void,\n    _arrowDown: (pointerIndex: number) => void\n  ) => {\n    arrowLeft = _arrowLeft;\n    arrowRight = _arrowRight;\n    arrowUp = _arrowUp;\n    arrowDown = _arrowDown;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $pointer.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $pointer.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($pointer.hasAttribute('aria-disabled')) {\n        $pointer.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setAttr = (key: string, value: string | null | undefined) => {\n    if(value === null || value === undefined){\n      $pointer.removeAttribute(key);\n    }\n    else{\n      $pointer.setAttribute(key, value);\n    }\n  };\n\n  const getAttr = (key: string) => {\n    return $pointer.getAttribute(key);\n  };\n\n  // -------------- Events ------------------------\n\n  const pointerKeyDown = (evt: KeyboardEvent) => {\n    if(disabled) return;\n\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        evt.preventDefault();\n        if(typeof arrowLeft === 'function'){\n          arrowLeft(index);\n        }\n        break;\n      }\n\n      case 'ArrowRight': {\n        evt.preventDefault();\n        if(typeof arrowRight === 'function'){\n          arrowRight(index);\n        }\n        break;\n      }\n\n      case 'ArrowUp': {\n        evt.preventDefault();\n        if(typeof arrowUp === 'function'){\n          arrowUp(index);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        evt.preventDefault();\n        if(typeof arrowDown === 'function'){\n          arrowDown(index);\n        }\n        break;\n      }\n    }\n\n    sendOnKeyDownEvent($component, evt);\n  };\n\n  const pointerClicked = () => {\n    if(disabled) return;\n    sendPointerClickedEvent($component, $pointer);\n  };\n\n  // ---------- Lifecycle ------------------------\n\n  (() => {\n    $pointer.className = `pointer pointer-${ index }`;\n\n    $pointer.addEventListener('keydown', pointerKeyDown);\n    $pointer.addEventListener('click', pointerClicked);\n  })();\n\n  const destroy = () => {\n    $pointer.removeEventListener('keydown', pointerKeyDown);\n    $pointer.removeEventListener('click', pointerClicked);\n    $pointer.remove();\n  };\n\n  return {\n    $pointer,\n\n    get percent() {\n      return percent;\n    },\n\n    get disabled() {\n      return disabled;\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    updatePosition,\n\n    isClicked,\n    setCallbacks,\n    setAttr,\n    getAttr,\n\n    destroy,\n  };\n};\n\n", "import { Pointer } from '../ui/pointer';\nimport { AttributesEnum } from '../enums/attributes-enum';\n\nexport const createPointer2 = ($component: HTMLElement, $pointer1: HTMLElement) => {\n  const $pointer2 = $pointer1.cloneNode(true) as HTMLElement;\n  $pointer1.after($pointer2);\n  return Pointer($component, $pointer2, 2);\n}\n\nexport const removeFocus = () => {\n  if(!document.activeElement) return;\n\n  try{\n    (document.activeElement as HTMLElement)?.blur();\n  }\n  catch(ex){\n    // no exception\n  }\n};\n\nexport const getExternalCSSList = ($component: HTMLElement) => {\n  if(!$component) return null;\n\n  const str = $component.getAttribute(AttributesEnum.CSSLinks);\n  if(!str) return null;\n\n  const parts = str.split(';');\n  const cssList: string[] = [];\n\n  for(const part of parts){\n    if(part.trim() === '') continue;\n    cssList.push(part.trim());\n  }\n\n  return cssList;\n};", "import { IPlugin } from './interfaces';\n\ndeclare global {\n  interface Window {\n    tcRangeSliderPlugins: (() => IPlugin)[];\n    tcRangeSliderObservedAttr: string[];\n  }\n}\n\nexport interface IPluginsManager {\n  init: () => void;\n\n  update: (\n    percent1: number,\n    percent2: number | undefined,\n    textValue1: string | number | undefined,\n    textValue2: string | number | undefined,\n    min: number,\n    max: number,\n    textMin: number | string | undefined,\n    textMax: number | string | undefined,\n    rightToLeft: boolean,\n    bottomToTop: boolean\n  ) => void;\n\n  onAttrChange: (attrName: string, oldValue: string, newValue: string) =>  void;\n}\n\nexport const PluginsManager = (\n  $component: HTMLElement,\n  requestUpdatePlugins: () => void,\n  updatePointers: (value1: string | number | undefined, value2: string | number | undefined) => void\n) : IPluginsManager => {\n\n  const plugins: IPlugin[] = [];\n\n  // ------ APIs ----------------------------\n\n  const update = (\n    percent1: number,\n    percent2: number | undefined,\n    textValue1: string | number | undefined,\n    textValue2: string | number | undefined,\n    min: number,\n    max: number,\n    textMin: number | string | undefined,\n    textMax: number | string | undefined,\n    rightToLeft: boolean,\n    bottomToTop: boolean\n  ) => {\n    for(const plugin of plugins){\n      if(plugin.update && typeof plugin.update === 'function'){\n        plugin.update(\n          percent1,\n          percent2,\n          textValue1,\n          textValue2,\n          min,\n          max,\n          textMin,\n          textMax,\n          rightToLeft,\n          bottomToTop\n        );\n      }\n    }\n  };\n\n  const onAttrChange = (_attrName: string, _oldValue: string, _newValue: string) => {\n    for(const plugin of plugins){\n      if(plugin.onAttrChange && typeof plugin.onAttrChange === 'function'){\n        plugin.onAttrChange(\n          _attrName,\n          _oldValue,\n          _newValue\n        );\n      }\n    }\n  };\n\n  const defineSettersGetters = (plugin: IPlugin) => {\n    if(!plugin.gettersAndSetters) return;\n\n    for(const item of plugin.gettersAndSetters){\n      if(!item.name || !item.attributes) continue;\n\n      try{\n        Object.defineProperty($component, item.name, item.attributes);\n      }\n      catch (ex){\n        console.error('defineSettersGetters error:', ex);\n      }\n    }\n  };\n\n  // ------ initialization ------------------\n  const init = () => {\n    if(!window.tcRangeSliderPlugins) return;\n\n    for(const pluginFunc of window.tcRangeSliderPlugins){\n      const plugin = pluginFunc();\n      plugins.push(plugin);\n\n      if(plugin.init && typeof plugin.init === 'function'){\n        plugin.init($component, requestUpdatePlugins, updatePointers);\n        defineSettersGetters(plugin);\n      }\n    }\n  };\n\n  return {\n    init,\n    update,\n    onAttrChange,\n  };\n};", "import { IPointer } from './pointer';\nimport { convertRange, getBoolean, getNumber, isNumber, roundToStep, setDecimalPlaces } from '../domain/math-provider';\nimport { AttributesEnum } from '../enums/attributes-enum';\nimport { TData, TStep } from '../types';\nimport { findValueIndexInData, parseData } from '../dal/data-provider';\nimport { TypeEnum } from '../enums/type-enum';\nimport { IPanelFill, PanelFill } from './panel-fill';\nimport { sendChangeEvent, sendMouseDownEvent, sendMouseUpEvent } from '../domain/events-provider';\nimport { IStyles, Styles } from './styles';\nimport { CSSVariables } from '../enums/css-vars-enum';\nimport { CssClasses } from '../enums/css-classes-enum';\nimport { createPointer2, removeFocus } from '../domain/common-provider';\nimport { IPluginsManager, PluginsManager } from '../plugins/plugins-manager';\n\nexport interface ISlider {\n  readonly pointer1: IPointer;\n  readonly pointer2: IPointer | null;\n  readonly styles: IStyles | null;\n  readonly pluginsManager: IPluginsManager | null;\n\n  pointersOverlap: boolean;\n  pointersMinDistance: number;\n  pointersMaxDistance: number;\n  rangeDragging: boolean;\n\n  readonly min: number | string;\n  readonly max: number | string;\n  readonly step: TStep;\n  readonly data: TData;\n\n  type: TypeEnum;\n  rightToLeft: boolean;\n  bottomToTop: boolean;\n  disabled: boolean;\n  keyboardDisabled: boolean;\n  round: number;\n  animateOnClick: string | undefined;\n  ariaLabel1: string | undefined;\n  ariaLabel2: string | undefined;\n\n  setMin: (value: number | string | undefined | null) => void;\n  setMax: (value: number | string | undefined | null) => void;\n  setValue: (value: number | string | undefined | null, index: number) => void;\n  setStep: (value: TStep) => void;\n  setData: (value: TData | string | null | number) => void;\n  getTextValue: (_percent: number | undefined) => undefined | string | number;\n\n  destroy: () => void;\n}\n\nexport const MIN_DEFAULT = 0;\nexport const MAX_DEFAULT = 100;\nexport const ROUND_DEFAULT = 2;\n\nexport const Slider = ($component: HTMLElement, $slider: HTMLElement, pointer1: IPointer, pointer2: IPointer | null) : ISlider => {\n\n  let selectedPointer: IPointer | null = null;\n  let panelFill: IPanelFill | null = null;\n  let styles: IStyles | null = null;\n  let pluginsManager: IPluginsManager | null = null;\n\n  let min = MIN_DEFAULT;\n  let max = MAX_DEFAULT;\n  let step: TStep = undefined;\n  let data: TData = undefined;\n  let type: TypeEnum = TypeEnum.Horizontal;\n  let round: number = ROUND_DEFAULT;\n  let rightToLeft = false;\n  let bottomToTop = false;\n\n  let pointersOverlap = false;\n  let pointersMinDistance = 0;\n  let pointersMaxDistance = Infinity;\n\n  let rangeDragging = false;\n\n  let rangeDraggingStart: number | undefined = undefined;\n  let rangeDraggingDiff: number | undefined = undefined;\n\n  let disabled = false;\n  let keyboardDisabled = false;\n  let animateOnClick: string | undefined = undefined;\n\n  let ariaLabel1: string | undefined = undefined;\n  let ariaLabel2: string | undefined = undefined;\n\n  // -------------- EVENTS --------------------\n\n  const onMouseDown = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    onValueChange(evt);\n\n    window.addEventListener('mousemove', onValueChange);\n    window.addEventListener('mouseup', onMouseUp);\n\n    sendMouseDownEvent($component, evt);\n  };\n\n  const onMouseUp = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    rangeDraggingStart = undefined;\n    rangeDraggingDiff = undefined;\n\n    window.removeEventListener('mousemove', onValueChange);\n    window.removeEventListener('mouseup', onValueChange);\n\n    if(animateOnClick){\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n\n    sendMouseUpEvent($component, evt);\n  };\n\n  const getActivePointer = ($target: HTMLElement, percent: number) => {\n    // if only 1 pointer exists --> return it\n    if(!pointer2){\n      if(pointer1.isClicked($target) && animateOnClick){\n        $slider.classList.remove(CssClasses.AnimateOnClick);\n      }\n\n      return pointer1;\n    }\n\n    const panelFillClicked = isPanelFillClicked($target);\n\n    if(rangeDragging){\n      let _dragPercent = percent;\n      const _step = getRelativeStep(_dragPercent);\n      if(_step !== undefined){\n        _dragPercent = roundToStep(_dragPercent, _step);\n      }\n\n      if(panelFillClicked){\n        rangeDraggingStart = _dragPercent;\n        rangeDraggingDiff = 0;\n      }\n      else{\n        if(rangeDraggingStart !== undefined){\n          rangeDraggingDiff = _dragPercent - rangeDraggingStart;\n          rangeDraggingStart = _dragPercent;\n        }\n      }\n    }\n\n    if(!isPanelClicked($target) && !panelFillClicked){\n      // if clicked directly on 1 of the pointers ---> return it\n      if(pointer1.isClicked($target)){\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n\n        return pointer1;\n      }\n\n      const isPointer2Clicked = pointer2?.isClicked($target) ?? false;\n      if(isPointer2Clicked){\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n\n        return pointer2;\n      }\n\n      // if already selected pointer ---> return it\n      if(selectedPointer === pointer1) return pointer1;\n      if(selectedPointer === pointer2) return pointer2;\n    }\n\n    // find the closest pointer and return it\n    const distance1 = Math.abs(percent - pointer1.percent);\n    const distance2 = Math.abs(percent - pointer2.percent);\n    return distance1 <= distance2 ? pointer1 : pointer2;\n  };\n\n  const onValueChange = (evt: MouseEvent | TouchEvent) => {\n\n    // find the percent [0, 100] of the current mouse position in vertical or horizontal slider\n    let percent;\n\n    if(type === TypeEnum.Vertical){\n      const { height: boxHeight, top: boxTop } = $slider.getBoundingClientRect();\n      const mouseY = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientY : (evt as TouchEvent).touches[0].clientY;\n      const top = Math.min(Math.max(0, mouseY - boxTop), boxHeight);\n      percent = (top * 100) / boxHeight;\n    }\n    else{\n      const { width: boxWidth, left: boxLeft } = $slider.getBoundingClientRect();\n      const mouseX = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientX : (evt as TouchEvent).touches[0].clientX;\n      const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n      percent = (left * 100) / boxWidth;\n    }\n\n    if(rightToLeft || bottomToTop){\n      percent = 100 - percent;\n    }\n\n    selectedPointer = getActivePointer(evt.target as HTMLElement, percent);\n\n    // handle range dragging\n    if(rangeDragging && pointer2 && rangeDraggingDiff !== undefined){\n\n      const pointer1SmallerThanMin = pointer1.percent + rangeDraggingDiff < 0;\n      const pointer2GreaterThanMax = pointer2.percent + rangeDraggingDiff > 100;\n      if(pointer1SmallerThanMin || pointer2GreaterThanMax) return;\n\n      setPositions(1, pointer1.percent + rangeDraggingDiff);\n      setPositions(2, pointer2.percent + rangeDraggingDiff);\n      return;\n    }\n\n    if(selectedPointer === pointer1 && !pointer1.disabled){\n      // update the pointer percent, focus, and update its position\n      setPositions(1, percent);\n    }\n\n    if(selectedPointer === pointer2 && !pointer2?.disabled){\n      // update the pointer percent, focus, and update its position\n      setPositions(2, percent);\n    }\n  };\n\n  const pointerMouseWheel = (evt: WheelEvent) => {\n    if (disabled || document.activeElement !== $component) return;\n\n    if((selectedPointer === pointer1 && pointer1.disabled) ||\n       (selectedPointer === pointer2 && pointer2?.disabled)) return;\n\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const scrollTop = evt.deltaY < 0;\n    const rightOrBottom = rightToLeft || bottomToTop;\n    const shouldGoPrev = scrollTop ? !rightOrBottom : rightOrBottom;\n\n    if(shouldGoPrev){\n      if(selectedPointer === pointer1){\n        goPrev(1, pointer1.percent);\n      }\n\n      if(selectedPointer === pointer2){\n        goPrev(2, pointer2?.percent);\n      }\n    }\n    else{\n      if(selectedPointer === pointer1){\n        goNext(1, pointer1.percent);\n      }\n\n      if(selectedPointer === pointer2){\n        goNext(2, pointer2?.percent);\n      }\n    }\n  };\n\n  // -------------- Arrows --------------------\n\n  const arrowLeft = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go forward\n        if(pointerIndex < 2){\n          goNext(1, pointer1.percent);\n        }\n        else{\n          goNext(2, pointer2?.percent);\n        }\n      }\n      else{\n        // go backwards\n        if(pointerIndex < 2){\n          goPrev(1, pointer1.percent);\n        }\n        else{\n          goPrev(2, pointer2?.percent);\n        }\n      }\n    }\n  };\n\n  const arrowRight = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go backward\n        if(pointerIndex < 2){\n          goPrev(1, pointer1.percent);\n        }\n        else{\n          goPrev(2, pointer2?.percent);\n        }\n      }\n      else{\n        // go forward\n        if(pointerIndex < 2){\n          goNext(1, pointer1.percent);\n        }\n        else{\n          goNext(2, pointer2?.percent);\n        }\n      }\n    }\n  };\n\n  const arrowUp = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go forwards\n        if(pointerIndex < 2){\n          goNext(1, pointer1.percent);\n        }\n        else{\n          goNext(2, pointer2?.percent);\n        }\n      }\n      else{\n        // go backwards\n        if(pointerIndex < 2){\n          goPrev(1, pointer1.percent);\n        }\n        else{\n          goPrev(2, pointer2?.percent);\n        }\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n  };\n\n  const arrowDown = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go backward\n        if(pointerIndex < 2){\n          goPrev(1, pointer1.percent);\n        }\n        else{\n          goPrev(2, pointer2?.percent);\n        }\n      }\n      else{\n        // go forward\n        if(pointerIndex < 2){\n          goNext(1, pointer1.percent);\n        }\n        else{\n          goNext(2, pointer2?.percent);\n        }\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n  };\n\n  // -------------- Helpers ------------------------\n\n  const isPanelClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel');\n  };\n\n  const isPanelFillClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel-fill');\n  };\n\n  const goPrev = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    let step = getRelativeStep(_percent);\n    if(step == undefined){\n      step = 1;\n    }\n\n    _percent -= step;\n\n    if(_percent < 0){\n      _percent = 0;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const goNext = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    let step = getRelativeStep(_percent);\n    if(step == undefined){\n      step = 1;\n    }\n\n    _percent += step;\n\n    if(_percent > 100){\n      _percent = 100;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const addSecondPointer = () => {\n    pointer2 = createPointer2($component, pointer1.$pointer);\n    pointer2?.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    pointer2.disabled = getBoolean($component.getAttribute(AttributesEnum.Pointer2Disabled));\n\n    const ariaLabel2 = $component.getAttribute(AttributesEnum.AriaLabel2);\n    if(ariaLabel2){\n      setAriaLabel(ariaLabel2, 2);\n    }\n\n    updatePlugins();\n  };\n\n  const removeSecondPointer = () => {\n    pointer2?.destroy();\n    pointer2 = null;\n\n    updatePlugins();\n  };\n\n  const updatePlugins = () => {\n\n    if(!pluginsManager) return;\n    pluginsManager.update(\n      pointer1.percent,\n      pointer2?.percent,\n      getTextValue(pointer1.percent),\n      getTextValue(pointer2?.percent),\n      min,\n      max,\n      getTextMinMax(min),\n      getTextMinMax(max),\n      rightToLeft,\n      bottomToTop\n    );\n  };\n\n  const requestUpdatePlugins = () => {\n    updatePlugins();\n  };\n\n  const updatePointersFromPlugins = (value1: string | number | undefined, value2: string | number | undefined) => {\n    const val1 = (value1 === null || value1 === undefined) ? null : value1.toString();\n    const val2 = (value2 === null || value2 === undefined) ? null : value2.toString();\n    setInitialPointersValues(val1, val1, val2);\n  };\n\n  // -------------- Getters --------------------\n\n  const getPointer1LeftWall = () => {\n    if(pointersOverlap || !pointer2 || max === min) return undefined;\n    const converted = pointersMaxDistance * 100 / (max - min);\n    return Math.max(0, pointer2.percent - converted);\n  };\n\n  const getPointer1RightWall = () => {\n    if(pointersOverlap || !pointer2 || max === min) return undefined;\n    const converted = 100 * pointersMinDistance / (max - min);\n    return Math.max(0, pointer2.percent - converted);\n  };\n\n  const getPointer2LeftWall = () => {\n    if(pointersOverlap || max === min) return undefined;\n    const converted = pointersMinDistance * 100 / (max - min);\n    return Math.min(pointer1.percent + converted, 100);\n  };\n\n  const getPointer2RightWall = () => {\n    if(pointersOverlap || max === min) return undefined;\n    const converted = pointersMaxDistance * 100 / (max - min);\n    return Math.min(pointer1.percent + converted, 100);\n  };\n\n  const getRelativeStep = (_percent: number) => {\n\n    // round percent to step\n    let _step = typeof step === 'function' ? step(convertRange(0, 100, min, max, _percent), _percent) : step;\n    if(_step !== undefined){\n      _step = convertRange(min, max, 0, 100, _step as number);\n      return _step;\n    }\n\n    return undefined;\n  };\n\n  const getTextValue = (_percent: number | undefined) => {\n    if(_percent === undefined) return undefined;\n\n    const val = convertRange(0, 100, min, max, _percent);\n\n    if(data !== undefined){\n      return data[val];\n    }\n\n    return setDecimalPlaces(val, round);\n  };\n\n  const getMin = () => {\n\n    if(data !== undefined){\n      return data[min];\n    }\n\n    return min;\n  };\n\n  const getMax = () => {\n\n    if(data !== undefined){\n      return data[max];\n    }\n\n    return max;\n  };\n\n  const getTextMinMax = (minOrMax: number) => {\n    if(data !== undefined) return data[minOrMax];\n    return minOrMax;\n  };\n\n  const getPointerMin = (index: number) => {\n    if(index < 2 || pointersOverlap) return getMin();\n    return getTextValue(pointer1.percent) ?? '';\n  };\n\n  const getPointerMax = (index: number) => {\n    if(index >= 2 || pointersOverlap) return getMax();\n\n    if(pointer2){\n      return getTextValue(pointer2?.percent) ?? '';\n    }\n    else{\n      return getMax();\n    }\n  };\n\n  // -------------- Setters --------------------\n\n  const setPositions = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    // round percent to step\n    const _step = getRelativeStep(_percent);\n    if(_step !== undefined){\n      _percent = roundToStep(_percent, _step);\n    }\n\n    if(index < 2){\n      pointer1.updatePosition(_percent, getPointer1LeftWall(), getPointer1RightWall(), type, rightToLeft, bottomToTop);\n    }\n    else{\n      pointer2?.updatePosition(_percent, getPointer2LeftWall(), getPointer2RightWall(), type, rightToLeft, bottomToTop);\n    }\n\n    panelFill?.updatePosition(type, pointer1.percent, pointer2?.percent, rightToLeft, bottomToTop);\n\n    const value1text = getTextValue(pointer1.percent);\n    const value2text = getTextValue(pointer2?.percent);\n\n    updatePlugins();\n\n    if(value1text !== undefined){\n      pointer1.setAttr('aria-valuenow', value1text.toString());\n      pointer1.setAttr('aria-valuetext', value1text.toString());\n    }\n\n    if(value2text !== undefined && pointer2){\n      pointer2.setAttr('aria-valuenow', value2text.toString());\n      pointer2.setAttr('aria-valuetext', value2text.toString());\n    }\n\n    setAriaMinMax();\n\n    sendChangeEvent($component, getTextValue(pointer1.percent), getTextValue(pointer2?.percent));\n  };\n\n  /**\n   * on component init, min and max should be initialized together\n   * because their validations depend on each other;\n   */\n  const setMinMax = (_min: number | string | undefined | null, _max: number | string | undefined | null) => {\n\n    min = data !== undefined ? 0 : getNumber(_min, MIN_DEFAULT);\n    max = data !== undefined ? data.length - 1 : getNumber(_max, MAX_DEFAULT);\n\n    // perform validations\n    setMin(min);\n    setMax(max);\n  };\n\n  const setAriaMinMax = () => {\n    if(pointer1){\n      pointer1.setAttr('aria-valuemin', (getPointerMin(1) ?? '').toString());\n      pointer1.setAttr('aria-valuemax', (getPointerMax(1) ?? '').toString());\n    }\n\n    if(pointer2){\n      pointer2.setAttr('aria-valuemin', (getPointerMin(2) ?? '').toString());\n      pointer2.setAttr('aria-valuemax', (getPointerMax(2) ?? '').toString());\n    }\n  };\n\n  const setMin = (_min: number | string | undefined | null) => {\n    min = getNumber(_min, MIN_DEFAULT);\n\n    if(min > max){\n      max = min + MAX_DEFAULT;\n    }\n\n    setPositions(1, pointer1.percent);\n    setPositions(2, pointer2?.percent);\n  };\n\n  const setMax = (_max: number | string | undefined | null) => {\n\n    max = getNumber(_max, MAX_DEFAULT);\n\n    if(max < min){\n      max = min + MAX_DEFAULT;\n    }\n\n    setPositions(1, pointer1.percent);\n    setPositions(2, pointer2?.percent);\n  };\n\n  /**\n   * on component init, value, value1, and value2 should be initialized together\n   * because their validations may depend on each other;\n   */\n  const setInitialPointersValues = (_value: string | null, _value1: string | null, _value2: string | null) => {\n\n    // init initial values with pointers overlap ----------\n    pointersOverlap = true;\n    const val1str = _value1 !== null ? _value1 : _value;\n\n    setValue(val1str, 1);\n    setValue(_value2, 2);\n    pointersOverlap = false;\n\n    // add all required validations ------------------------\n    setValue(val1str, 1);\n    setValue(_value2, 2);\n  };\n\n  const setValue = (_val: number | string | undefined | null, index: number) => {\n\n    let val: number;\n\n    // handle the case when we set value2 and pointer2 doesn't exist,\n    // or the case when we remove the existing second pointer\n    if(index === 2){\n      if(_val !== undefined && _val !== null && !pointer2){\n        addSecondPointer();\n      }\n\n      if((_val === undefined || _val === null) && !!pointer2){\n        removeSecondPointer();\n        setRangeDragging(false);\n      }\n    }\n\n    if(data !== undefined){\n\n      val = (_val === undefined || _val === null) ? 0 : findValueIndexInData(_val, data);\n      if(val === -1){\n        val = 0;\n      }\n    }\n    else{\n      val = getNumber(_val, min);\n\n      if(val < min){\n        val = min;\n      }\n\n      if(val > max){\n        val = max;\n      }\n    }\n\n    // scale a range [min,max] to [a,b]\n    const percent = convertRange(min, max, 0, 100, val);\n\n    setPositions(index, percent);\n    removeFocus();\n  };\n\n  const setStep = (_step: TStep) => {\n    if(_step === null || _step === undefined){\n      step = undefined;\n      return;\n    }\n\n    if (typeof _step === 'function') {\n      step = _step;\n      return;\n    }\n\n    if(isNumber(_step)){\n      step = getNumber(_step, 1);\n\n      const diff = Math.abs(max - min);\n      if (step > diff) {\n        step = undefined;\n      }\n      return;\n    }\n\n    step = undefined;\n  };\n\n  const setPointersOverlap = (_pointersOverlap: boolean) => {\n    pointersOverlap = _pointersOverlap;\n    setPositions(1, pointer1.percent);\n  };\n\n  const setPointersMinDistance = (_pointersMinDistance: number) => {\n    if(!isNumber(_pointersMinDistance) || _pointersMinDistance < 0){\n      _pointersMinDistance = 0;\n    }\n    pointersMinDistance = _pointersMinDistance;\n  };\n\n  const setPointersMaxDistance = (_pointersMaxDistance: number) => {\n    if(!isNumber(_pointersMaxDistance) || _pointersMaxDistance < 0){\n      _pointersMaxDistance = Infinity;\n    }\n    pointersMaxDistance = _pointersMaxDistance;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $slider.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $slider.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($slider.hasAttribute('aria-disabled')) {\n        $slider.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setData = (_data: TData | string | number | null) => {\n\n    if(_data === null || _data === undefined){\n      data = undefined;\n      return;\n    }\n\n    data = parseData(_data as string);\n    if(data === undefined || data.length <= 0){\n      data = undefined;\n      return;\n    }\n\n    setMin(0);\n    setMax(data.length - 1);\n\n    if(step === undefined){\n      setStep(1);\n    }\n  };\n\n  const setType = (_type: string | null | undefined) => {\n\n    if(typeof _type === 'string'){\n      type = _type.trim().toLowerCase() === TypeEnum.Vertical ? TypeEnum.Vertical : TypeEnum.Horizontal;\n    }\n    else{\n      type = TypeEnum.Horizontal;\n    }\n\n    const $box = $component.shadowRoot?.querySelector('.range-slider-box');\n    if(!$box) return;\n    $box.className = `range-slider-box type-${ type }`;\n\n    // update fill position and pointers positions\n    setPositions(1, pointer1.percent);\n\n    if(pointer2){\n      setPositions(2, pointer2.percent);\n    }\n\n    // update accessibility properties\n    const aria = type === TypeEnum.Vertical ?  'vertical' : 'horizontal';\n    pointer1.setAttr('aria-orientation', aria);\n    pointer2?.setAttr('aria-orientation', aria);\n  };\n\n  const setRightToLeft = (_rightToLeft: boolean) => {\n    rightToLeft = _rightToLeft;\n\n    if(pointer2){\n      // change pointers order\n      if(rightToLeft){\n        // pointer1 should be after pointer2\n        pointer2.$pointer.after(pointer1.$pointer);\n      }\n      else{\n        // pointer2 should be after pointer1\n        pointer1.$pointer.after(pointer2.$pointer);\n      }\n    }\n\n    setPositions(1, pointer1.percent);\n    setPositions(2, pointer2?.percent);\n\n    updatePlugins();\n  };\n\n  const setBottomToTop = (_bottomToTop: boolean) => {\n    bottomToTop = _bottomToTop;\n\n    if(pointer2){\n      // change pointers order\n      if(bottomToTop){\n        // pointer1 should be after pointer2\n        pointer2.$pointer.after(pointer1.$pointer);\n      }\n      else{\n        // pointer2 should be after pointer1\n        pointer1.$pointer.after(pointer2.$pointer);\n      }\n    }\n\n    setPositions(1, pointer1.percent);\n    setPositions(2, pointer2?.percent);\n\n    updatePlugins();\n  };\n\n  const setRound = (_round: number) => {\n    round = getNumber(_round, ROUND_DEFAULT);\n\n    if(round < 0){\n      round = ROUND_DEFAULT;\n    }\n\n    updatePlugins();\n  };\n\n  const setAnimateOnClick = (_animateOnClick: string | null | undefined) => {\n    if(_animateOnClick === null || _animateOnClick === undefined){\n      animateOnClick = undefined;\n      $slider.style.removeProperty(CSSVariables.AnimateOnClick);\n      $slider.classList.remove(CssClasses.AnimateOnClick);\n    }\n    else{\n      animateOnClick = _animateOnClick;\n      $slider.style.setProperty(CSSVariables.AnimateOnClick, animateOnClick);\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n  };\n\n  const setAriaLabel = (_ariaLabel: string | undefined, index: number) => {\n\n    if(index < 2){\n      ariaLabel1 = _ariaLabel;\n      pointer1.setAttr('aria-label', _ariaLabel);\n    }\n    else{\n      ariaLabel2 = _ariaLabel;\n      pointer2?.setAttr('aria-label', _ariaLabel);\n    }\n  };\n\n  const setRangeDragging = (_rangeDragging: boolean) => {\n    rangeDraggingStart = undefined;\n\n    if(!pointer2){\n      rangeDragging = false;\n      $slider.classList.remove(CssClasses.RangeDragging);\n      return;\n    }\n\n    rangeDragging = _rangeDragging;\n    $slider.classList.toggle(CssClasses.RangeDragging, rangeDragging);\n  };\n\n  // initialization ....\n  (() => {\n\n    // init pointers\n    pointer1.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    pointer2?.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n\n    // init panel fill\n    const $fill = $component.shadowRoot?.querySelector('.panel-fill') as HTMLElement;\n    if($fill){\n      panelFill = PanelFill($fill);\n    }\n\n    // init main properties from HTML attributes\n    setType($component.getAttribute(AttributesEnum.Type));\n    setRightToLeft(getBoolean($component.getAttribute(AttributesEnum.RightToLeft)));\n    setBottomToTop(getBoolean($component.getAttribute(AttributesEnum.BottomToTop)));\n\n    setMinMax($component.getAttribute(AttributesEnum.Min), $component.getAttribute(AttributesEnum.Max));\n    setStep($component.getAttribute(AttributesEnum.Step));\n    setData($component.getAttribute(AttributesEnum.Data));\n\n    // set value and render the pointers ----------------------\n    setInitialPointersValues(\n      $component.getAttribute(AttributesEnum.Value),\n      $component.getAttribute(AttributesEnum.Value1),\n      $component.getAttribute(AttributesEnum.Value2)\n    );\n\n    // overlaps MUST be defined after the pointer values\n    setPointersOverlap(getBoolean($component.getAttribute(AttributesEnum.PointersOverlap)));\n    setPointersMinDistance(getNumber($component.getAttribute(AttributesEnum.PointersMinDistance), 0));\n    setPointersMaxDistance(getNumber($component.getAttribute(AttributesEnum.PointersMaxDistance), Infinity));\n    setRangeDragging(getBoolean($component.getAttribute(AttributesEnum.RangeDragging)));\n\n    // additional properties -----------------------------\n    setDisabled(getBoolean($component.getAttribute(AttributesEnum.Disabled)));\n    keyboardDisabled = getBoolean($component.getAttribute(AttributesEnum.KeyboardDisabled))\n    pointer1.disabled = getBoolean($component.getAttribute(AttributesEnum.Pointer1Disabled));\n\n    if(pointer2){\n      pointer2.disabled = getBoolean($component.getAttribute(AttributesEnum.Pointer2Disabled));\n    }\n\n    setRound(getNumber($component.getAttribute(AttributesEnum.Round), ROUND_DEFAULT));\n\n    const ariaLabel1 = $component.getAttribute(AttributesEnum.AriaLabel1);\n    if(ariaLabel1 !== null){\n      setAriaLabel(ariaLabel1, 1);\n    }\n\n    const ariaLabel2 = $component.getAttribute(AttributesEnum.AriaLabel2);\n    if(ariaLabel2 !== null && pointer2){\n      setAriaLabel(ariaLabel2, 2);\n    }\n\n    // init styles ---------\n    styles = Styles($component, $slider, pointer2?.$pointer);\n    setAnimateOnClick($component.getAttribute(AttributesEnum.AnimateOnClick));\n\n    // init slider events -------------------------------------\n    $slider.addEventListener('mousedown', onMouseDown);\n    $slider.addEventListener('mouseup', onMouseUp);\n    $slider.addEventListener('touchmove', onValueChange);\n    $slider.addEventListener('touchstart', onValueChange);\n    document.addEventListener('wheel', pointerMouseWheel, { passive: false });\n\n    // init plugins ---------------\n    pluginsManager = PluginsManager($component, requestUpdatePlugins, updatePointersFromPlugins);\n    pluginsManager.init();\n  })();\n\n  const destroy = () => {\n    $slider.removeEventListener('mousedown', onMouseDown);\n    $slider.removeEventListener('mouseup', onMouseUp);\n    $slider.removeEventListener('touchmove', onValueChange);\n    $slider.removeEventListener('touchstart', onValueChange);\n    document.removeEventListener('wheel', pointerMouseWheel);\n\n    pointer1.destroy();\n    pointer2?.destroy();\n  };\n\n  return {\n    get pointer1() {\n      return pointer1;\n    },\n\n    get pointer2() {\n      return pointer2;\n    },\n\n    get styles() {\n      return styles;\n    },\n\n    get pluginsManager() {\n      return pluginsManager;\n    },\n\n    get min() {\n      return getMin();\n    },\n\n    get max() {\n      return getMax();\n    },\n\n    get step() {\n      return step;\n    },\n\n    get pointersOverlap() {\n      return pointersOverlap;\n    },\n\n    set pointersOverlap(_pointersOverlap) {\n      setPointersOverlap(_pointersOverlap);\n    },\n\n    get pointersMinDistance() {\n      return pointersMinDistance;\n    },\n\n    set pointersMinDistance(_pointersMinDistance) {\n      setPointersMinDistance(_pointersMinDistance);\n    },\n\n    get pointersMaxDistance() {\n      return pointersMaxDistance;\n    },\n\n    set pointersMaxDistance(_pointersMaxDistance) {\n      setPointersMaxDistance(_pointersMaxDistance);\n    },\n\n    get disabled() {\n      return disabled;\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    get data() {\n      return data;\n    },\n\n    get type() {\n      return type;\n    },\n\n    set type(_type) {\n      setType(_type);\n    },\n\n    get rightToLeft() {\n      return rightToLeft;\n    },\n\n    set rightToLeft(_rightToLeft) {\n      setRightToLeft(_rightToLeft);\n    },\n\n    get bottomToTop() {\n      return bottomToTop;\n    },\n\n    set bottomToTop(_bottomToTop) {\n      setBottomToTop(_bottomToTop);\n    },\n\n    get round() {\n      return round;\n    },\n\n    set round(_round) {\n      setRound(_round);\n    },\n\n    get animateOnClick() {\n      return animateOnClick;\n    },\n\n    set animateOnClick(_animateOnClick) {\n      setAnimateOnClick(_animateOnClick);\n    },\n\n    get keyboardDisabled() {\n      return keyboardDisabled;\n    },\n\n    set keyboardDisabled(_keyboardDisabled){\n      keyboardDisabled = _keyboardDisabled;\n    },\n\n    get ariaLabel1(){\n      return ariaLabel1;\n    },\n\n    set ariaLabel1(_ariaLabel1){\n      setAriaLabel(_ariaLabel1, 1);\n    },\n\n    get ariaLabel2(){\n      return ariaLabel2;\n    },\n\n    set ariaLabel2(_ariaLabel2){\n      setAriaLabel(_ariaLabel2, 2);\n    },\n\n    get rangeDragging() {\n      return rangeDragging;\n    },\n\n    set rangeDragging(_rangeDragging) {\n      setRangeDragging(_rangeDragging);\n    },\n\n    setMin,\n    setMax,\n    setValue,\n    setStep,\n    setData,\n    getTextValue,\n    destroy,\n  };\n};\n\n", "import { AttributesEnum } from '../enums/attributes-enum';\nimport { ISlider, ROUND_DEFAULT } from '../ui/slider';\nimport { getBoolean, getNumber } from './math-provider';\nimport { TypeEnum } from '../enums/type-enum';\nimport { CSSVariables } from '../enums/css-vars-enum';\n\nexport const observedAttributes = [\n  AttributesEnum.Value,\n  AttributesEnum.Value1,\n  AttributesEnum.Value2,\n\n  AttributesEnum.PointersOverlap,\n  AttributesEnum.PointersMinDistance,\n  AttributesEnum.PointersMaxDistance,\n\n  AttributesEnum.Data,\n  AttributesEnum.Min,\n  AttributesEnum.Max,\n  AttributesEnum.Step,\n  AttributesEnum.Round,\n  AttributesEnum.Type,\n  AttributesEnum.Theme,\n  AttributesEnum.RightToLeft,\n  AttributesEnum.BottomToTop,\n\n  AttributesEnum.Disabled,\n  AttributesEnum.KeyboardDisabled,\n  AttributesEnum.Pointer1Disabled,\n  AttributesEnum.Pointer2Disabled,\n  AttributesEnum.RangeDragging,\n\n  AttributesEnum.SliderWidth,\n  AttributesEnum.SliderHeight,\n  AttributesEnum.SliderRadius,\n\n  AttributesEnum.SliderBg,\n  AttributesEnum.SliderBgHover,\n  AttributesEnum.SliderBgFill,\n\n  AttributesEnum.PointerWidth,\n  AttributesEnum.PointerHeight,\n  AttributesEnum.PointerRadius,\n  AttributesEnum.PointerShape,\n  AttributesEnum.PointerBg,\n  AttributesEnum.PointerBgHover,\n  AttributesEnum.PointerBgFocus,\n  AttributesEnum.PointerShadow,\n  AttributesEnum.PointerShadowHover,\n  AttributesEnum.PointerShadowFocus,\n  AttributesEnum.PointerBorder,\n  AttributesEnum.PointerBorderHover,\n  AttributesEnum.PointerBorderFocus,\n\n  AttributesEnum.Pointer2Width,\n  AttributesEnum.Pointer2Height,\n  AttributesEnum.Pointer2Radius,\n  AttributesEnum.Pointer2Shape,\n  AttributesEnum.Pointer2Bg,\n  AttributesEnum.Pointer2BgHover,\n  AttributesEnum.Pointer2BgFocus,\n  AttributesEnum.Pointer2Shadow,\n  AttributesEnum.Pointer2ShadowHover,\n  AttributesEnum.Pointer2ShadowFocus,\n  AttributesEnum.Pointer2Border,\n  AttributesEnum.Pointer2BorderHover,\n  AttributesEnum.Pointer2BorderFocus,\n\n  AttributesEnum.AriaLabel1,\n  AttributesEnum.AriaLabel2,\n\n  AttributesEnum.AnimateOnClick,\n];\n\nif(window.tcRangeSliderObservedAttr){\n  for(const attr of window.tcRangeSliderObservedAttr){\n    observedAttributes.push(attr as AttributesEnum);\n  }\n}\n\nexport const onAttributesChange = (slider: ISlider, attrName: string, _oldValue: string, newValue: string) => {\n  switch (attrName) {\n\n    case AttributesEnum.Min: {\n      slider.setMin(newValue);\n      break;\n    }\n\n    case AttributesEnum.Max: {\n      slider.setMax(newValue);\n      break;\n    }\n\n    case AttributesEnum.Value: {\n      slider.setValue(newValue, 1);\n      break;\n    }\n\n    case AttributesEnum.Value1: {\n      slider.setValue(newValue, 1);\n      break;\n    }\n\n    case AttributesEnum.Value2: {\n      slider.setValue(newValue, 2);\n      break;\n    }\n\n    case AttributesEnum.Step: {\n      slider.setStep(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersOverlap: {\n      slider.pointersOverlap = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMinDistance: {\n      slider.pointersMinDistance = getNumber(newValue, 0);\n      break;\n    }\n\n    case AttributesEnum.RangeDragging: {\n      slider.rangeDragging = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMaxDistance: {\n      slider.pointersMaxDistance = getNumber(newValue, Infinity);\n      break;\n    }\n\n    case AttributesEnum.Disabled: {\n      slider.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.KeyboardDisabled: {\n      slider.keyboardDisabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Pointer1Disabled: {\n      slider.pointer1.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Pointer2Disabled: {\n      if(slider.pointer2){\n        slider.pointer2.disabled = getBoolean(newValue);\n      }\n      break;\n    }\n\n    case AttributesEnum.Data: {\n      slider.setData(newValue);\n      break;\n    }\n\n    case AttributesEnum.Type: {\n      slider.type = newValue as TypeEnum;\n      break;\n    }\n\n    case AttributesEnum.RightToLeft: {\n      slider.rightToLeft = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.BottomToTop: {\n      slider.bottomToTop = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Round: {\n      slider.round = getNumber(newValue, ROUND_DEFAULT);\n      break;\n    }\n\n    case AttributesEnum.AriaLabel1: {\n      slider.ariaLabel1 = newValue;\n      break;\n    }\n\n    case AttributesEnum.AriaLabel2: {\n      slider.ariaLabel2 = newValue;\n      break;\n    }\n\n    case AttributesEnum.SliderWidth: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.SliderWidth, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.SliderHeight: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.SliderHeight, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.SliderRadius: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.SliderRadius, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.SliderBg: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.SliderBg, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.SliderBgHover: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.SliderBgHover, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.SliderBgFill: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.SliderBgFill, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerWidth: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerWidth, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2Width: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerWidth, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerHeight: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerHeight, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2Height: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerHeight, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerRadius: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerRadius, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2Radius: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerRadius, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerBg: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBg, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2Bg: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBg, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerBgHover: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBgHover, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2BgHover: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBgHover, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerBgFocus: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBgFocus, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2BgFocus: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBgFocus, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerShadow: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerShadow, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2Shadow: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerShadow, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerShadowHover: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerShadowHover, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2ShadowHover: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerShadowHover, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerShadowFocus: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerShadowFocus, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2ShadowFocus: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerShadowFocus, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerBorder: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBorder, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2Border: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBorder, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerBorderHover: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBorderHover, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2BorderHover: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBorderHover, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerBorderFocus: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBorderFocus, newValue, 1);\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2BorderFocus: {\n      if(slider.styles){\n        slider.styles.setStyle(CSSVariables.PointerBorderFocus, newValue, 2);\n      }\n      break;\n    }\n\n    case AttributesEnum.Theme: {\n      if(slider.styles){\n        slider.styles.theme = newValue;\n      }\n      break;\n    }\n\n    case AttributesEnum.PointerShape: {\n      if(slider.styles){\n        slider.styles.pointerShape = newValue;\n      }\n      break;\n    }\n\n    case AttributesEnum.Pointer2Shape: {\n      if(slider.styles){\n        slider.styles.pointer2Shape = newValue;\n      }\n      break;\n    }\n\n    case AttributesEnum.AnimateOnClick: {\n      slider.animateOnClick = newValue;\n      break;\n    }\n  }\n\n  if(!slider || !slider.pluginsManager) return;\n  slider.pluginsManager.onAttrChange(attrName, _oldValue, newValue);\n};", "import mainTemplate from '../templates/main.html.js'; // esbuild custom loader\nimport styles from './styles.pcss';\nimport { observedAttributes, onAttributesChange } from '../domain/attributes-provider';\nimport { ISlider, ROUND_DEFAULT, Slider } from '../ui/slider';\nimport { IPointer, Pointer } from '../ui/pointer';\nimport { TData, TStep } from '../types';\nimport { getBoolean, getNumber, isNumber } from '../domain/math-provider';\nimport { TypeEnum } from '../enums/type-enum';\nimport { CSSVariables } from '../enums/css-vars-enum';\nimport { createPointer2, getExternalCSSList, removeFocus } from '../domain/common-provider';\n\n/**\n * Usage: <toolcool-range-slider value=\"0\" min=\"0\" max=\"100\"></toolcool-range-slider>\n * Documentation: https://github.com/toolcool-org/toolcool-range-slider\n */\nclass RangeSlider extends HTMLElement {\n\n  /**\n   * the attributes list that are observed by web component;\n   * if attribute changes ---> the web component will update accordingly\n   */\n  static get observedAttributes() {\n    return observedAttributes;\n  }\n\n  public slider: ISlider | undefined;\n\n  private _externalCSSList: string[] | null = [];\n\n  // -------------- APIs --------------------\n\n  public set step(_step: TStep) {\n    if(this.slider){\n      this.slider.setStep(_step);\n    }\n  }\n\n  public get step() {\n    return this.slider?.step;\n  }\n\n  public set disabled(_disabled: boolean) {\n    if(this.slider){\n      this.slider.disabled = _disabled;\n    }\n  }\n\n  public get disabled() {\n    return this.slider?.disabled ?? false;\n  }\n\n  public set value(_value: string | number | undefined) {\n    this.slider?.setValue(_value, 1);\n  }\n\n  public get value() {\n    if(!this.slider) return undefined;\n    const val = this.slider.getTextValue(this.slider.pointer1.percent);\n    return isNumber(val) ? getNumber(val, val) : val;\n  }\n\n  /**\n   * value1 is alias for value\n   */\n  public set value1(val: string | number | undefined) {\n    this.value = val;\n  }\n\n  /**\n   * value1 is alias for value\n   */\n  public get value1() {\n    return this.value;\n  }\n\n  public set value2(_value2: string | number | undefined) {\n    this.slider?.setValue(_value2, 2);\n  }\n\n  public get value2() {\n    if(!this.slider || !this.slider.pointer2) return undefined;\n    const val = this.slider.getTextValue(this.slider.pointer2.percent);\n    return isNumber(val) ? getNumber(val, val) : val;\n  }\n\n  public set data(_data: TData) {\n    this.slider?.setData(_data);\n  }\n\n  public get data() {\n    return this.slider?.data;\n  }\n\n  public set min(_min: number | string | undefined | null) {\n    this.slider?.setMin(_min);\n  }\n\n  public get min() {\n    return this.slider?.min;\n  }\n\n  public set max(_max: number | string | undefined | null) {\n    this.slider?.setMax(_max);\n  }\n\n  public get max() {\n    return this.slider?.max;\n  }\n\n  public set round(_round: number) {\n    if(!this.slider) return;\n    this.slider.round = _round;\n  }\n\n  public get round() {\n    return this.slider?.round ?? ROUND_DEFAULT;\n  }\n\n  public set type(_type: TypeEnum | undefined) {\n    if(!this.slider) return;\n    this.slider.type = _type ?? TypeEnum.Horizontal;\n  }\n\n  public get type() {\n    return this.slider?.type || TypeEnum.Horizontal;\n  }\n\n  public set pointersOverlap(_pointersOverlap: boolean) {\n    if(!this.slider) return;\n    this.slider.pointersOverlap = _pointersOverlap;\n  }\n\n  public get pointersOverlap() {\n    return this.slider?.pointersOverlap ?? false;\n  }\n\n  public set pointersMinDistance(_pointersMinDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMinDistance = _pointersMinDistance;\n  }\n\n  public get pointersMinDistance() {\n    return this.slider?.pointersMinDistance ?? 0;\n  }\n\n  public set pointersMaxDistance(_pointersMaxDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMaxDistance = _pointersMaxDistance;\n  }\n\n  public get pointersMaxDistance() {\n    return this.slider?.pointersMaxDistance ?? Infinity;\n  }\n\n  public set theme(_theme: string | null) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.theme = _theme;\n  }\n\n  public get theme() {\n    return this.slider?.styles?.theme ?? null;\n  }\n\n  public set rtl(_rtl: boolean) {\n    if(!this.slider) return;\n    this.slider.rightToLeft = _rtl;\n  }\n\n  public get rtl() {\n    return this.slider?.rightToLeft ?? false;\n  }\n\n  public set btt(_btt: boolean) {\n    if(!this.slider) return;\n    this.slider.bottomToTop = _btt;\n  }\n\n  public get btt() {\n    return this.slider?.bottomToTop ?? false;\n  }\n\n  public set keyboardDisabled(_keyboardDisabled: boolean) {\n    if(!this.slider) return;\n    this.slider.keyboardDisabled = _keyboardDisabled;\n  }\n\n  public get keyboardDisabled() {\n    return this.slider?.keyboardDisabled ?? false;\n  }\n\n  public set animateOnClick(_animateOnClick: string | undefined) {\n    if(!this.slider) return;\n    this.slider.animateOnClick = _animateOnClick;\n  }\n\n  public get animateOnClick() {\n    return this.slider?.animateOnClick;\n  }\n\n  public set sliderWidth(_sliderWidth: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.SliderWidth, _sliderWidth, 1);\n  }\n\n  public get sliderWidth() {\n    return this.slider?.styles?.getStyle(CSSVariables.SliderWidth, 1);\n  }\n\n  public set sliderHeight(_sliderHeight: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.SliderHeight, _sliderHeight, 1);\n  }\n\n  public get sliderHeight() {\n    return this.slider?.styles?.getStyle(CSSVariables.SliderHeight, 1);\n  }\n\n  public set sliderRadius(_sliderRadius: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.SliderRadius, _sliderRadius, 1);\n  }\n\n  public get sliderRadius() {\n    return this.slider?.styles?.getStyle(CSSVariables.SliderRadius, 1);\n  }\n\n  public set sliderBg(_sliderBg: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.SliderBg, _sliderBg, 1);\n  }\n\n  public get sliderBg() {\n    return this.slider?.styles?.getStyle(CSSVariables.SliderBg, 1);\n  }\n\n  public set sliderBgHover(_sliderBgHover: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.SliderBgHover, _sliderBgHover, 1);\n  }\n\n  public get sliderBgHover() {\n    return this.slider?.styles?.getStyle(CSSVariables.SliderBgHover, 1);\n  }\n\n  public set sliderBgFill(_sliderBgFill: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.SliderBgFill, _sliderBgFill, 1);\n  }\n\n  public get sliderBgFill() {\n    return this.slider?.styles?.getStyle(CSSVariables.SliderBgFill, 1);\n  }\n\n  public set pointerWidth(_pointerWidth: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerWidth, _pointerWidth, 1);\n  }\n\n  public get pointerWidth() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerWidth, 1);\n  }\n\n  public set pointer2Width(_pointerWidth: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerWidth, _pointerWidth, 2);\n  }\n\n  public get pointer2Width() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerWidth, 2);\n  }\n\n  public set pointerHeight(_pointerHeight: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerHeight, _pointerHeight, 1);\n  }\n\n  public get pointerHeight() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerHeight, 1);\n  }\n\n  public set pointer2Height(_pointerHeight: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerHeight, _pointerHeight, 2);\n  }\n\n  public get pointer2Height() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerHeight, 2);\n  }\n\n  public set pointerRadius(_pointerRadius: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerRadius, _pointerRadius, 1);\n  }\n\n  public get pointerRadius() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerRadius, 1);\n  }\n\n  public set pointer2Radius(_pointerRadius: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerRadius, _pointerRadius, 2);\n  }\n\n  public get pointer2Radius() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerRadius, 2);\n  }\n\n  public set pointerShape(_pointerShape: string | null) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.pointerShape = _pointerShape;\n  }\n\n  public get pointerShape() {\n    return this.slider?.styles?.pointerShape ?? null;\n  }\n\n  public set pointer2Shape(_pointerShape: string | null) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.pointer2Shape = _pointerShape;\n  }\n\n  public get pointer2Shape() {\n    return this.slider?.styles?.pointer2Shape ?? null;\n  }\n\n  public set pointerBg(_pointerBg: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBg, _pointerBg, 1);\n  }\n\n  public get pointerBg() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBg, 1);\n  }\n\n  public set pointer2Bg(_pointerBg: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBg, _pointerBg, 2);\n  }\n\n  public get pointer2Bg() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBg, 2);\n  }\n\n  public set pointerBgHover(_pointerBgHover: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBgHover, _pointerBgHover, 1);\n  }\n\n  public get pointerBgHover() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBgHover, 1);\n  }\n\n  public set pointer2BgHover(_pointerBgHover: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBgHover, _pointerBgHover, 2);\n  }\n\n  public get pointer2BgHover() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBgHover, 2);\n  }\n\n  public set pointerBgFocus(_pointerBgFocus: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBgFocus, _pointerBgFocus, 1);\n  }\n\n  public get pointerBgFocus() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBgFocus, 1);\n  }\n\n  public set pointer2BgFocus(_pointerBgFocus: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBgFocus, _pointerBgFocus, 2);\n  }\n\n  public get pointer2BgFocus() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBgFocus, 2);\n  }\n\n  public set pointerShadow(_pointerShadow: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerShadow, _pointerShadow, 1);\n  }\n\n  public get pointerShadow() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerShadow, 1);\n  }\n\n  public set pointer2Shadow(_pointerShadow: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerShadow, _pointerShadow, 2);\n  }\n\n  public get pointer2Shadow() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerShadow, 2);\n  }\n\n  public set pointerShadowHover(_pointerShadowHover: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerShadowHover, _pointerShadowHover, 1);\n  }\n\n  public get pointerShadowHover() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerShadowHover, 1);\n  }\n\n  public set pointer2ShadowHover(_pointerShadowHover: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerShadowHover, _pointerShadowHover, 2);\n  }\n\n  public get pointer2ShadowHover() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerShadowHover, 2);\n  }\n\n  public set pointerShadowFocus(_pointerShadowFocus: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerShadowFocus, _pointerShadowFocus, 1);\n  }\n\n  public get pointerShadowFocus() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerShadowFocus, 1);\n  }\n\n  public set pointer2ShadowFocus(_pointerShadowFocus: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerShadowFocus, _pointerShadowFocus, 2);\n  }\n\n  public get pointer2ShadowFocus() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerShadowFocus, 2);\n  }\n\n  public set pointerBorder(_pointerBorder: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBorder, _pointerBorder, 1);\n  }\n\n  public get pointerBorder() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBorder, 1);\n  }\n\n  public set pointer2Border(_pointerBorder: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBorder, _pointerBorder, 2);\n  }\n\n  public get pointer2Border() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBorder, 2);\n  }\n\n  public set pointerBorderHover(_pointerBorderHover: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBorderHover, _pointerBorderHover, 1);\n  }\n\n  public get pointerBorderHover() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBorderHover, 1);\n  }\n\n  public set pointer2BorderHover(_pointerBorderHover: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBorderHover, _pointerBorderHover, 2);\n  }\n\n  public get pointer2BorderHover() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBorderHover, 2);\n  }\n\n  public set pointerBorderFocus(_pointerBorderFocus: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBorderFocus, _pointerBorderFocus, 1);\n  }\n\n  public get pointerBorderFocus() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBorderFocus, 1);\n  }\n\n  public set pointer2BorderFocus(_pointerBorderFocus: string | undefined) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.setStyle(CSSVariables.PointerBorderFocus, _pointerBorderFocus, 2);\n  }\n\n  public get pointer2BorderFocus() {\n    return this.slider?.styles?.getStyle(CSSVariables.PointerBorderFocus, 2);\n  }\n\n  public set pointer1Disabled(_pointer1Disabled: boolean) {\n    if(!this.slider) return;\n    this.slider.pointer1.disabled = _pointer1Disabled;\n  }\n\n  public get pointer1Disabled() {\n    return this.slider?.pointer1.disabled ?? false;\n  }\n\n  public set pointer2Disabled(_pointer2Disabled: boolean) {\n    if(!this.slider || !this.slider.pointer2) return;\n    this.slider.pointer2.disabled = _pointer2Disabled;\n  }\n\n  public get pointer2Disabled() {\n    return this.slider?.pointer2?.disabled ?? false;\n  }\n\n  public set ariaLabel1(_ariaLabel1: string | undefined) {\n    if(!this.slider) return;\n    this.slider.ariaLabel1 = _ariaLabel1;\n  }\n\n  public get ariaLabel1() {\n    return this.slider?.pointer1.getAttr('aria-label') ?? undefined;\n  }\n\n  public set ariaLabel2(_ariaLabel2: string | undefined) {\n    if(!this.slider) return;\n    this.slider.ariaLabel2 = _ariaLabel2;\n  }\n\n  public get ariaLabel2() {\n    return this.slider?.pointer2?.getAttr('aria-label') ?? undefined;\n  }\n\n  public get rangeDragging(){\n    return this.slider?.rangeDragging ?? false;\n  }\n\n  public set rangeDragging(_rangeDragging: boolean | string | undefined | null) {\n    if(this.slider){\n      this.slider.rangeDragging = getBoolean(_rangeDragging);\n    }\n  }\n\n  public get externalCSSList() {\n    return this._externalCSSList;\n  }\n\n  // ----------------------------------------------\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    // get optional external CSS list\n    this._externalCSSList = getExternalCSSList(this);\n    this.shadowRoot.innerHTML = mainTemplate(styles, this._externalCSSList);\n\n    // init first pointer\n    const $pointer1 = this.shadowRoot?.querySelector('.pointer') as HTMLElement;\n    const pointer1 = $pointer1 ? Pointer(this, $pointer1, 1) : null;\n    if(!pointer1) return;\n\n    // init second pointer\n    let pointer2: IPointer | null = null;\n    if(this.getAttribute('value2') !== null){\n      pointer2 = createPointer2(this, $pointer1);\n    }\n\n    // init the slider\n    const $slider = this.shadowRoot?.getElementById('range-slider') as HTMLElement;\n    if(!$slider) return;\n    this.slider = Slider(this, $slider, pointer1, pointer2);\n\n    removeFocus();\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    if(!this.slider) return\n\n    this.slider.destroy();\n  }\n\n  attributeChangedCallback(attrName: string, oldValue: string, newValue: string) {\n    if(!this.slider) return;\n\n    onAttributesChange(this.slider, attrName, oldValue, newValue);\n  }\n}\n\nexport default RangeSlider;", "import RangeSlider from './app/range-slider';\n\ndeclare global {\n  interface Window {\n    tcRangeSlider: typeof RangeSlider;\n  }\n}\n\nwindow.tcRangeSlider = RangeSlider;\n\n// register web components\nif (!customElements.get('toolcool-range-slider')) {\n  customElements.define('toolcool-range-slider', RangeSlider);\n}\n\nif (!customElements.get('tc-range-slider')) {\n  customElements.define('tc-range-slider', class extends RangeSlider{});\n}\n\n"],
  "mappings": "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",
  "names": ["main_html_default", "styles", "linkHrefs", "linkHref", "convertRange", "min", "max", "a", "b", "x", "temp", "isNumber", "input", "getNumber", "defaultValue", "roundToStep", "num", "step", "setDecimalPlaces", "decimalPlaces", "coeff", "__pow", "getBoolean", "val", "parseData", "dataString", "parts", "list", "allValuesAreNumbers", "i", "part", "isNumber", "item", "findValueIndexInData", "val", "data", "PanelFill", "$fill", "type", "percent1", "percent2", "rightToLeft", "bottomToTop", "sendPointerClickedEvent", "$component", "$pointer", "sendMouseDownEvent", "evt", "sendMouseUpEvent", "sendOnKeyDownEvent", "sendChangeEvent", "value1", "value2", "detail", "isNumber", "getNumber", "Styles", "$component", "$slider", "$pointer2", "theme", "pointerShape", "pointer2Shape", "stylesMap", "removeClassesStartWith", "prefix", "classList", "className", "setTheme", "val", "setPointerShape", "index", "getKey", "key", "setStyle", "value", "getStyle", "list", "item", "cssVariableName", "cssVariableValue", "Pointer", "$component", "$pointer", "index", "percent", "arrowLeft", "arrowRight", "arrowUp", "arrowDown", "disabled", "updatePosition", "_percent", "_leftWall", "_rightWall", "_type", "_rightToLeft", "_bottomToTop", "percentPos", "isClicked", "$target", "setCallbacks", "_arrowLeft", "_arrowRight", "_arrowUp", "_arrowDown", "setDisabled", "_disabled", "setAttr", "key", "value", "getAttr", "pointerKeyDown", "evt", "sendOnKeyDownEvent", "pointerClicked", "sendPointerClickedEvent", "createPointer2", "$component", "$pointer1", "$pointer2", "Pointer", "removeFocus", "_a", "ex", "getExternalCSSList", "str", "parts", "cssList", "part", "PluginsManager", "$component", "requestUpdatePlugins", "updatePointers", "plugins", "update", "percent1", "percent2", "textValue1", "textValue2", "min", "max", "textMin", "textMax", "rightToLeft", "bottomToTop", "plugin", "onAttrChange", "_attrName", "_oldValue", "_newValue", "defineSettersGetters", "item", "ex", "pluginFunc", "MIN_DEFAULT", "MAX_DEFAULT", "ROUND_DEFAULT", "Slider", "$component", "$slider", "pointer1", "pointer2", "selectedPointer", "panelFill", "styles", "pluginsManager", "min", "max", "step", "data", "type", "round", "rightToLeft", "bottomToTop", "pointersOverlap", "pointersMinDistance", "pointersMaxDistance", "rangeDragging", "rangeDraggingStart", "rangeDraggingDiff", "disabled", "keyboardDisabled", "animateOnClick", "ariaLabel1", "ariaLabel2", "onMouseDown", "evt", "onValueChange", "onMouseUp", "sendMouseDownEvent", "sendMouseUpEvent", "getActivePointer", "$target", "percent", "_a", "panelFillClicked", "isPanelFillClicked", "_dragPercent", "_step", "getRelativeStep", "roundToStep", "isPanelClicked", "distance1", "distance2", "boxHeight", "boxTop", "mouseY", "boxWidth", "boxLeft", "mouseX", "pointer1SmallerThanMin", "pointer2GreaterThanMax", "setPositions", "pointerMouseWheel", "scrollTop", "rightOrBottom", "goPrev", "goNext", "arrowLeft", "pointerIndex", "arrowRight", "arrowUp", "arrowDown", "index", "_percent", "addSecondPointer", "createPointer2", "getBoolean", "setAriaLabel", "updatePlugins", "removeSecondPointer", "getTextValue", "getTextMinMax", "requestUpdatePlugins", "updatePointersFromPlugins", "value1", "value2", "val1", "val2", "setInitialPointersValues", "getPointer1LeftWall", "converted", "getPointer1RightWall", "getPointer2LeftWall", "getPointer2RightWall", "convertRange", "val", "setDecimalPlaces", "getMin", "getMax", "minOrMax", "getPointerMin", "getPointerMax", "value1text", "value2text", "setAriaMinMax", "sendChangeEvent", "setMinMax", "_min", "_max", "getNumber", "setMin", "setMax", "_b", "_c", "_d", "_value", "_value1", "_value2", "val1str", "setValue", "_val", "setRangeDragging", "findValueIndexInData", "removeFocus", "setStep", "isNumber", "diff", "setPointersOverlap", "_pointersOverlap", "setPointersMinDistance", "_pointersMinDistance", "setPointersMaxDistance", "_pointersMaxDistance", "setDisabled", "_disabled", "setData", "_data", "parseData", "setType", "_type", "$box", "aria", "setRightToLeft", "_rightToLeft", "setBottomToTop", "_bottomToTop", "setRound", "_round", "setAnimateOnClick", "_animateOnClick", "_ariaLabel", "_rangeDragging", "$fill", "PanelFill", "Styles", "PluginsManager", "_keyboardDisabled", "_ariaLabel1", "_ariaLabel2", "observedAttributes", "attr", "onAttributesChange", "slider", "attrName", "_oldValue", "newValue", "getBoolean", "getNumber", "ROUND_DEFAULT", "RangeSlider", "__publicField", "observedAttributes", "_step", "_a", "_disabled", "_b", "_value", "val", "isNumber", "getNumber", "_value2", "_data", "_min", "_max", "_round", "ROUND_DEFAULT", "_type", "_pointersOverlap", "_pointersMinDistance", "_pointersMaxDistance", "_theme", "_c", "_rtl", "_btt", "_keyboardDisabled", "_animateOnClick", "_sliderWidth", "_sliderHeight", "_sliderRadius", "_sliderBg", "_sliderBgHover", "_sliderBgFill", "_pointerWidth", "_pointerHeight", "_pointerRadius", "_pointerShape", "_pointerBg", "_pointerBgHover", "_pointerBgFocus", "_pointerShadow", "_pointerShadowHover", "_pointerShadowFocus", "_pointerBorder", "_pointerBorderHover", "_pointerBorderFocus", "_pointer1Disabled", "_pointer2Disabled", "_ariaLabel1", "_ariaLabel2", "_rangeDragging", "getBoolean", "getExternalCSSList", "main_html_default", "styles_default", "$pointer1", "pointer1", "Pointer", "pointer2", "createPointer2", "$slider", "Slider", "removeFocus", "attrName", "oldValue", "newValue", "onAttributesChange", "range_slider_default", "range_slider_default"]
}
