/* 
Tool Cool Range Slider - Generated Labels Plugin
Version: 1.0.3
Documentation: https://github.com/toolcool-org/toolcool-range-slider 
License: MIT License        
Author: Tool Cool, toolcool.org@gmail.com>                          
*/
(()=>{var v=i=>i==null?!1:typeof i=="boolean"?i:i.trim().toLowerCase()==="true";window.tcRangeSliderPlugins=window.tcRangeSliderPlugins||[];var B="min-label",C="max-label",L="#1E293B",P=()=>{let i=null,o=null,n=null,p=!1,l=L,s="",r=null,u=null,c=null,b=[],A=()=>{var t;let e=(t=i==null?void 0:i.shadowRoot)==null?void 0:t.querySelector(".range-slider-box");r=document.createElement("div"),r.classList.add("labels-row"),e.prepend(r)},T=e=>{let t=document.createElement("label");return t.className=e,t.setAttribute("for","range-slider"),t},S=()=>{let e=(n==null?void 0:n.isRightToLeft())||(n==null?void 0:n.isBottomToTop());u=T(B),u.textContent=m(n==null?void 0:n.getTextMin(),s),c=T(C),c.textContent=m(n==null?void 0:n.getTextMax(),s),e?(o==null||o.after(u),o==null||o.before(c)):(o==null||o.before(u),o==null||o.after(c));let t=n==null?void 0:n.getValues();if(!!t)for(let f=0;f<t.length;f++){let a=T(`value${f+1}-label generated-label`);a.textContent=m(t[f],s),b.push(a),e?r==null||r.prepend(a):r==null||r.append(a)}},M=()=>{for(let e of b)!e||e.remove();u==null||u.remove(),c==null||c.remove(),r==null||r.remove(),b=[]},y=e=>{p=e,p?(A(),S()):M()},E=e=>{l=e;for(let t of b)!t||(t.style.color=l!=null?l:L);u&&(u.style.color=l!=null?l:L),c&&(c.style.color=l!=null?l:L)},h=e=>{s=e},I=()=>{!n||!r||r.classList.toggle("is-reversed",n.isRightToLeft()||n.isBottomToTop())},m=(e,t)=>`${(e!=null?e:"").toString()}${t}`;return{get name(){return"Generated Labels"},init:(e,t,f,a)=>{var g,x,d;i=e,n=a,o=(g=e.shadowRoot)==null?void 0:g.getElementById("range-slider"),l=(x=i.getAttribute("generate-labels-text-color"))!=null?x:L,s=(d=i.getAttribute("generate-labels-units"))!=null?d:"",y(v(i.getAttribute("generate-labels"))),I(),E(l)},update:e=>{if(!(!p||!e.values)){I();for(let t=0;t<e.values.length;t++){let f=e.values[t],a=b[t];if(f===void 0&&!!a){a.remove(),b[t]=void 0;continue}if(f!==void 0&&!a){let g=T(`value${t+1}-label generated-label`);if(g.textContent=m(f,s),b[t]=g,e.values.length<=0)r==null||r.append(g);else{let x=(n==null?void 0:n.isRightToLeft())||(n==null?void 0:n.isBottomToTop());if(t===0)x?r==null||r.append(g):r==null||r.prepend(g);else{let d=b[t-1];x?d==null||d.before(g):d==null||d.after(g)}}continue}!a||(a.textContent=m(f,s))}u&&(u.textContent=m(e.textMin,s)),c&&(c.textContent=m(e.textMax,s)),E(l)}},onAttrChange:(e,t)=>{e==="generate-labels"&&y(v(t)),e==="generate-labels-text-color"&&E(t),e==="generate-labels-units"&&h(t)},gettersAndSetters:[{name:"generateLabels",attributes:{get(){return p!=null?p:!1},set:e=>{y(v(e))}}},{name:"textColor",attributes:{get(){return l!=null?l:""},set:e=>{E(e)}}},{name:"units",attributes:{get(){return s!=null?s:""},set:e=>{h(e)}}}],css:`
    .labels-row{
      text-align: center;
      display: flex;
      justify-content: center;
    }
    
    .is-reversed,
    .is-reversed + .row{
      flex-direction: row-reverse;
    }
    
    .type-vertical{
      position: relative;
    }
    
    .type-vertical .labels-row{
      flex-direction: column;
      position: absolute;
      top: 50%;
      right: -100%;
      transform: translateY(-50%);
    }
    
    .type-vertical .is-reversed,
    .type-vertical .is-reversed + .row{
      flex-direction: column-reverse;
    }
    
    .max-label,
    .min-label{
      margin: 0 1rem;
      width: 2rem;
      text-align: center;
      white-space: nowrap;
    }
    
    .generated-label{
      text-align: center;
      margin: 0 0.5rem;
      white-space: nowrap;
    }
    `,destroy:M}};window.tcRangeSliderPlugins.push(P);var O=P;})();
