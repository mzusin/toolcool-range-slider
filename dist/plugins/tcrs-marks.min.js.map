{
  "version": 3,
  "sources": ["../../src/core/domain/math-provider.ts", "../../src/plugins/marks-plugin/index.ts"],
  "sourcesContent": ["/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b - a) * (x - min) / (max - min) + a\n */\nexport const convertRange = (min: number, max: number, a: number, b: number, x: number) => {\n  const temp = (max - min);\n  if(temp === 0) return a;\n  return ((b - a) * (x - min)) / temp + a;\n};\n\n// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n\n// the below function should receive any\n// eslint-disable-next-line\nexport const getNumber = (input: any, defaultValue: any) : number => {\n  return isNumber(input) ? Number(input) : defaultValue;\n};\n\n/**\n * Round up to the next multiple of X,\n * where X is the step provided by the user.\n */\nexport const roundToStep = (num: number, step: number) => {\n  return step === 0 ? 0 : Math.round(num / step) * step;\n};\n\n/**\n * round to decimal places\n * https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n */\nexport const setDecimalPlaces = (num: number, decimalPlaces = Infinity) => {\n  if (decimalPlaces === Infinity) return num;\n\n  const coeff = 10 ** decimalPlaces;\n  return Math.round(num * coeff) / coeff;\n};\n\nexport const getBoolean = (val: string | null | undefined | boolean) => {\n  if(val === null || val === undefined) return false;\n  if(typeof val === 'boolean') return val;\n  return val.trim().toLowerCase() === 'true';\n};\n", "import { IPlugin, IPluginGetters, IPluginSetters } from '../../core/plugins/interfaces';\nimport RangeSlider from '../../core';\nimport { convertRange, getBoolean, getNumber } from '../../core/domain/math-provider';\n\n/**\n * Marks Plugin.\n * Important: the plugin script should be included BEFORE the core script.\n */\n\n/**\n * Required: init ToolCool Range Slider plugins namespace if not defined yet\n */\nwindow.tcRangeSliderPlugins = window.tcRangeSliderPlugins || [];\n\nconst MARKS_STEP_COUNT_DEFAULT = 11;\nconst MARKS_VALUES_COUNT_DEFAULT = 11;\n\nconst MarksPlugin = () : IPlugin => {\n\n  let $component: HTMLElement | null = null;\n  let getters: IPluginGetters | null = null;\n\n  let $marks: HTMLElement | null = null;\n  let $markPoints: HTMLElement | null = null;\n  let $markValues: HTMLElement | null = null;\n\n  let enabled = false;\n  let marksCount = MARKS_STEP_COUNT_DEFAULT;\n  let marksValuesCount = MARKS_VALUES_COUNT_DEFAULT;\n\n  const createMarksBox = () => {\n    const $slider = $component?.shadowRoot?.querySelector('#range-slider')  as HTMLElement;\n    $marks = document.createElement('div');\n    $marks.classList.add('marks');\n\n    $markPoints = document.createElement('div');\n    $markPoints.classList.add('mark-points');\n    $marks.append($markPoints);\n\n    $markValues = document.createElement('div');\n    $markValues.classList.add('mark-values');\n    $marks.append($markValues);\n\n    $slider.append($marks);\n  };\n\n  const updateClasses = () => {\n    if(!getters || !$marks) return;\n    $marks.classList.toggle('is-reversed', getters.isRightToLeft() || getters.isBottomToTop());\n  };\n\n  const createMarks = () => {\n    if(!$marks || !getters) return;\n\n    const min = getters.getMin();\n    const max = getters.getMax();\n\n    const isVertical = getters.getType() === 'vertical';\n    const isReversed = getters.isRightToLeft() || getters.isBottomToTop();\n\n    for(let i=0; i<marksCount; i++){\n      const $mark = document.createElement('div');\n      $mark.classList.add('mark', `mark-${ i }`);\n\n      const percent = marksCount === 0 ? 0 : i * 100 / (marksCount - 1);\n\n      if(isVertical){\n        if(isReversed){\n          $mark.style.top = `${ 100 - percent }%`;\n        }\n        else{\n          $mark.style.top = `${ percent }%`;\n        }\n      }\n      else{\n        if(isReversed){\n          $mark.style.left = `${ 100 - percent }%`;\n        }\n        else{\n          $mark.style.left = `${ percent }%`;\n        }\n      }\n\n      $markPoints?.append($mark);\n    }\n\n    const data = getters.getData();\n\n    for(let i=0; i<marksValuesCount; i++){\n      const $value = document.createElement('div');\n      $value.classList.add('mark-value', `mark-value-${ i }`);\n\n      const percent = marksValuesCount === 0 ? 0 : i * 100 / (marksValuesCount - 1);\n      const val = convertRange(0, marksValuesCount - 1, min, max, i);\n      $value.textContent = (data ? (data[Math.round(val)] ?? '') : val).toString();\n\n      if(isVertical){\n        if(isReversed){\n          $value.style.top = `${ 100 - percent }%`;\n        }\n        else{\n          $value.style.top = `${ percent }%`;\n        }\n      }\n      else{\n        if(isReversed){\n          $value.style.left = `${ 100 - percent }%`;\n        }\n        else{\n          $value.style.left = `${ percent }%`;\n        }\n      }\n\n      $markValues?.append($value);\n    }\n  };\n\n  const updateSteps = (_markStep: number, _makeValueStep: number) => {\n    destroy();\n\n    marksCount = _markStep;\n    marksValuesCount = _makeValueStep;\n\n    if(marksCount <= 0){\n      marksCount = MARKS_STEP_COUNT_DEFAULT;\n    }\n\n    if(marksValuesCount <= 0){\n      marksValuesCount = MARKS_VALUES_COUNT_DEFAULT;\n    }\n\n    createMarksBox();\n    createMarks();\n    updateClasses();\n  };\n\n  const toggleEnabled = (_enabled: boolean) => {\n    enabled = _enabled;\n\n    if(!enabled){\n      destroy();\n    }\n    else{\n      createMarksBox();\n      createMarks();\n      updateClasses();\n    }\n  };\n\n  const setMarksColor = (newColor: string) => {\n    if(!$marks) return;\n    $marks.style.setProperty('--marks-color', newColor);\n  };\n\n  const setValuesColor = (newColor: string) => {\n    if(!$marks) return;\n    $marks.style.setProperty('--values-color', newColor);\n  };\n\n  const destroy = () => {\n    $marks?.remove();\n  };\n\n  return {\n\n    /**\n     * Required: unique plugin name\n     */\n    get name() {\n      return 'Marks';\n    },\n\n    /**\n     * Optional: plugin initialization\n     */\n    init: (\n      _$component,\n      _requestUpdate,\n      _setters: IPluginSetters,\n      _getters: IPluginGetters\n    ) => {\n      getters = _getters;\n      $component = _$component;\n\n      enabled = getBoolean($component.getAttribute('marks'));\n      if(!enabled) return;\n\n      updateSteps(\n        getNumber($component.getAttribute('marks-count'), MARKS_STEP_COUNT_DEFAULT),\n        getNumber($component.getAttribute('marks-values-count'), MARKS_VALUES_COUNT_DEFAULT)\n      );\n\n      setMarksColor($component.getAttribute('marks-color') ?? '#cbd5e1');\n      setValuesColor($component.getAttribute('marks-values-color') ?? '#475569');\n    },\n\n    /**\n     * Optional:\n     * this will be called each time observed HTML attribute changes;\n     * observed attributes are defined in window.tcRangeSliderObservedAttr array above.\n     */\n    onAttrChange: (_attrName: string, _newValue: string) => {\n      if(_attrName === 'marks'){\n        toggleEnabled(getBoolean(_newValue));\n      }\n\n      if(_attrName === 'marks-count'){\n        updateSteps(getNumber(_newValue, MARKS_STEP_COUNT_DEFAULT), marksValuesCount);\n      }\n\n      if(_attrName === 'marks-values-count'){\n        updateSteps(marksCount, getNumber(_newValue, MARKS_VALUES_COUNT_DEFAULT));\n      }\n\n      if(_attrName === 'marks-color'){\n        setMarksColor(_newValue);\n      }\n\n      if(_attrName === 'marks-values-color'){\n        setValuesColor(_newValue);\n      }\n    },\n\n    /**\n     * Optional:\n     * List of getters and setter that can be used to create slider API.\n     */\n    gettersAndSetters: [\n      {\n        name: 'marksEnabled',\n        attributes: {\n          get () {\n            return enabled ?? false;\n          },\n\n          set: (_enabled) => {\n            toggleEnabled(getBoolean(_enabled));\n          },\n        }\n      },\n\n      {\n        name: 'marksCount',\n        attributes: {\n          get () {\n            return marksCount ?? MARKS_STEP_COUNT_DEFAULT;\n          },\n\n          set: (value) => {\n            updateSteps(getNumber(value, MARKS_STEP_COUNT_DEFAULT), marksValuesCount);\n          },\n        }\n      },\n\n      {\n        name: 'marksValuesCount',\n        attributes: {\n          get () {\n            return marksCount ?? MARKS_STEP_COUNT_DEFAULT;\n          },\n\n          set: (value) => {\n            updateSteps(marksCount, getNumber(value, MARKS_VALUES_COUNT_DEFAULT));\n          },\n        }\n      },\n\n      {\n        name: 'marksColor',\n        attributes: {\n          get () {\n            return  $marks?.style.getPropertyValue('--marks-color');\n          },\n\n          set: (newColor) => {\n            setMarksColor(newColor);\n          },\n        }\n      },\n\n      {\n        name: 'markValuesColor',\n        attributes: {\n          get () {\n            return  $marks?.style.getPropertyValue('--values-color');\n          },\n\n          set: (newColor) => {\n            setValuesColor(newColor);\n          },\n        }\n      },\n\n    ],\n\n    destroy,\n\n    css: `\n:root{\n  --marks-color: #cbd5e1;\n  --values-color: #475569;\n}\n  \n.marks{\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  top: 100%;\n  left: 0;\n  color: var(--values-color, #475569);\n}\n\n.type-vertical .marks{\n  width: auto;\n  height: 100%;\n  top: 0;\n  left: 100%;\n  flex-direction: row;\n}\n    \n.mark-points{\n  width: 100%;\n  height: 1rem;\n  position: relative;\n  margin-top: 5px;\n}  \n\n.type-vertical .mark-points {\n  width: 1rem;\n  height: 100%;\n  margin-top: 0;\n  margin-left: 5px;\n}\n\n.mark-values{\n  width: 100%;\n  height: 1rem;\n  position: relative;\n}\n\n.type-vertical .mark-values {\n  width: 1rem;\n  height: 100%;\n  margin-left: 0.7rem;\n}\n\n.mark{\n  background: var(--marks-color, #cbd5e1);\n  width: 2px;\n  height: 5px;\n  position: absolute;\n  transform: translateX(-50%);\n}  \n\n.type-vertical .mark {\n    width: 5px;\n    height: 2px;\n    transform: translateY(-50%);\n}\n\n.mark-value{\n  position: absolute;\n  transform: translateX(-50%);\n}\n\n.type-vertical .mark-value{\n    transform: translateY(-50%);\n}\n    `,\n  };\n};\n\n/**\n * Required: add current plugin to the plugins list.\n */\nwindow.tcRangeSliderPlugins.push(MarksPlugin);\n\nexport default MarksPlugin;\n\n/**\n * export dynamic properties\n */\nexport interface IMarksPlugin extends RangeSlider{\n  marksEnabled: boolean;\n  marksCount: number;\n  marksValuesCount: number;\n  marksColor: string;\n  markValuesColor: string;\n}\n"],
  "mappings": ";;;;;;;MAIO,IAAMA,EAAe,CAACC,EAAaC,EAAaC,EAAWC,EAAWC,IAAc,CACzF,IAAMC,EAAQJ,EAAMD,EACpB,OAAGK,IAAS,EAAUH,GACbC,EAAID,IAAME,EAAIJ,GAAQK,EAAOH,CACxC,EAGaI,EAAYC,GAChB,CAAC,MAAM,WAAWA,CAAK,CAAC,GAAK,SAASA,CAAK,EAKvCC,EAAY,CAACD,EAAYE,IAC7BH,EAASC,CAAK,EAAI,OAAOA,CAAK,EAAIE,EAsBpC,IAAMC,EAAcC,GACtBA,GAAQ,KAAkC,GAC1C,OAAOA,GAAQ,UAAkBA,EAC7BA,EAAI,KAAK,EAAE,YAAY,IAAM,OC/BtC,OAAO,qBAAuB,OAAO,sBAAwB,CAAC,EAE9D,IAAMC,EAA2B,GAC3BC,EAA6B,GAE7BC,EAAc,IAAgB,CAElC,IAAIC,EAAiC,KACjCC,EAAiC,KAEjCC,EAA6B,KAC7BC,EAAkC,KAClCC,EAAkC,KAElCC,EAAU,GACVC,EAAaT,EACbU,EAAmBT,EAEjBU,EAAiB,IAAM,CA9B/B,IAAAC,EA+BI,IAAMC,GAAUD,EAAAT,GAAA,YAAAA,EAAY,aAAZ,YAAAS,EAAwB,cAAc,iBACtDP,EAAS,SAAS,cAAc,KAAK,EACrCA,EAAO,UAAU,IAAI,OAAO,EAE5BC,EAAc,SAAS,cAAc,KAAK,EAC1CA,EAAY,UAAU,IAAI,aAAa,EACvCD,EAAO,OAAOC,CAAW,EAEzBC,EAAc,SAAS,cAAc,KAAK,EAC1CA,EAAY,UAAU,IAAI,aAAa,EACvCF,EAAO,OAAOE,CAAW,EAEzBM,EAAQ,OAAOR,CAAM,CACvB,EAEMS,EAAgB,IAAM,CACvB,CAACV,GAAW,CAACC,GAChBA,EAAO,UAAU,OAAO,cAAeD,EAAQ,cAAc,GAAKA,EAAQ,cAAc,CAAC,CAC3F,EAEMW,EAAc,IAAM,CAnD5B,IAAAH,EAoDI,GAAG,CAACP,GAAU,CAACD,EAAS,OAExB,IAAMY,EAAMZ,EAAQ,OAAO,EACrBa,EAAMb,EAAQ,OAAO,EAErBc,EAAad,EAAQ,QAAQ,IAAM,WACnCe,EAAaf,EAAQ,cAAc,GAAKA,EAAQ,cAAc,EAEpE,QAAQ,EAAE,EAAG,EAAEK,EAAY,IAAI,CAC7B,IAAMW,EAAQ,SAAS,cAAc,KAAK,EAC1CA,EAAM,UAAU,IAAI,OAAQ,QAAS,GAAI,EAEzC,IAAMC,EAAUZ,IAAe,EAAI,EAAI,EAAI,KAAOA,EAAa,GAE5DS,EACEC,EACDC,EAAM,MAAM,IAAM,GAAI,IAAMC,KAG5BD,EAAM,MAAM,IAAM,GAAIC,KAIrBF,EACDC,EAAM,MAAM,KAAO,GAAI,IAAMC,KAG7BD,EAAM,MAAM,KAAO,GAAIC,KAI3Bf,GAAA,MAAAA,EAAa,OAAOc,EACtB,CAEA,IAAME,EAAOlB,EAAQ,QAAQ,EAE7B,QAAQ,EAAE,EAAG,EAAEM,EAAkB,IAAI,CACnC,IAAMa,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,UAAU,IAAI,aAAc,cAAe,GAAI,EAEtD,IAAMF,EAAUX,IAAqB,EAAI,EAAI,EAAI,KAAOA,EAAmB,GACrEc,EAAMC,EAAa,EAAGf,EAAmB,EAAGM,EAAKC,EAAK,CAAC,EAC7DM,EAAO,aAAeD,GAAQV,EAAAU,EAAK,KAAK,MAAME,CAAG,KAAnB,KAAAZ,EAAyB,GAAMY,GAAK,SAAS,EAExEN,EACEC,EACDI,EAAO,MAAM,IAAM,GAAI,IAAMF,KAG7BE,EAAO,MAAM,IAAM,GAAIF,KAItBF,EACDI,EAAO,MAAM,KAAO,GAAI,IAAMF,KAG9BE,EAAO,MAAM,KAAO,GAAIF,KAI5Bd,GAAA,MAAAA,EAAa,OAAOgB,EACtB,CACF,EAEMG,EAAc,CAACC,EAAmBC,IAA2B,CACjEC,EAAQ,EAERpB,EAAakB,EACbjB,EAAmBkB,EAEhBnB,GAAc,IACfA,EAAaT,GAGZU,GAAoB,IACrBA,EAAmBT,GAGrBU,EAAe,EACfI,EAAY,EACZD,EAAc,CAChB,EAEMgB,EAAiBC,GAAsB,CAC3CvB,EAAUuB,EAENvB,GAIFG,EAAe,EACfI,EAAY,EACZD,EAAc,GALde,EAAQ,CAOZ,EAEMG,EAAiBC,GAAqB,CACvC,CAAC5B,GACJA,EAAO,MAAM,YAAY,gBAAiB4B,CAAQ,CACpD,EAEMC,EAAkBD,GAAqB,CACxC,CAAC5B,GACJA,EAAO,MAAM,YAAY,iBAAkB4B,CAAQ,CACrD,EAEMJ,EAAU,IAAM,CACpBxB,GAAA,MAAAA,EAAQ,QACV,EAEA,MAAO,CAKL,IAAI,MAAO,CACT,MAAO,OACT,EAKA,KAAM,CACJ8B,EACAC,EACAC,EACAC,IACG,CApLT,IAAA1B,EAAA2B,EAqLMnC,EAAUkC,EACVnC,EAAagC,EAEb3B,EAAUgC,EAAWrC,EAAW,aAAa,OAAO,CAAC,EACjDK,IAEJkB,EACEe,EAAUtC,EAAW,aAAa,aAAa,EAAGH,CAAwB,EAC1EyC,EAAUtC,EAAW,aAAa,oBAAoB,EAAGF,CAA0B,CACrF,EAEA+B,GAAcpB,EAAAT,EAAW,aAAa,aAAa,IAArC,KAAAS,EAA0C,SAAS,EACjEsB,GAAeK,EAAApC,EAAW,aAAa,oBAAoB,IAA5C,KAAAoC,EAAiD,SAAS,EAC3E,EAOA,aAAc,CAACG,EAAmBC,IAAsB,CACnDD,IAAc,SACfZ,EAAcU,EAAWG,CAAS,CAAC,EAGlCD,IAAc,eACfhB,EAAYe,EAAUE,EAAW3C,CAAwB,EAAGU,CAAgB,EAG3EgC,IAAc,sBACfhB,EAAYjB,EAAYgC,EAAUE,EAAW1C,CAA0B,CAAC,EAGvEyC,IAAc,eACfV,EAAcW,CAAS,EAGtBD,IAAc,sBACfR,EAAeS,CAAS,CAE5B,EAMA,kBAAmB,CACjB,CACE,KAAM,eACN,WAAY,CACV,KAAO,CACL,OAAOnC,GAAA,KAAAA,EAAW,EACpB,EAEA,IAAMuB,GAAa,CACjBD,EAAcU,EAAWT,CAAQ,CAAC,CACpC,CACF,CACF,EAEA,CACE,KAAM,aACN,WAAY,CACV,KAAO,CACL,OAAOtB,GAAA,KAAAA,EAAcT,CACvB,EAEA,IAAM4C,GAAU,CACdlB,EAAYe,EAAUG,EAAO5C,CAAwB,EAAGU,CAAgB,CAC1E,CACF,CACF,EAEA,CACE,KAAM,mBACN,WAAY,CACV,KAAO,CACL,OAAOD,GAAA,KAAAA,EAAcT,CACvB,EAEA,IAAM4C,GAAU,CACdlB,EAAYjB,EAAYgC,EAAUG,EAAO3C,CAA0B,CAAC,CACtE,CACF,CACF,EAEA,CACE,KAAM,aACN,WAAY,CACV,KAAO,CACL,OAAQI,GAAA,YAAAA,EAAQ,MAAM,iBAAiB,gBACzC,EAEA,IAAM4B,GAAa,CACjBD,EAAcC,CAAQ,CACxB,CACF,CACF,EAEA,CACE,KAAM,kBACN,WAAY,CACV,KAAO,CACL,OAAQ5B,GAAA,YAAAA,EAAQ,MAAM,iBAAiB,iBACzC,EAEA,IAAM4B,GAAa,CACjBC,EAAeD,CAAQ,CACzB,CACF,CACF,CAEF,EAEA,QAAAJ,EAEA,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAyEP,CACF,EAKA,OAAO,qBAAqB,KAAK3B,CAAW,EAE5C,IAAO2C,EAAQ3C",
  "names": ["convertRange", "min", "max", "a", "b", "x", "temp", "isNumber", "input", "getNumber", "defaultValue", "getBoolean", "val", "MARKS_STEP_COUNT_DEFAULT", "MARKS_VALUES_COUNT_DEFAULT", "MarksPlugin", "$component", "getters", "$marks", "$markPoints", "$markValues", "enabled", "marksCount", "marksValuesCount", "createMarksBox", "_a", "$slider", "updateClasses", "createMarks", "min", "max", "isVertical", "isReversed", "$mark", "percent", "data", "$value", "val", "convertRange", "updateSteps", "_markStep", "_makeValueStep", "destroy", "toggleEnabled", "_enabled", "setMarksColor", "newColor", "setValuesColor", "_$component", "_requestUpdate", "_setters", "_getters", "_b", "getBoolean", "getNumber", "_attrName", "_newValue", "value", "marks_plugin_default"]
}
