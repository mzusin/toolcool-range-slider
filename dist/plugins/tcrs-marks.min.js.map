{
  "version": 3,
  "sources": ["../../src/plugins/marks-plugin/index.ts"],
  "sourcesContent": ["import { IPlugin, IPluginGetters, IPluginSetters, IPluginUpdateData } from '../../core/plugins/interfaces';\nimport RangeSlider from '../../core';\n\n/**\n * Marks Plugin.\n * Important: the plugin script should be included BEFORE the core script.\n */\n\n/**\n * Required: init ToolCool Range Slider plugins namespace if not defined yet\n */\nwindow.tcRangeSliderPlugins = window.tcRangeSliderPlugins || [];\n\nconst MarksPlugin = () : IPlugin => {\n\n  const update = (data: IPluginUpdateData) => {\n\n    //if(!enabled || !data.values) return;\n\n  };\n\n  const destroy = () => {\n\n  };\n\n  return {\n\n    /**\n     * Required: unique plugin name\n     */\n    get name() {\n      return 'Marks';\n    },\n\n    /**\n     * Optional: plugin initialization\n     */\n    init: (\n      _$component,\n      _requestUpdate,\n      _setters: IPluginSetters,\n      _getters: IPluginGetters\n    ) => {\n\n    },\n\n    /**\n     * Optional:\n     * this will be called each time\n     * range slider updates pointer positions or other properties\n     */\n    update,\n\n    /**\n     * Optional:\n     * this will be called each time observed HTML attribute changes;\n     * observed attributes are defined in window.tcRangeSliderObservedAttr array above.\n     */\n    onAttrChange: (_attrName: string, _newValue: string) => {\n     /* if(_attrName === 'moving-tooltip'){\n        toggleEnabled(getBoolean(_newValue));\n      }*/\n\n    },\n\n    /**\n     * Optional:\n     * List of getters and setter that can be used to create slider API.\n     */\n    gettersAndSetters: [\n      /*{\n        name: 'movingTooltip',\n        attributes: {\n          get () {\n            return enabled ?? false;\n          },\n\n          set: (_enabled) => {\n            toggleEnabled(getBoolean(_enabled));\n          },\n        }\n      },*/\n\n    ],\n\n    destroy,\n  };\n};\n\n/**\n * Required: add current plugin to the plugins list.\n */\nwindow.tcRangeSliderPlugins.push(MarksPlugin);\n\nexport default MarksPlugin;\n\n/**\n * export dynamic properties\n */\nexport interface IMarksPlugin extends RangeSlider{\n\n}\n"],
  "mappings": ";;;;;;;MAWA,OAAO,qBAAuB,OAAO,sBAAwB,CAAC,EAE9D,IAAMA,EAAc,KAYX,CAKL,IAAI,MAAO,CACT,MAAO,OACT,EAKA,KAAM,CACJC,EACAC,EACAC,EACAC,IACG,CAEL,EAOA,OApCcC,GAA4B,CAI5C,EAuCE,aAAc,CAACC,EAAmBC,IAAsB,CAKxD,EAMA,kBAAmB,CAcnB,EAEA,QAhEc,IAAM,CAEtB,CA+DA,GAMF,OAAO,qBAAqB,KAAKP,CAAW,EAE5C,IAAOQ,EAAQR",
  "names": ["MarksPlugin", "_$component", "_requestUpdate", "_setters", "_getters", "data", "_attrName", "_newValue", "marks_plugin_default"]
}
