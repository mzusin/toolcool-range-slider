{
  "version": 3,
  "sources": ["../../src/core/domain/math-provider.ts", "../../src/plugins/fire-plugin/dom/dom-provider.ts", "../../src/plugins/fire-plugin/dom/webgl-provider.ts", "../../src/plugins/fire-plugin/dom/fire-provider.ts", "../../src/plugins/fire-plugin/dom/color-provider.ts", "../../src/plugins/fire-plugin/index.ts"],
  "sourcesContent": ["/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b - a) * (x - min) / (max - min) + a\n */\nexport const convertRange = (min: number, max: number, a: number, b: number, x: number) => {\n  const temp = (max - min);\n  if(temp === 0) return a;\n  return ((b - a) * (x - min)) / temp + a;\n};\n\n// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n\n// the below function should receive any\n// eslint-disable-next-line\nexport const getNumber = (input: any, defaultValue: any) : number => {\n  return isNumber(input) ? Number(input) : defaultValue;\n};\n\n/**\n * Round up to the next multiple of X,\n * where X is the step provided by the user.\n */\nexport const roundToStep = (num: number, step: number) => {\n  return step === 0 ? 0 : Math.round(num / step) * step;\n};\n\n/**\n * round to decimal places\n * https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n */\nexport const setDecimalPlaces = (num: number, decimalPlaces = Infinity) => {\n  if (decimalPlaces === Infinity) return num;\n\n  const coeff = 10 ** decimalPlaces;\n  return Math.round(num * coeff) / coeff;\n};\n\nexport const getBoolean = (val: string | null | undefined | boolean) => {\n  if(val === null || val === undefined) return false;\n  if(typeof val === 'boolean') return val;\n  return val.trim().toLowerCase() === 'true';\n};\n", "/**\n * create canvas dynamically\n */\nexport const createCanvas = ($box: HTMLElement, fireWidth: number, fireHeight: number) => {\n\n  // create canvas element\n  let $canvas = document.createElement('canvas') as HTMLCanvasElement;\n  $canvas.classList.add('fire-canvas');\n\n  $canvas.width = fireWidth;\n  $canvas.height = fireHeight;\n  $canvas.style.width = `${ fireWidth }px`;\n  $canvas.style.height = `${ fireHeight }px`;\n\n  // add the canvas to the box\n  $box.prepend($canvas);\n\n  return $canvas;\n};", "/**\n * get WebGL context\n */\nexport const getContext = ($canvas: HTMLCanvasElement) => {\n\n  // edge still needs 'experimental-webgl'\n  const context = $canvas.getContext('webgl') || $canvas.getContext('experimental-webgl');\n\n  if(!context ){\n    console.error('This browser doesn\\'t support WebGL.');\n  }\n\n  return context;\n};\n\n\n/**\n * create a shader\n */\nexport const createShader = (gl: WebGLRenderingContextStrict, shaderType: GL.ShaderType, shaderCode: string) => {\n\n  const shader = gl.createShader(shaderType);\n  if(!shader) return null;\n\n  gl.shaderSource(shader, shaderCode);\n  gl.compileShader(shader);\n\n  if(!gl.getShaderParameter(shader, gl.COMPILE_STATUS)){\n    console.error(`Error compiling shader: ${gl.getShaderInfoLog(shader)}`);\n    return null;\n  }\n\n  return shader;\n};\n\n/**\n * create program and attach shaders\n */\nexport const createProgram = (gl: WebGLRenderingContextStrict, shaders: WebGLShader[]) => {\n\n  const program = gl.createProgram();\n  if(!program) return null;\n\n  for(let i=0; i<shaders.length; i++){\n    gl.attachShader(program, shaders[i]);\n  }\n\n  gl.linkProgram(program);\n\n  if(!gl.getProgramParameter(program, gl.LINK_STATUS)){\n    console.error(`Error linking program: ${gl.getProgramInfoLog(program)}`);\n    return null;\n  }\n\n  // for debug only\n  gl.validateProgram(program);\n\n  /*if(!gl.getProgramParameter(program, gl.VALIDATE_STATUS)){\n    console.error(`Error validation program: ${gl.getProgramInfoLog(program)}`);\n    return null;\n  }*/\n\n  return program;\n};\n\n/**\n * create shader attribute\n */\nexport const createShaderAttribute = (\n  gl: WebGLRenderingContextStrict,\n  program: WebGLProgram,\n  attrName: string,\n  elementsNum: 1 | 2 | 3 | 4,\n  vertexSize: number,\n  offset: number,\n  data: any) => {\n\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n  if(data) {\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  }\n\n  const attrLocation = gl.getAttribLocation(program, attrName);\n\n  gl.vertexAttribPointer(\n    attrLocation, // attribute location\n    elementsNum, // number of elements per attribute (x, y) or (x, y, z) etc.\n    gl.FLOAT, // 32 bit floats\n    false,\n    vertexSize * Float32Array.BYTES_PER_ELEMENT, // size of an individual vertex\n    offset * Float32Array.BYTES_PER_ELEMENT // offset from the beginning of a single vertex to this attribute\n  );\n\n  gl.enableVertexAttribArray(attrLocation);\n\n  return attrLocation;\n};\n\n", "import { createCanvas } from './dom-provider';\nimport { createProgram, createShader, createShaderAttribute, getContext } from './webgl-provider';\nimport vertex from '../shaders/vertex.glsl';\nimport fireFragment from '../shaders/fire-fragment.glsl';\n\nexport interface IFireSettings {\n  fireBaseColor1: number[];\n  fireBaseColor2: number[];\n  fireShape: number;\n  fireSpeed: number;\n  fireStrength: number;\n  fireDetalization: number;\n  fireWidth: number;\n  fireHeight: number;\n}\n\nexport interface IFire {\n  $canvas: HTMLCanvasElement;\n  setColors: (_color1: number[], _color2: number[]) => void;\n}\n\nexport const createFire = ($container: HTMLElement, fire: IFireSettings) : (IFire | null) => {\n  // animation start time\n  let startTime: number | undefined = undefined;\n\n  // used to pause fragment shader;\n  // the requestAnimationFrame is still running\n  let isRunning = true;\n\n  // if true, the whole animation should be stopped;\n  // used when the whole program should be replaced with another instance\n  let stop = false;\n\n  // generate canvas element (if not generated before)\n  const $canvas = createCanvas($container, fire.fireWidth, fire.fireHeight);\n  if(!$canvas) return null;\n\n  // create webgl context\n  const gl = getContext($canvas) as any as WebGLRenderingContextStrict;\n  if(!gl) return null;\n\n  // define webgl viewport\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n  // init shaders\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertex);\n  if(!vertexShader) return null;\n\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fireFragment);\n  if(!fragmentShader) return null;\n\n  // compile shader\n  const program = createProgram(gl, [vertexShader, fragmentShader]);\n  if(!program) return null;\n\n  gl.useProgram(program);\n\n  // init position attribute: 3 dots by (x, y)\n  const aPosition = new Float32Array([\n    -1,-1,  1, 1,\n    1,-1, -1,-1,\n    1, 1, -1, 1]);\n  createShaderAttribute(gl, program, 'aPosition', 2, 0, 0, aPosition);\n\n  // init resolution uniform\n  const uResolution = gl.getUniformLocation(program, 'uResolution');\n  gl.uniform2fv(uResolution, new Float32Array([gl.drawingBufferWidth, gl.drawingBufferHeight]));\n\n  // init time uniform\n  const uTime = gl.getUniformLocation(program, 'uTime');\n\n  // init 'isRunning' uniform\n  const uRunning = gl.getUniformLocation(program, 'uRunning');\n\n  const uBaseColor1 = gl.getUniformLocation(program, 'uBaseColor1');\n  gl.uniform3fv(uBaseColor1, new Float32Array(fire.fireBaseColor1));\n\n  const uBaseColor2 = gl.getUniformLocation(program, 'uBaseColor2');\n  gl.uniform3fv(uBaseColor2, new Float32Array(fire.fireBaseColor2));\n\n  const uFireShape = gl.getUniformLocation(program, 'uFireShape');\n  gl.uniform1f(uFireShape, fire.fireShape);\n\n  const uSpeed = gl.getUniformLocation(program, 'uSpeed');\n  gl.uniform1f(uSpeed, fire.fireSpeed);\n\n  const uFireStrength = gl.getUniformLocation(program, 'uFireStrength');\n  gl.uniform1f(uFireStrength, fire.fireStrength);\n\n  const uFireDetalization = gl.getUniformLocation(program, 'uFireDetalization');\n  gl.uniform1f(uFireDetalization, fire.fireDetalization);\n\n  /**\n   * draw\n   */\n  const draw = (timestamp: number) => {\n\n    if(timestamp === undefined) return;\n\n    if(!stop){\n\n      // the first call\n      if(startTime === undefined){\n        startTime = timestamp;\n      }\n\n      const uTimeValue = (timestamp - startTime) / 1000; // seconds\n\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.useProgram(program);\n      gl.uniform1f(uTime, timestamp / 1000);\n      gl.uniform1f(uRunning, isRunning ? 1 : 0);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n      // if the time > 10 min -> reset the timer\n      if(uTimeValue > 10 * 60) {\n        startTime = undefined;\n      }\n\n      requestAnimationFrame(draw);\n    }\n  };\n  requestAnimationFrame(draw);\n\n  return {\n    $canvas,\n\n    setColors: (_color1: number[], _color2: number[]) => {\n      gl.uniform3fv(uBaseColor1, new Float32Array(_color1));\n      gl.uniform3fv(uBaseColor2, new Float32Array(_color2));\n    },\n  };\n};", "/**\n * convert hex colors to the normalized webgl colors [0, 1]\n */\nexport const hexToNormalized = (hex: string) => {\n\n  // expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, (_m, r, g, b) => {\n    return r + r + g + g + b + b;\n  });\n\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [\n    parseInt(result[1], 16) / 255,\n    parseInt(result[2], 16) / 255,\n    parseInt(result[3], 16) / 255\n  ] : [];\n};\n", "import { IPlugin, IPluginGetters, IPluginSetters, IPluginUpdateData } from '../../core/plugins/interfaces';\nimport { getBoolean, getNumber } from '../../core/domain/math-provider';\nimport { createFire, IFire } from './dom/fire-provider';\nimport { hexToNormalized } from './dom/color-provider';\n\n/**\n * Fire Plugin.\n * Note: the plugin works only when there is exactly one pointer!\n * Important: the plugin script should be included BEFORE the core script.\n */\n\n/**\n * Required: init ToolCool Range Slider plugins namespace if not defined yet\n */\nwindow.tcRangeSliderPlugins = window.tcRangeSliderPlugins || [];\n\nconst FIRE_BG = '#000';\nconst COLOR_1 = '#bc4c18';\nconst COLOR_2 = '#fff200';\nconst FIRE_WIDTH = 55;\nconst FIRE_HEIGHT = 150;\n\nconst FirePlugin = () : IPlugin => {\n\n  let $component: HTMLElement | null = null;\n  let $container: HTMLElement | null = null;\n  let getters: IPluginGetters | null = null;\n\n  let enabled = false;\n  let fireBg = FIRE_BG;\n  let fireBaseColor1 = COLOR_1;\n  let fireBaseColor2 = COLOR_2;\n  let fireShape = 1;\n  let fireWidth = FIRE_WIDTH;\n  let fireHeight = FIRE_HEIGHT;\n\n  let fireSpeedStart = 0.4;\n  let fireSpeedEnd = 0.6;\n\n  let fireStrengthStart = 90;\n  let fireStrengthEnd = 110;\n\n  let detalizationStart = 0.5;\n  let detalizationEnd = 1.0;\n\n  const fires: (IFire | null)[] = [];\n\n  /**\n   * Returns a random number between min and max\n   */\n  const getRandom = (min: number, max: number): number => {\n    return Math.random() * (max - min) + min;\n  };\n\n  const update = (_data: IPluginUpdateData) => {\n    if(!enabled) return;\n\n    const percents = getters?.getPercents() || [];\n\n    for(let i=0; i<percents.length; i++){\n      const fire = fires[i];\n      if(!fire) continue;\n\n      fire.$canvas.style.left = `${ percents[i] }%`;\n      const normalized1 = hexToNormalized(fireBaseColor1);\n      const normalized2 = hexToNormalized(fireBaseColor2);\n      normalized1[0] = percents[i] / 100;\n      fire.setColors(normalized1, normalized2);\n    }\n  };\n\n  const initGeneralStyles = () => {\n    if(!$component) return;\n    $component.style.background = fireBg;\n  };\n\n  const initFires = () => {\n    if(!getters || !$container) return;\n\n    const percents = getters.getPercents() || [];\n    for(let i=0; i<percents.length; i++){\n      let color1 = hexToNormalized(fireBaseColor1);\n      let color2 = hexToNormalized(fireBaseColor2);\n      color1[0] = percents[i] / 100;\n      color2[0] = percents[i] / 100;\n\n      const fire = createFire($container, {\n        fireBaseColor1: color1,\n        fireBaseColor2: color2,\n        fireShape,\n        fireSpeed: getRandom(fireSpeedStart, fireSpeedEnd),\n        fireStrength: getRandom(fireStrengthStart, fireStrengthEnd),\n        fireDetalization: getRandom(detalizationStart, detalizationEnd),\n        fireWidth,\n        fireHeight\n      });\n\n      if(fire){\n        fire.$canvas.style.left = `${ percents[i] }%`;\n      }\n\n      fires.push(fire);\n    }\n  };\n\n  return {\n\n    /**\n     * Required: unique plugin name\n     */\n    get name() {\n      return 'Fire';\n    },\n\n    /**\n     * Optional: plugin initialization\n     */\n    init: (\n      _$component,\n      _requestUpdate,\n      _setters: IPluginSetters,\n      _getters: IPluginGetters\n    ) => {\n      getters = _getters;\n      $component = _$component;\n\n      enabled = getBoolean(_$component.getAttribute('fire'));\n      if(!enabled) return;\n\n      fireBg = _$component.getAttribute('fire-bg') ?? FIRE_BG;\n      fireBaseColor1 = _$component.getAttribute('fire-color1') ?? COLOR_1;\n      fireBaseColor2 = _$component.getAttribute('fire-color2') ?? COLOR_2;\n      fireShape = getNumber(_$component.getAttribute('fire-shape'), 1);\n      fireSpeedStart = getNumber(_$component.getAttribute('fire-speed-start'), 0.4);\n      fireSpeedEnd = getNumber(_$component.getAttribute('fire-speed-end'), 0.6);\n      fireStrengthStart = getNumber(_$component.getAttribute('fire-strength-start'), 90);\n      fireStrengthEnd = getNumber(_$component.getAttribute('fire-strength-end'), 110);\n      fireWidth = getNumber(_$component.getAttribute('fire-width'), FIRE_WIDTH);\n      fireHeight = getNumber(_$component.getAttribute('fire-height'), FIRE_HEIGHT);\n      detalizationStart = getNumber(_$component.getAttribute('fire-detalization-start'), 1);\n      detalizationEnd = getNumber(_$component.getAttribute('fire-detalization-end'), 1);\n\n      $container = _$component.shadowRoot?.querySelector('.container') as HTMLElement;\n      if(!$container) return;\n\n      initGeneralStyles();\n      initFires();\n\n\n      /*\n        fire-detalization-start=\"0.1\"\n        fire-detalization-end=\"0.5\"\n        fire-shape=\"1\"\n        fire-speed-start=\"0.4\"\n        fire-speed-end=\"0.6\"\n        fire-strength-start=\"90\"\n        fire-strength-end=\"110\"\n        fire-bg=\"#000\"\n        fire-color1=\"#bc4c18\"\n        fire-color2=\"#fff200\"\n        fire-width=\"55\"\n        fire-height=\"150\"*/\n    },\n\n    /**\n     * Optional:\n     * this will be called each time\n     * range slider updates pointer positions or other properties\n     */\n    update,\n\n    css: `\n.range-slider-box{\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}   \n\n.fire-canvas{\n  width: 35px;\n  height: 50px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translateY(-100%) translateX(-50%);\n  overflow: hidden;\n  clip-path: ellipse(25% 40% at 50% 50%);\n  pointer-events: none;\n} \n\n.animate-on-click .fire-canvas{\n    transition: all var(--animate-onclick);\n}\n    `,\n  };\n};\n\n/**\n * Required: add current plugin to the plugins list.\n */\nwindow.tcRangeSliderPlugins.push(FirePlugin);\n\nexport default FirePlugin;\n"],
  "mappings": "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",
  "names": ["isNumber", "input", "getNumber", "defaultValue", "getBoolean", "val", "createCanvas", "$box", "fireWidth", "fireHeight", "$canvas", "getContext", "$canvas", "context", "createShader", "gl", "shaderType", "shaderCode", "shader", "createProgram", "shaders", "program", "createShaderAttribute", "attrName", "elementsNum", "vertexSize", "offset", "data", "vertexBuffer", "attrLocation", "createFire", "$container", "fire", "startTime", "isRunning", "stop", "$canvas", "createCanvas", "gl", "getContext", "vertexShader", "createShader", "vertex_default", "fragmentShader", "fire_fragment_default", "program", "createProgram", "aPosition", "createShaderAttribute", "uResolution", "uTime", "uRunning", "uBaseColor1", "uBaseColor2", "uFireShape", "uSpeed", "uFireStrength", "uFireDetalization", "draw", "timestamp", "uTimeValue", "_color1", "_color2", "hexToNormalized", "hex", "shorthandRegex", "_m", "r", "g", "b", "result", "FIRE_BG", "COLOR_1", "COLOR_2", "FIRE_WIDTH", "FIRE_HEIGHT", "FirePlugin", "$component", "$container", "getters", "enabled", "fireBg", "fireBaseColor1", "fireBaseColor2", "fireShape", "fireWidth", "fireHeight", "fireSpeedStart", "fireSpeedEnd", "fireStrengthStart", "fireStrengthEnd", "detalizationStart", "detalizationEnd", "fires", "getRandom", "min", "max", "update", "_data", "percents", "i", "fire", "normalized1", "hexToNormalized", "normalized2", "initGeneralStyles", "initFires", "color1", "color2", "createFire", "_$component", "_requestUpdate", "_setters", "_getters", "_a", "_b", "_c", "_d", "getBoolean", "getNumber", "fire_plugin_default"]
}
