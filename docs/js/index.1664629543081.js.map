{
  "version": 3,
  "sources": ["../../dist/plugins/tcrs-binding-labels.min.js", "../../dist/plugins/tcrs-generated-labels.min.js", "../../dist/plugins/tcrs-storage.min.js", "../../dist/plugins/tcrs-moving-tooltip.min.js", "../../dist/plugins/tcrs-origin-center.min.js", "../../src/core/templates/main.html.js", "../../src/core/enums/attributes-enum.ts", "../../src/core/enums/type-enum.ts", "../../src/core/domain/math-provider.ts", "../../src/core/domain/events-provider.ts", "../../src/core/ui/pointer.ts", "../../src/core/dal/data-provider.ts", "../../src/core/ui/panel-fill.ts", "../../src/core/enums/css-vars-enum.ts", "../../src/core/domain/common-provider.ts", "../../src/core/ui/styles.ts", "../../src/core/enums/css-classes-enum.ts", "../../src/core/plugins/plugins-manager.ts", "../../src/core/domain/pointers-provider.ts", "../../src/core/ui/slider.ts", "../../src/core/domain/attributes-provider.ts", "../../src/core/app/range-slider.ts", "../../src/core/index.ts", "../../src/docs/client-side/js/examples.ts", "../../src/docs/client-side/js/index.tsx"],
  "sourcesContent": ["/* \nTool Cool Range Slider - Binding Labels Plugin\nVersion: 1.0.0\nDocumentation: https://github.com/toolcool-org/toolcool-range-slider \nLicense: MIT License        \nAuthor: Tool Cool, toolcool.org@gmail.com>                          \n*/\n(()=>{var P=i=>!isNaN(parseFloat(i))&&isFinite(i),v=(i,t)=>P(i)?Number(i):t;window.tcRangeSliderPlugins=window.tcRangeSliderPlugins||[];var y=()=>{let i=null,t=null,f=null,b=[],o=[],s=(e,n)=>{Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{get(){return b[n]},set:l=>{d(n,l)}})},d=(e,n)=>{let l=!!o[e];o[e]&&(o[e].textContent=\"\");let u=document.querySelector(n);o[e]=u!=null?u:void 0,b[e]=n!=null?n:void 0,l||(e===0?(s(\"valueLabel\",e),s(\"value0Label\",e),s(\"value1Label\",e)):s(`value${e+1}Label`,e)),typeof f==\"function\"&&f()},I=()=>{var n,l,u,g,m,L,p;let e=(n=i==null?void 0:i.getValues())!=null?n:[];for(let r=0;r<e.length;r++){let a=\"\";if(r===0?(a=(l=t==null?void 0:t.getAttribute(\"value-label\"))!=null?l:\"\",a||(a=(u=t==null?void 0:t.getAttribute(\"value0-label\"))!=null?u:\"\"),a||(a=(g=t==null?void 0:t.getAttribute(\"value1-label\"))!=null?g:\"\")):a=(m=t==null?void 0:t.getAttribute(`value${r+1}-label`))!=null?m:\"\",!a){o[r]=void 0,b[r]=void 0;continue}let c=document.querySelector(a);if(!c){o[r]=void 0,b[r]=void 0;continue}o[r]=c,b[r]=a,c.textContent=(p=(L=e[r])==null?void 0:L.toString())!=null?p:\"\",r===0?(s(\"valueLabel\",r),s(\"value0Label\",r),s(\"value1Label\",r)):s(`value${r+1}Label`,r)}typeof f==\"function\"&&f()};return{get name(){return\"Binding Labels\"},init:(e,n,l,u)=>{t=e,f=n,i=u,I()},update:e=>{var n;for(let l=0;l<e.values.length;l++){let u=o[l];if(!u)continue;let g=(n=e.values[l])!=null?n:\"\";u.textContent=g.toString()}},onAttrChange:(e,n)=>{if(/^value([0-9]*)-label$/.test(e)&&typeof f==\"function\"){let l=e.replace(/\\D/g,\"\").trim(),u=l===\"\"||l===\"0\"||l===\"1\"?0:v(l,0)-1;d(u,n)}},destroy:()=>{for(let e of o)!e||e.remove()}}};window.tcRangeSliderPlugins.push(y);var T=y;})();\n", "/* \nTool Cool Range Slider - Generated Labels Plugin\nVersion: 1.0.3\nDocumentation: https://github.com/toolcool-org/toolcool-range-slider \nLicense: MIT License        \nAuthor: Tool Cool, toolcool.org@gmail.com>                          \n*/\n(()=>{var v=i=>i==null?!1:typeof i==\"boolean\"?i:i.trim().toLowerCase()===\"true\";window.tcRangeSliderPlugins=window.tcRangeSliderPlugins||[];var B=\"min-label\",C=\"max-label\",L=\"#1E293B\",P=()=>{let i=null,o=null,n=null,p=!1,l=L,s=\"\",r=null,u=null,c=null,b=[],A=()=>{var t;let e=(t=i==null?void 0:i.shadowRoot)==null?void 0:t.querySelector(\".range-slider-box\");r=document.createElement(\"div\"),r.classList.add(\"labels-row\"),e.prepend(r)},T=e=>{let t=document.createElement(\"label\");return t.className=e,t.setAttribute(\"for\",\"range-slider\"),t},S=()=>{let e=(n==null?void 0:n.isRightToLeft())||(n==null?void 0:n.isBottomToTop());u=T(B),u.textContent=m(n==null?void 0:n.getTextMin(),s),c=T(C),c.textContent=m(n==null?void 0:n.getTextMax(),s),e?(o==null||o.after(u),o==null||o.before(c)):(o==null||o.before(u),o==null||o.after(c));let t=n==null?void 0:n.getValues();if(!!t)for(let f=0;f<t.length;f++){let a=T(`value${f+1}-label generated-label`);a.textContent=m(t[f],s),b.push(a),e?r==null||r.prepend(a):r==null||r.append(a)}},M=()=>{for(let e of b)!e||e.remove();u==null||u.remove(),c==null||c.remove(),r==null||r.remove(),b=[]},y=e=>{p=e,p?(A(),S()):M()},E=e=>{l=e;for(let t of b)!t||(t.style.color=l!=null?l:L);u&&(u.style.color=l!=null?l:L),c&&(c.style.color=l!=null?l:L)},h=e=>{s=e},I=()=>{!n||!r||r.classList.toggle(\"is-reversed\",n.isRightToLeft()||n.isBottomToTop())},m=(e,t)=>`${(e!=null?e:\"\").toString()}${t}`;return{get name(){return\"Generated Labels\"},init:(e,t,f,a)=>{var g,x,d;i=e,n=a,o=(g=e.shadowRoot)==null?void 0:g.getElementById(\"range-slider\"),l=(x=i.getAttribute(\"generate-labels-text-color\"))!=null?x:L,s=(d=i.getAttribute(\"generate-labels-units\"))!=null?d:\"\",y(v(i.getAttribute(\"generate-labels\"))),I(),E(l)},update:e=>{if(!(!p||!e.values)){I();for(let t=0;t<e.values.length;t++){let f=e.values[t],a=b[t];if(f===void 0&&!!a){a.remove(),b[t]=void 0;continue}if(f!==void 0&&!a){let g=T(`value${t+1}-label generated-label`);if(g.textContent=m(f,s),b[t]=g,e.values.length<=0)r==null||r.append(g);else{let x=(n==null?void 0:n.isRightToLeft())||(n==null?void 0:n.isBottomToTop());if(t===0)x?r==null||r.append(g):r==null||r.prepend(g);else{let d=b[t-1];x?d==null||d.before(g):d==null||d.after(g)}}continue}!a||(a.textContent=m(f,s))}u&&(u.textContent=m(e.textMin,s)),c&&(c.textContent=m(e.textMax,s)),E(l)}},onAttrChange:(e,t)=>{e===\"generate-labels\"&&y(v(t)),e===\"generate-labels-text-color\"&&E(t),e===\"generate-labels-units\"&&h(t)},gettersAndSetters:[{name:\"generateLabels\",attributes:{get(){return p!=null?p:!1},set:e=>{y(v(e))}}},{name:\"textColor\",attributes:{get(){return l!=null?l:\"\"},set:e=>{E(e)}}},{name:\"units\",attributes:{get(){return s!=null?s:\"\"},set:e=>{h(e)}}}],css:`\n    .labels-row{\n      text-align: center;\n      display: flex;\n      justify-content: center;\n    }\n    \n    .is-reversed,\n    .is-reversed + .row{\n      flex-direction: row-reverse;\n    }\n    \n    .type-vertical{\n      position: relative;\n    }\n    \n    .type-vertical .labels-row{\n      flex-direction: column;\n      position: absolute;\n      top: 50%;\n      right: -100%;\n      transform: translateY(-50%);\n    }\n    \n    .type-vertical .is-reversed,\n    .type-vertical .is-reversed + .row{\n      flex-direction: column-reverse;\n    }\n    \n    .max-label,\n    .min-label{\n      margin: 0 1rem;\n      width: 2rem;\n      text-align: center;\n      white-space: nowrap;\n    }\n    \n    .generated-label{\n      text-align: center;\n      margin: 0 0.5rem;\n      white-space: nowrap;\n    }\n    `,destroy:M}};window.tcRangeSliderPlugins.push(P);var O=P;})();\n", "/* \nTool Cool Range Slider - Storage Plugin\nVersion: 1.0.0\nDocumentation: https://github.com/toolcool-org/toolcool-range-slider \nLicense: MIT License        \nAuthor: Tool Cool, toolcool.org@gmail.com>                          \n*/\n(()=>{var s=\"tc-range-slider\",i=t=>{if(t===\"local-storage\"){let e=\"test\";try{return window.localStorage.setItem(e,e),window.localStorage.removeItem(e),!0}catch(r){return!1}}if(t===\"session-storage\"){let e=\"test\";try{return window.sessionStorage.setItem(e,e),window.sessionStorage.removeItem(e),!0}catch(r){return!1}}return!1},c=(t,e)=>{let r=encodeURIComponent(typeof e==\"object\"?JSON.stringify(e):e);window.localStorage.setItem(t,r)},S=t=>{let e=window.localStorage.getItem(t);return e===null?null:decodeURIComponent(e)},d=(t,e)=>{let r=encodeURIComponent(typeof e==\"object\"?JSON.stringify(e):e);window.sessionStorage.setItem(t,r)},m=t=>{let e=window.sessionStorage.getItem(t);return e===null?null:decodeURIComponent(e)},g=(t,e,r)=>{if(!!i(t))switch(t){case\"local-storage\":{c(e,r);break}case\"session-storage\":{d(e,r);break}}},p=(t,e)=>i(t)?t===\"local-storage\"?S(e):t===\"session-storage\"?m(e):null:null,u=(t,e,r)=>{if(!t)return;let n=p(t,e);if(!n)return;let o=null;try{o=JSON.parse(n)}catch(a){}!o||r(o)};window.tcRangeSliderPlugins=window.tcRangeSliderPlugins||[];var l=()=>{let t,e=s,r=!1;return{get name(){return\"Storage Labels\"},init:(n,o,a,f)=>{t=n.getAttribute(\"storage\")||void 0,e=n.getAttribute(\"storage-key\")||s,t&&(u(t,e,a.setValues),r=!0)},update:n=>{!t||!r||g(t,e,n.values)},onAttrChange:(n,o)=>{switch(n){case\"storage\":{t=o;break}case\"storage-key\":{e=o;break}}},gettersAndSetters:[{name:\"storage\",attributes:{get(){return t},set:n=>{t=n}}},{name:\"storageKey\",attributes:{get(){return e!=null?e:s},set:n=>{e=n}}}]}};window.tcRangeSliderPlugins.push(l);var E=l;})();\n", "/* \nTool Cool Range Slider - Moving Tooltip Plugin\nVersion: 1.0.1\nDocumentation: https://github.com/toolcool-org/toolcool-range-slider \nLicense: MIT License        \nAuthor: Tool Cool, toolcool.org@gmail.com>                          \n*/\n(()=>{var K=n=>!isNaN(parseFloat(n))&&isFinite(n),p=(n,o)=>K(n)?Number(n):o;var E=n=>n==null?!1:typeof n==\"boolean\"?n:n.trim().toLowerCase()===\"true\";window.tcRangeSliderPlugins=window.tcRangeSliderPlugins||[];var L=40,A=35,O=30,G=\"#475569\",W=\"#fff\",k=()=>{let n=null,o=null,d=!1,c=L,v=A,x=O,P=G,I=W,m=\"\",b=[],i=null,T=null,N=()=>{i==null||i.classList.toggle(\"is-after\",c<=0)},q=()=>{var e;let t=(e=n==null?void 0:n.shadowRoot)==null?void 0:e.querySelector(\"#range-slider\");i=document.createElement(\"div\"),i.classList.add(\"tooltips\"),t.prepend(i),N()},H=t=>{let e=document.createElement(\"div\");return e.className=t,e},S=(t,e,u,r)=>{!t||(e===\"vertical\"?(t.style.left=`${-c}px`,t.style.top=r!=null?r:\"0\"):(t.style.left=u!=null?u:\"0\",t.style.top=`${-c}px`),t.style.width=`${v}px`,t.style.height=`${x}px`,t.style.background=P,t.style.color=I)},a=()=>{var r,y,s,g;let t=(r=o==null?void 0:o.getValues())!=null?r:[],e=(y=o==null?void 0:o.getPointerElements())!=null?y:[],u=(s=o==null?void 0:o.getType())!=null?s:\"horizontal\";if(!!t)for(let l=0;l<t.length;l++){let h=b[l];if(!h)continue;let f=((g=t[l])!=null?g:\"\").toString();h.textContent=`${f}${m}`,S(h,u,e[l].style.left,e[l].style.top)}},w=()=>{var e;let t=(e=o==null?void 0:o.getValues())!=null?e:[];if(!!t){for(let u=0;u<t.length;u++){let r=H(`tooltip tooltip-${u+1}`);r.style.position=\"absolute\",b.push(r),i==null||i.prepend(r)}a()}},j=()=>{!n||(T=new ResizeObserver(t=>{for(let e of t)a()}),T.observe(n))},C=t=>{d=t,d?(q(),w(),j()):z()},U=t=>{c=t,a()},D=t=>{v=t,a()},M=t=>{x=t,a()},B=t=>{P=t,a()},F=t=>{I=t,a()},R=t=>{m=t,a()},X=t=>{var r,y;if(!d||!t.values)return;let e=(r=o==null?void 0:o.getPointerElements())!=null?r:[],u=(y=o==null?void 0:o.getType())!=null?y:\"horizontal\";for(let s=0;s<t.values.length;s++){let g=t.values[s],l=b[s];if(g===void 0&&!!l){l.remove(),l[s]=void 0;continue}if(g!==void 0&&!l){let f=H(`tooltip tooltip-${s+1}`),J=(g!=null?g:\"\").toString();f.textContent=`${J}${m}`,f.style.position=\"absolute\",S(f,u,e[s].style.left,e[s].style.top),b[s]=f,i==null||i.append(f)}if(!l)continue;let h=(g!=null?g:\"\").toString();l.textContent=`${h}${m}`,S(l,u,e[s].style.left,e[s].style.top)}},z=()=>{i==null||i.remove();for(let t of b)!t||t.remove();b=[],T==null||T.disconnect()};return{get name(){return\"Moving Tooltip\"},init:(t,e,u,r)=>{n=t,o=r,c=p(t.getAttribute(\"moving-tooltip-distance-to-pointer\"),L),v=p(t.getAttribute(\"moving-tooltip-width\"),A),x=p(t.getAttribute(\"moving-tooltip-height\"),O),P=t.getAttribute(\"moving-tooltip-bg\")||G,I=t.getAttribute(\"moving-tooltip-text-color\")||W,m=t.getAttribute(\"moving-tooltip-units\")||\"\",C(E(t.getAttribute(\"moving-tooltip\")))},update:X,onAttrChange:(t,e)=>{t===\"moving-tooltip\"&&C(E(e)),t===\"moving-tooltip-distance-to-pointer\"&&U(p(e,L)),t===\"moving-tooltip-width\"&&D(p(e,A)),t===\"moving-tooltip-height\"&&M(p(e,O)),t===\"moving-tooltip-bg\"&&B(e),t===\"moving-tooltip-text-color\"&&F(e),t===\"moving-tooltip-units\"&&R(e)},gettersAndSetters:[{name:\"movingTooltip\",attributes:{get(){return d!=null?d:!1},set:t=>{C(E(t))}}},{name:\"distanceToPointer\",attributes:{get(){return c!=null?c:!1},set:t=>{U(p(t,L))}}},{name:\"tooltipWidth\",attributes:{get(){return v},set:t=>{D(p(t,A))}}},{name:\"tooltipHeight\",attributes:{get(){return x},set:t=>{M(p(t,O))}}},{name:\"tooltipBg\",attributes:{get(){return P},set:t=>{B(t)}}},{name:\"tooltipTextColor\",attributes:{get(){return I},set:t=>{F(t)}}},{name:\"tooltipUnits\",attributes:{get(){return m},set:t=>{R(t)}}}],css:`\n.tooltip{\n  background: #475569;\n  color: #fff;\n  font-size: 0.8rem;\n  border-radius: 3px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  transform: translate(-50%, -50%);\n}  \n\n.tooltip::after {\n    content: '';\n    position: absolute;\n    width: 20%;\n    height: 20%;\n    transform: translate(0%, -50%) rotate(45deg);\n    background-color: inherit;\n    z-index: -1;\n    top: 100%;\n}\n\n.is-after .tooltip::after {\n  top: 0;\n}\n\n.type-vertical .tooltip::after{\n  transform: translate(-50%, 0%) rotate(45deg);\n  left: 100%;\n  top: auto;\n}\n\n.type-vertical .is-after .tooltip::after{\n  left: 0%;\n}\n    `,destroy:z}};window.tcRangeSliderPlugins.push(k);var V=k;})();\n", "/* \nTool Cool Range Slider - Origin Center Plugin\nVersion: 1.0.0\nDocumentation: https://github.com/toolcool-org/toolcool-range-slider \nLicense: MIT License        \nAuthor: Tool Cool, toolcool.org@gmail.com>                          \n*/\n(()=>{var s=t=>t==null?!1:typeof t==\"boolean\"?t:t.trim().toLowerCase()===\"true\";window.tcRangeSliderPlugins=window.tcRangeSliderPlugins||[];var f=()=>{let t=!1,o=null,e=null,u=()=>{if(!e||!o)return;let r=o.getPercents()||[];if(r.length!==1)return;let n=r[0],i=n<=50?n:n-Math.abs(n-50);if(o.getType()===\"vertical\"){e.style.removeProperty(\"width\"),e.style.removeProperty(\"left\"),e.style.removeProperty(\"right\");let l=Math.abs(50-n);e.style.height=`${l}%`,o.isBottomToTop()?e.style.bottom=`${i}%`:e.style.top=`${i}%`}else{e.style.removeProperty(\"height\"),e.style.removeProperty(\"top\"),e.style.removeProperty(\"bottom\");let l=Math.abs(50-n);e.style.width=`${l}%`,o.isRightToLeft()?e.style.right=`${i}%`:e.style.left=`${i}%`}},a=r=>{t=r,u()};return{get name(){return\"Origin at Center\"},init:(r,n,i,l)=>{var g;o=l,e=(g=r.shadowRoot)==null?void 0:g.querySelector(\".panel-fill\"),t=s(r.getAttribute(\"origin-at-center\")),t&&u()},update:r=>{!t||u()},onAttrChange:(r,n)=>{r===\"origin-at-center\"&&a(s(n))},gettersAndSetters:[{name:\"enabled\",attributes:{get(){return t!=null?t:!1},set:r=>{a(s(r))}}}]}};window.tcRangeSliderPlugins.push(f);var b=f;})();\n", "export default (styles, linkHrefs) => { return ` ${ linkHrefs && linkHrefs.length > 0 ? linkHrefs.map(linkHref => `<link rel=\"stylesheet\" href=\"${ linkHref }\" />`).join('') : '' } <style> ${styles} </style> <div class=\"range-slider-box\"> <div class=\"row\"> <div id=\"range-slider\" class=\"range-slider\"> <div class=\"container\"> <div class=\"panel\"></div> <div class=\"panel-fill\"></div> <div class=\"container\"> <div class=\"pointer\" tabindex=\"0\" role=\"slider\"> <div class=\"pointer-shape\"></div> </div> </div> </div> </div> </div> </div>`; }; ", "/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const PointersOverlap = 'pointers-overlap';\nexport const PointersMinDistance = 'pointers-min-distance';\nexport const PointersMaxDistance = 'pointers-max-distance';\nexport const RangeDragging = 'range-dragging';\n\nexport const Data = 'data';\nexport const Min = 'min';\nexport const Max = 'max';\nexport const Step = 'step';\nexport const Round = 'round';\nexport const Type = 'type';\nexport const Theme = 'theme';\nexport const RightToLeft = 'rtl';\nexport const BottomToTop = 'btt';\n\nexport const Disabled = 'disabled';\nexport const KeyboardDisabled = 'keyboard-disabled';\n\nexport const SliderWidth = 'slider-width';\nexport const SliderHeight = 'slider-height';\nexport const SliderRadius = 'slider-radius';\n\nexport const SliderBg = 'slider-bg';\nexport const SliderBgHover = 'slider-bg-hover';\nexport const SliderBgFill = 'slider-bg-fill';\n\nexport const PointerWidth = 'pointer-width';\nexport const PointerHeight = 'pointer-height';\nexport const PointerRadius = 'pointer-radius';\nexport const PointerBg = 'pointer-bg';\nexport const PointerBgHover = 'pointer-bg-hover';\nexport const PointerBgFocus = 'pointer-bg-focus';\nexport const PointerShadow = 'pointer-shadow';\nexport const PointerShadowHover = 'pointer-shadow-hover';\nexport const PointerShadowFocus = 'pointer-shadow-focus';\nexport const PointerBorder = 'pointer-border';\nexport const PointerBorderHover = 'pointer-border-hover';\nexport const PointerBorderFocus = 'pointer-border-focus';\n\nexport const AnimateOnClick = 'animate-onclick';\nexport const CSSLinks = 'css-links';\n", "/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const Vertical = 'vertical';\nexport const Horizontal = 'horizontal';\n", "/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b - a) * (x - min) / (max - min) + a\n */\nexport const convertRange = (min: number, max: number, a: number, b: number, x: number) => {\n  const temp = (max - min);\n  if(temp === 0) return a;\n  return ((b - a) * (x - min)) / temp + a;\n};\n\n// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n\n// the below function should receive any\n// eslint-disable-next-line\nexport const getNumber = (input: any, defaultValue: any) : number => {\n  return isNumber(input) ? Number(input) : defaultValue;\n};\n\n/**\n * Round up to the next multiple of X,\n * where X is the step provided by the user.\n */\nexport const roundToStep = (num: number, step: number) => {\n  return step === 0 ? 0 : Math.round(num / step) * step;\n};\n\n/**\n * round to decimal places\n * https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n */\nexport const setDecimalPlaces = (num: number, decimalPlaces = Infinity) => {\n  if (decimalPlaces === Infinity) return num;\n\n  const coeff = 10 ** decimalPlaces;\n  return Math.round(num * coeff) / coeff;\n};\n\nexport const getBoolean = (val: string | null | undefined | boolean) => {\n  if(val === null || val === undefined) return false;\n  if(typeof val === 'boolean') return val;\n  return val.trim().toLowerCase() === 'true';\n};\n", "import { getNumber, isNumber } from './math-provider';\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\ninterface IIndexable<T = any> { [key: string]: T }\n\nexport const sendPointerClickedEvent = ($component: HTMLElement, $pointer: HTMLElement) => {\n  $component.dispatchEvent(\n    new CustomEvent('onPointerClicked', {\n      detail: {\n        $pointer: $pointer,\n      },\n    })\n  );\n};\n\nexport const sendMouseDownEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendMouseUpEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseUp', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendOnKeyDownEvent = ($component: HTMLElement, evt: KeyboardEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onKeyDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendChangeEvent = (\n  $component: HTMLElement,\n  values: (string | number | undefined)[],\n) => {\n\n  if(!values || values.length <= 0) return;\n\n  const transformed = values.map(value => isNumber(value) ? getNumber(value, value) : value);\n\n  const detail: IIndexable = {\n    values: transformed || [],\n  };\n\n  detail.value = transformed[0];\n  detail.value0 = transformed[0];\n  detail.value1 = transformed[0];\n\n  for(let i=1; i<transformed.length; i++){\n    detail[`value${ i + 1 }`] = transformed[i];\n  }\n\n  $component.dispatchEvent(\n    new CustomEvent('change', {\n      detail,\n    })\n  );\n};", "import * as TypeEnum from '../enums/type-enum';\nimport { sendOnKeyDownEvent, sendPointerClickedEvent } from '../domain/events-provider';\n\nexport interface IPointer {\n  readonly percent: number;\n  readonly $pointer: HTMLElement;\n\n  updatePosition: (percent: number, leftWall: number | undefined, rightWall: number | undefined, type: string, rightToLeft: boolean, bottomToTop: boolean) => void;\n\n  disabled: boolean;\n\n  isClicked: ($target: HTMLElement) => boolean;\n  setCallbacks: (\n    arrowLeft: (pointerIndex: number) => void,\n    arrowRight: (pointerIndex: number) => void,\n    arrowUp: (pointerIndex: number) => void,\n    arrowDown: (pointerIndex: number) => void\n  ) => void;\n\n  setAttr: (key: string, value: string | null | undefined) => void;\n  getAttr: (key: string) => string | null;\n\n  destroy: () => void;\n}\n\nexport const Pointer = ($component: HTMLElement, $pointer: HTMLElement, index: number) : IPointer => {\n\n  // the pointer value in % in the range [0, 100] -\n  // used to render the pointer position\n  let percent = 0;\n\n  let arrowLeft: (pointerIndex: number) => void;\n  let arrowRight: (pointerIndex: number) => void;\n  let arrowUp: (pointerIndex: number) => void;\n  let arrowDown: (pointerIndex: number) => void;\n\n  let disabled = false;\n\n  // -------------- APIs -------------------------\n  const updatePosition = (_percent: number, _leftWall: number | undefined, _rightWall: number | undefined, _type: string, _rightToLeft: boolean, _bottomToTop: boolean) => {\n    if(_rightWall !== undefined && _percent > _rightWall){\n      _percent = _rightWall;\n    }\n\n    if(_leftWall !== undefined && _percent < _leftWall){\n      _percent = _leftWall;\n    }\n\n    percent = _percent;\n    // $pointer.focus();\n\n    // the below code should not change the global pointer percent,\n    // only its position on the panel\n    let percentPos = percent;\n    if((_type === TypeEnum.Vertical && _bottomToTop) ||\n      (_type === TypeEnum.Horizontal && _rightToLeft)) {\n      percentPos = 100 - percentPos;\n    }\n\n    if (_type === TypeEnum.Vertical) {\n      $pointer.style.top = `${ percentPos }%`;\n    }\n    else {\n      $pointer.style.left = `${ percentPos }%`;\n    }\n  };\n\n  const isClicked = ($target: HTMLElement) => {\n    return $target === $pointer || $pointer.contains($target);\n  };\n\n  const setCallbacks = (\n    _arrowLeft: (pointerIndex: number) => void,\n    _arrowRight: (pointerIndex: number) => void,\n    _arrowUp: (pointerIndex: number) => void,\n    _arrowDown: (pointerIndex: number) => void\n  ) => {\n    arrowLeft = _arrowLeft;\n    arrowRight = _arrowRight;\n    arrowUp = _arrowUp;\n    arrowDown = _arrowDown;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $pointer.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $pointer.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($pointer.hasAttribute('aria-disabled')) {\n        $pointer.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setAttr = (key: string, value: string | null | undefined) => {\n    if(value === null || value === undefined){\n      $pointer.removeAttribute(key);\n    }\n    else{\n      $pointer.setAttribute(key, value);\n    }\n  };\n\n  const getAttr = (key: string) => {\n    return $pointer.getAttribute(key);\n  };\n\n  // -------------- Events ------------------------\n\n  const pointerKeyDown = (evt: KeyboardEvent) => {\n    if(disabled) return;\n\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        evt.preventDefault();\n        if(typeof arrowLeft === 'function'){\n          arrowLeft(index);\n        }\n        break;\n      }\n\n      case 'ArrowRight': {\n        evt.preventDefault();\n        if(typeof arrowRight === 'function'){\n          arrowRight(index);\n        }\n        break;\n      }\n\n      case 'ArrowUp': {\n        evt.preventDefault();\n        if(typeof arrowUp === 'function'){\n          arrowUp(index);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        evt.preventDefault();\n        if(typeof arrowDown === 'function'){\n          arrowDown(index);\n        }\n        break;\n      }\n    }\n\n    sendOnKeyDownEvent($component, evt);\n  };\n\n  const pointerClicked = () => {\n    if(disabled) return;\n    sendPointerClickedEvent($component, $pointer);\n  };\n\n  // ---------- Lifecycle ------------------------\n\n  (() => {\n    $pointer.className = `pointer pointer-${ index }`;\n\n    $pointer.addEventListener('keydown', pointerKeyDown);\n    $pointer.addEventListener('click', pointerClicked);\n  })();\n\n  const destroy = () => {\n    $pointer.removeEventListener('keydown', pointerKeyDown);\n    $pointer.removeEventListener('click', pointerClicked);\n    $pointer.remove();\n  };\n\n  return {\n    $pointer,\n\n    get percent() {\n      return percent;\n    },\n\n    get disabled() {\n      return disabled;\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    updatePosition,\n\n    isClicked,\n    setCallbacks,\n    setAttr,\n    getAttr,\n\n    destroy,\n  };\n};\n\n", "import { isNumber } from '../domain/math-provider';\n\nexport const parseData = (dataString: string | undefined | null): (string | number)[] | undefined => {\n  if (dataString === undefined || dataString === null) return undefined;\n\n  if(Array.isArray(dataString)) return dataString as (string | number)[];\n\n  const result = dataString.trim();\n  if (result === '') return undefined;\n\n  const parts = dataString.split(',');\n  const list: string[] = [];\n  let allValuesAreNumbers = true;\n\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i].trim();\n    if (part === '') continue;\n\n    list.push(part);\n\n    if (!isNumber(part)) {\n      allValuesAreNumbers = false;\n    }\n  }\n\n  if (!allValuesAreNumbers) return list;\n\n  return list.map((item) => Number(item));\n};\n\nexport const findValueIndexInData = (val: string | number, data: (string | number)[] | undefined) => {\n  return data ? data.findIndex((item) => item === val || item.toString().trim() === val.toString().trim()) : -1;\n};", "import * as TypeEnum from '../enums/type-enum';\n\nexport interface IPanelFill {\n  updatePosition: (type: string, percents: (number | undefined)[], rightToLeft: boolean, bottomToTop: boolean) => void;\n}\n\nexport const PanelFill = ($fill: HTMLElement) : IPanelFill => {\n\n  const updatePosition = (type: string, percents: (number | undefined)[], rightToLeft: boolean, bottomToTop: boolean) => {\n\n    if(percents.length <= 0) return;\n\n    const oneOnly = percents.length === 1;\n    const first = percents[0] as number;\n    const last = percents[percents.length - 1] as number;\n\n    if (type === TypeEnum.Vertical) {\n      $fill.style.removeProperty('width');\n      $fill.style.removeProperty('right');\n      $fill.style.removeProperty('left');\n\n      if (!oneOnly) {\n        $fill.style.height = `${Math.abs(first - last)}%`;\n      }\n      else{\n        $fill.style.height = `${ first }%`;\n      }\n\n      if (bottomToTop) {\n        $fill.style.bottom = '0%';\n\n        if (!oneOnly) {\n          $fill.style.top = `${Math.min(100 - last, 100 - first)}%`;\n        }\n        else{\n          $fill.style.top = 'auto';\n        }\n      }\n      else {\n        $fill.style.bottom = 'auto';\n\n        if (!oneOnly) {\n          $fill.style.top = `${Math.min(first, last)}%`;\n        }\n        else{\n          $fill.style.top = '0%';\n        }\n      }\n    }\n    else {\n      $fill.style.removeProperty('height');\n      $fill.style.removeProperty('top');\n      $fill.style.removeProperty('bottom');\n\n      if (!oneOnly) {\n        $fill.style.width = `${ Math.abs(first - last) }%`;\n      }\n      else{\n        $fill.style.width = `${ first }%`;\n      }\n\n      if (rightToLeft) {\n        $fill.style.right = '0%';\n\n        if (!oneOnly) {\n          $fill.style.left = `${ Math.min(100 - last, 100 - first) }%`;\n        }\n        else{\n          $fill.style.left = 'auto';\n        }\n      }\n      else {\n        $fill.style.right = 'auto';\n\n        if (!oneOnly) {\n          $fill.style.left = `${ Math.min(first, last) }%`;\n        }\n        else{\n          $fill.style.left = '0%';\n        }\n      }\n    }\n  };\n\n  return {\n    updatePosition,\n  };\n};", "/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const AnimateOnClick = '--animate-onclick';\nexport const SliderWidth = '--width';\nexport const SliderHeight = '--height';\nexport const SliderRadius = '--panel-bg-border-radius';\n\nexport const SliderBg = '--panel-bg';\nexport const SliderBgHover = '--panel-bg-hover';\nexport const SliderBgFill = '--panel-bg-fill';\n\nexport const PointerWidth = '--pointer-width';\nexport const PointerHeight = '--pointer-height';\nexport const PointerRadius = '--pointer-border-radius';\nexport const PointerBg = '--pointer-bg';\nexport const PointerBgHover = '--pointer-bg-hover';\nexport const PointerBgFocus = '--pointer-bg-focus';\nexport const PointerShadow = '--pointer-shadow';\nexport const PointerShadowHover = '--pointer-shadow-hover';\nexport const PointerShadowFocus = '--pointer-shadow-focus';\nexport const PointerBorder = '--pointer-border';\nexport const PointerBorderHover = '--pointer-border-hover';\nexport const PointerBorderFocus = '--pointer-border-focus';\n", "import * as AttributesEnum from '../enums/attributes-enum';\nimport { getNumber } from './math-provider';\n\nexport const getAttributesByRegex = <T>($component: HTMLElement, regex: RegExp, parseValue?: (val: string) => T) : Map<number, T> => {\n\n  const map = new Map<number, T>();\n\n  for (const attr of $component.attributes) {\n    const valueProp = attr.nodeName.trim().toLowerCase();\n    const isValue = regex.test(valueProp);\n    if(!isValue) continue;\n\n    const key = valueProp.replace(/\\D/g, '').trim();\n    const keyNum = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n    const value = parseValue && typeof parseValue === 'function' ? parseValue(attr.value) : attr.value;\n    map.set(keyNum, value as T);\n  }\n\n  return map;\n};\n\nexport const getExternalCSSList = ($component: HTMLElement) => {\n  if(!$component) return null;\n\n  const str = $component.getAttribute(AttributesEnum.CSSLinks);\n  if(!str) return null;\n\n  const parts = str.split(';');\n  const cssList: string[] = [];\n\n  for(const part of parts){\n    if(part.trim() === '') continue;\n    cssList.push(part.trim());\n  }\n\n  return cssList;\n};", "import * as AttributesEnum from '../enums/attributes-enum';\nimport * as CSSVariables from '../enums/css-vars-enum';\nimport { IPointer } from './pointer';\nimport { getAttributesByRegex } from '../domain/common-provider';\n\nexport interface IStyles {\n\n  setStyle: (key: string, value: string | null | undefined, index: number) => void;\n  getStyle: (key: string, index: number) => string | undefined;\n\n  theme: string | null;\n  readonly pointerShapes: (string | null)[];\n  setPointerShape: (index: number, value: string | null) => void;\n}\n\nexport const stylePropertiesList: [string, string, string, RegExp | null][] = [\n  [CSSVariables.SliderWidth, AttributesEnum.SliderWidth, 'sliderWidth', null],\n  [CSSVariables.SliderHeight, AttributesEnum.SliderHeight, 'sliderHeight', null],\n  [CSSVariables.SliderRadius, AttributesEnum.SliderRadius, 'sliderRadius', null],\n\n  [CSSVariables.SliderBg, AttributesEnum.SliderBg, 'sliderBg', null],\n  [CSSVariables.SliderBgHover, AttributesEnum.SliderBgHover, 'sliderBgHover', null],\n  [CSSVariables.SliderBgFill, AttributesEnum.SliderBgFill, 'sliderBgFill', null],\n\n  [CSSVariables.PointerWidth, AttributesEnum.PointerWidth, 'pointer#Width', /^pointer([0-9]*)-width$/], // pointer-width, pointer2-width, ...\n  [CSSVariables.PointerHeight, AttributesEnum.PointerHeight, 'pointer#Height', /^pointer([0-9]*)-height$/], // pointer-height$, pointer2-height, ...\n  [CSSVariables.PointerRadius, AttributesEnum.PointerRadius, 'pointer#Radius', /^pointer([0-9]*)-radius$/], // pointer-radius, pointer2-radius, ...\n  [CSSVariables.PointerBg, AttributesEnum.PointerBg, 'pointer#Bg', /^pointer([0-9]*)-bg$/], // pointer-bg, pointer2-bg, ...\n  [CSSVariables.PointerBgHover, AttributesEnum.PointerBgHover, 'pointer#BgHover', /^pointer([0-9]*)-bg-hover$/], // pointer-bg-hover, pointer2-bg-hover, ...\n  [CSSVariables.PointerBgFocus, AttributesEnum.PointerBgFocus, 'pointer#BgFocus', /^pointer([0-9]*)-bg-focus$/], // pointer-bg-focus, pointer2-bg-focus, ...\n  [CSSVariables.PointerShadow, AttributesEnum.PointerShadow, 'pointer#Shadow', /^pointer([0-9]*)-shadow$/], // pointer-shadow, pointer2-shadow, ...\n  [CSSVariables.PointerShadowHover, AttributesEnum.PointerShadowHover, 'pointer#ShadowHover', /^pointer([0-9]*)-shadow-hover$/], // pointer-shadow-hover, pointer2-shadow-hover, ...\n  [CSSVariables.PointerShadowFocus, AttributesEnum.PointerShadowFocus, 'pointer#ShadowFocus', /^pointer([0-9]*)-shadow-focus$/], // pointer-shadow-focus, pointer2-shadow-focus, .\n  [CSSVariables.PointerBorder, AttributesEnum.PointerBorder, 'pointer#Border', /^pointer([0-9]*)-border$/], // pointer-border, pointer2-border, ...\n  [CSSVariables.PointerBorderHover, AttributesEnum.PointerBorderHover, 'pointer#BorderHover', /^pointer([0-9]*)-border-hover$/], // pointer-border-hover, pointer2-border-hover, ...\n  [CSSVariables.PointerBorderFocus, AttributesEnum.PointerBorderFocus, 'pointer#BorderFocus', /^pointer([0-9]*)-border-focus$/], // pointer-border-focus, pointer2-border-focus, ...\n];\n\nexport const Styles = ($component: HTMLElement, $slider: HTMLElement, pointers: IPointer[]) : IStyles => {\n\n  let theme: string | null = null;\n  const pointerShapes: (string | null)[] = [];\n  const stylesMap: Map<string, string> = new Map();\n\n  // ----- SETTERS ---------------------------\n\n  const removeClassesStartWith = (prefix: string, $element = $slider) => {\n    const classList = [...$element.classList];\n    for(const className of classList){\n      if(className.startsWith(prefix)){\n        $slider.classList.remove(className);\n      }\n    }\n  };\n\n  const removeClasses = () => {\n    // remove shape classes from $slider\n    removeClassesStartWith('shape');\n\n    // remove shape classes from pointers (if there are any)\n    const $pointers = $slider.querySelectorAll('.pointer');\n    for(const $pointer of $pointers){\n      removeClassesStartWith('shape', $pointer as HTMLElement);\n    }\n  };\n\n  const setTheme = (val: string | null) => {\n    theme = val;\n    removeClassesStartWith('theme-');\n\n    if(typeof val === 'string'){\n      $slider.classList.add(`theme-${ val }`);\n    }\n  };\n\n  const updatePointerShapes = () => {\n    removeClasses();\n\n    if(pointerShapes.length <= 0) return;\n\n    // first shape is added to the slider, as it should be applied on all pointers (potentially)\n    $slider.classList.add('shape', `shape-${ pointerShapes[0] }`);\n\n    // other shapes should be added to the relevant pointers each;\n    for(let i=1; i<pointerShapes.length; i++){\n      const item = pointerShapes[i];\n      if(!item) continue;\n\n      const $pointer = $slider.querySelector(`.pointer-${ i }`);\n      if(!$pointer) continue;\n\n      $pointer.classList.add('shape', `shape-${ item }`);\n    }\n  };\n\n  const setPointerShape = (index: number, value: string) => {\n    pointerShapes[index] = value;\n    updatePointerShapes();\n  };\n\n  const setPointerShapes = () => {\n\n    removeClasses();\n\n    // pointer-shape, pointer2-shape, ...\n    const list = getAttributesByRegex($component, /^pointer([0-9]*)-shape$/);\n    if(list.size <= 0) return;\n\n    // save shapes to the list that can be used for the getter APIs later\n    for(const item of list){\n      const index = item[0] as number;\n      pointerShapes[index] = item[1] as string;\n    }\n\n    updatePointerShapes();\n  };\n\n  const getKey = (key: string, index: number) => {\n    return `${ key }-${ index }`;\n  };\n\n  const setStyle = (key: string, value: string | null | undefined, index: number) => {\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    const $styleHolder = index === 0 ? $slider : pointer.$pointer;\n\n    if(value === null || value === undefined){\n      if(stylesMap.has(getKey(key, index))){\n        stylesMap.delete(getKey(key, index));\n      }\n      $styleHolder.style.removeProperty(key);\n      return;\n    }\n\n    stylesMap.set(getKey(key, index), value);\n    $styleHolder.style.setProperty(key, value);\n  };\n\n  const getStyle = (key: string, index: number) => {\n    return stylesMap.get(getKey(key, index));\n  };\n\n  // ---- initialization ---------------------\n  (() => {\n\n    for(const item of stylePropertiesList){\n\n      // '--pointer-width', 'pointer-width', 'pointerWidth', regex or null\n      const [cssVariableName, attrName, apiProperty, regex] = item;\n\n      // apply the styles via CSS variables;\n      // if index = 0 ---> apply the style on the whole slider, so all\n      // pointers will inherit it;\n      // otherwise, apply styles on the individual pointers;\n      if(regex){\n        const list = getAttributesByRegex($component, regex);\n        for(const item of list){\n          const index = item[0];\n          const value = item[1] as string;\n          setStyle(cssVariableName, value, index);\n        }\n      }\n      else{\n        const cssVariableValue = $component.getAttribute(attrName);\n        setStyle(cssVariableName, cssVariableValue, 0);\n      }\n\n      // add APIs --------------------------\n      const apiProperties: [string, number][] = [];\n\n      if(apiProperty.indexOf('#') === -1){\n        apiProperties.push([apiProperty, 0]);\n      }\n      else{\n        apiProperties.push([apiProperty.replace('#', ''), 0]);\n        apiProperties.push([apiProperty.replace('#', '0'), 0]);\n        apiProperties.push([apiProperty.replace('#', '1'), 0]);\n        for(let i=1; i<pointers.length; i++){\n          apiProperties.push([apiProperty.replace('#', (i + 1).toString()), i]);\n        }\n      }\n\n      for(const item of apiProperties){\n        try{\n          const propName = item[0];\n          const index = item[1];\n\n          if(!Object.prototype.hasOwnProperty.call($component, propName)){\n            Object.defineProperty($component, propName, {\n              get () {\n                return getStyle(cssVariableName, index);\n              },\n\n              set: (val) => {\n                setStyle(cssVariableName, val, index);\n              },\n            });\n          }\n        }\n        catch (ex){\n          console.error(ex);\n        }\n      }\n    }\n\n    setTheme($component.getAttribute(AttributesEnum.Theme));\n    setPointerShapes();\n  })();\n\n  return {\n    setStyle,\n    getStyle,\n\n    get theme() {\n      return theme;\n    },\n\n    set theme(val){\n      setTheme(val);\n    },\n\n    get pointerShapes() {\n      return pointerShapes;\n    },\n\n    setPointerShape,\n  };\n};", "/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const AnimateOnClick = 'animate-on-click';\nexport const RangeDragging = 'range-dragging';\n", "import { IPlugin, IPluginGetters, IPluginSetters, IPluginUpdateData } from './interfaces';\n\ndeclare global {\n  interface Window {\n    tcRangeSliderPlugins: (() => IPlugin)[];\n    tcRangeSliderObservedAttr: string[];\n  }\n}\n\nexport interface IPluginsManager {\n  init: () => void;\n\n  update: (data: IPluginUpdateData) => void;\n\n  onAttrChange: (attrName: string, newValue: string) =>  void;\n\n  destroy: () => void;\n}\n\nexport const PluginsManager = (\n  $component: HTMLElement,\n  requestUpdatePlugins: () => void,\n  setters: IPluginSetters,\n  getters: IPluginGetters,\n) : IPluginsManager => {\n\n  const plugins: IPlugin[] = [];\n\n  // ------ APIs ----------------------------\n\n  const update = (data: IPluginUpdateData) => {\n    for(const plugin of plugins){\n      if(plugin.update && typeof plugin.update === 'function'){\n        plugin.update(data);\n      }\n    }\n  };\n\n  const destroy = () => {\n    for(const plugin of plugins){\n      if(plugin.destroy && typeof plugin.destroy === 'function'){\n        plugin.destroy();\n      }\n    }\n  };\n\n  const onAttrChange = (_attrName: string, _newValue: string) => {\n    for(const plugin of plugins){\n      if(plugin.onAttrChange && typeof plugin.onAttrChange === 'function'){\n        plugin.onAttrChange(\n          _attrName,\n          _newValue\n        );\n      }\n    }\n  };\n\n  const defineSettersGetters = (plugin: IPlugin) => {\n    if(!plugin.gettersAndSetters) return;\n\n    for(const item of plugin.gettersAndSetters){\n      if(!item.name || !item.attributes) continue;\n\n      try{\n        if(!Object.prototype.hasOwnProperty.call($component, item.name)){\n          Object.defineProperty($component, item.name, item.attributes);\n        }\n      }\n      catch (ex){\n        console.error('defineSettersGetters error:', ex);\n      }\n    }\n  };\n\n  const initStyles = (plugin: IPlugin) => {\n    if(!plugin.css) return;\n\n    const $style = $component.shadowRoot?.querySelector('style');\n    if(!$style) return;\n\n    $style.innerHTML += plugin.css;\n  };\n\n  // ------ initialization ------------------\n  const init = () => {\n    if(!window.tcRangeSliderPlugins) return;\n\n    for(const pluginFunc of window.tcRangeSliderPlugins){\n      const plugin = pluginFunc();\n      plugins.push(plugin);\n\n      if(plugin.init && typeof plugin.init === 'function'){\n\n        // call plugin initialization function\n        plugin.init(\n          $component,\n          requestUpdatePlugins,\n          setters,\n          getters,\n        );\n\n        // if plugin has getters and setters that used for APIs ---> define them\n        defineSettersGetters(plugin);\n\n        // if plugin has css rules defined as plain text ---> they can be added dynamically\n        initStyles(plugin);\n      }\n    }\n  };\n\n  return {\n    init,\n    update,\n    onAttrChange,\n    destroy,\n  };\n};", "import { getNumber, isNumber } from './math-provider';\nimport { IPointer, Pointer } from '../ui/pointer';\nimport { ISlider } from '../ui/slider';\n\nexport const initPointers = ($component: HTMLElement, $pointer: HTMLElement) => {\n  const map = new Map<number, number | string>();\n  const regex = /^value([0-9]*)$/;\n\n  // collect data about key / value pairs: value=50, value2=70, etc.\n  // value = value0 = value1 (all these are aliases of each other)\n  for (const attr of $component.attributes) {\n    const valueProp = attr.nodeName.trim().toLowerCase();\n    const isValue = regex.test(valueProp);\n    if(!isValue) continue;\n\n    const key = valueProp.replace('value', '').trim();\n    const keyNum = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n    const value = isNumber(attr.value) ? getNumber(attr.value, 0) : attr.value;\n\n    map.set(keyNum, value);\n  }\n\n  // find the max value number in the map\n  const max = Math.max(...Array.from(map.keys()));\n  const pointers: [IPointer, string | number | undefined][] = [];\n\n  // first pointer always exists\n  pointers.push([Pointer($component, $pointer, 0), map.get(0)]);\n\n  // add all other pointers\n  let $latestPointer = $pointer;\n\n  for(let i=1; i<=max; i++){\n    const $newPointer = $pointer.cloneNode(true) as HTMLElement;\n    $latestPointer.after($newPointer);\n\n    $latestPointer = $newPointer;\n    pointers.push([Pointer($component, $newPointer, i), map.get(i)]);\n  }\n\n  return pointers;\n};\n\nexport const initPointerAPI = (\n  $component: HTMLElement,\n  slider: ISlider,\n  index: number,\n  valueProp: string,\n  ariaLabelProp: string,\n  pointerShapeProp: string,\n  pointerDisabledProp: string\n) => {\n\n  try{\n\n    // `value${ index + 1 }`: value, value0, value1, value2, etc.\n    Object.defineProperty($component, valueProp, {\n      configurable: true,\n      get () {\n        if(!slider) return undefined;\n\n        const pointer = slider.pointers[index];\n        if(!pointer) return undefined;\n\n        const val = slider.getTextValue(pointer.percent);\n        return isNumber(val) ? getNumber(val, val) : val;\n      },\n\n      set: (val) => {\n        slider?.setValue(val, index);\n      },\n    });\n\n    // `ariaLabel${ index + 1 }`\n    Object.defineProperty($component, ariaLabelProp, {\n      configurable: true,\n      get () {\n        return slider?.pointers[index]?.getAttr('aria-label') ?? undefined;\n      },\n\n      set: (val) => {\n        if(!slider) return;\n        slider.setAriaLabel(index, val);\n      },\n    });\n\n    // `pointerShape${ index + 1 }`\n    Object.defineProperty($component, pointerShapeProp, {\n      configurable: true,\n      get () {\n        return slider?.styles?.pointerShapes[index] ?? null;\n      },\n\n      set: (val) => {\n        if(!slider || !slider.styles) return;\n        slider.styles.setPointerShape(index, val);\n      },\n    });\n\n    // `pointer${ index + 1 }Disabled`\n    Object.defineProperty($component, pointerDisabledProp, {\n      configurable: true,\n      get () {\n        return slider?.pointers[index].disabled ?? false;\n      },\n\n      set: (val) => {\n        if(!slider) return;\n\n        const pointer = slider?.pointers[index];\n        if(!pointer) return;\n\n        pointer.disabled = val;\n      },\n    });\n  }\n  catch (ex){\n    console.error(ex);\n  }\n};\n\nexport const initPointerAPIs = ($component: HTMLElement, slider: ISlider) => {\n\n  const apiProperties: [string, string, string, string, number][] = [\n    ['value', 'ariaLabel', 'pointerShape', 'pointerDisabled', 0],\n    ['value0', 'ariaLabel0', 'pointerShape0', 'pointer0Disabled', 0],\n    ['value1', 'ariaLabel1', 'pointerShape1', 'pointer1Disabled', 0],\n  ];\n\n  for(let i=1; i<slider.pointers.length; i++){\n    apiProperties.push([`value${ i + 1 }`, `ariaLabel${ i + 1 }`, `pointer${ i + 1 }Shape`, `pointer${ i + 1 }Disabled`, i]);\n  }\n\n  for(const item of apiProperties){\n    initPointerAPI($component,\n      slider,\n      item[4],\n      item[0],\n      item[1],\n      item[2],\n      item[3]\n    );\n  }\n};\n\nexport const changePointersOrder = (pointers: IPointer[], isDesc: boolean, $component: HTMLElement) => {\n\n  const $container = $component.shadowRoot?.querySelector('.container') as HTMLElement\n  if(!$container) return;\n\n  for(const pointer of pointers){\n    if(isDesc){\n      $container.prepend(pointer.$pointer);\n    }\n    else{\n      $container.append(pointer.$pointer);\n    }\n  }\n};\n", "import { IPointer, Pointer } from './pointer';\nimport { convertRange, getBoolean, getNumber, isNumber, roundToStep, setDecimalPlaces } from '../domain/math-provider';\nimport * as AttributesEnum from '../enums/attributes-enum';\nimport { TData, TStep } from '../types';\nimport { findValueIndexInData, parseData } from '../dal/data-provider';\nimport * as TypeEnum from '../enums/type-enum';\nimport { IPanelFill, PanelFill } from './panel-fill';\nimport { sendChangeEvent, sendMouseDownEvent, sendMouseUpEvent } from '../domain/events-provider';\nimport { IStyles, Styles } from './styles';\nimport * as CSSVariables from '../enums/css-vars-enum';\nimport * as CssClasses from '../enums/css-classes-enum';\nimport { getAttributesByRegex } from '../domain/common-provider';\nimport { IPluginsManager, PluginsManager } from '../plugins/plugins-manager';\nimport { changePointersOrder } from '../domain/pointers-provider';\n\nexport interface ISlider {\n  readonly pointers: IPointer[];\n  readonly styles: IStyles | null;\n  readonly pluginsManager: IPluginsManager | null;\n\n  pointersOverlap: boolean;\n  pointersMinDistance: number;\n  pointersMaxDistance: number;\n  rangeDragging: boolean;\n\n  readonly min: number | string;\n  readonly max: number | string;\n  readonly step: TStep;\n  readonly data: TData;\n\n  type: string;\n  rightToLeft: boolean;\n  bottomToTop: boolean;\n  disabled: boolean;\n  keyboardDisabled: boolean;\n  round: number;\n  animateOnClick: string | undefined | boolean;\n\n  getAriaLabel: (index: number) => (string | undefined);\n  setAriaLabel: (index: number, ariaLabel: string | undefined) => void;\n\n  setMin: (value: number | string | undefined | null) => void;\n  setMax: (value: number | string | undefined | null) => void;\n  setValue: (value: number | string | undefined | null, index: number) => void;\n  setStep: (value: TStep | string) => void;\n  setData: (value: TData | string | null | number) => void;\n  getTextValue: (_percent: number | undefined) => undefined | string | number;\n\n  addPointer: (value: number | string | undefined | null) => number;\n  removePointer: () => number;\n\n  destroy: () => void;\n}\n\nexport const MIN_DEFAULT = 0;\nexport const MAX_DEFAULT = 100;\nexport const ROUND_DEFAULT = 2;\nexport const ANIMATE_ON_CLICK_DEFAULT = '0.3s';\n\nexport const Slider = ($component: HTMLElement, $slider: HTMLElement, pointersList: [IPointer, string | number | undefined][]) : ISlider => {\n\n  const pointers = pointersList.map(item => item[0]);\n  let selectedPointer: IPointer | null | undefined = null;\n  let panelFill: IPanelFill | null = null;\n  let styles: IStyles | null = null;\n  let pluginsManager: IPluginsManager | null = null;\n\n  let min = MIN_DEFAULT;\n  let max = MAX_DEFAULT;\n  let step: TStep = undefined; // step is defined in absolute units (not percent!)\n  let data: TData = undefined;\n  let type: string = TypeEnum.Horizontal;\n  let round: number = ROUND_DEFAULT;\n  let rightToLeft = false;\n  let bottomToTop = false;\n\n  let pointersOverlap = false;\n  let pointersMinDistance = 0;\n  let pointersMaxDistance = Infinity;\n\n  let rangeDragging = false;\n\n  let rangeDraggingStart: number | undefined = undefined;\n  let rangeDraggingDiff: number | undefined = undefined;\n\n  let disabled = false;\n  let keyboardDisabled = false;\n  let animateOnClick: string | undefined = ANIMATE_ON_CLICK_DEFAULT;\n\n  const ariaLabels: (string | undefined)[] = [];\n\n  // -------------- EVENTS --------------------\n\n  const onMouseDown = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    onValueChange(evt);\n\n    window.addEventListener('mousemove', onValueChange);\n    window.addEventListener('mouseup', onMouseUp);\n\n    sendMouseDownEvent($component, evt);\n  };\n\n  const onMouseUp = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    rangeDraggingStart = undefined;\n    rangeDraggingDiff = undefined;\n\n    window.removeEventListener('mousemove', onValueChange);\n    window.removeEventListener('mouseup', onValueChange);\n\n    if(animateOnClick){\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n\n    sendMouseUpEvent($component, evt);\n  };\n\n  const getActivePointer = ($target: HTMLElement, percent: number) => {\n    if(pointers.length <= 0) return;\n\n    // if only 1 pointer exists --> return it\n    if(pointers.length === 1){\n      if(pointers[0].isClicked($target) && animateOnClick){\n        $slider.classList.remove(CssClasses.AnimateOnClick);\n      }\n\n      return pointers[0];\n    }\n\n    const panelFillClicked = isPanelFillClicked($target);\n\n    if(rangeDragging){\n\n      let _dragPercent = percent;\n      const stepPercent = getStepPercent(_dragPercent);\n      if(stepPercent !== undefined){\n        _dragPercent = roundToStep(_dragPercent, stepPercent);\n      }\n\n      if(panelFillClicked){\n        rangeDraggingStart = _dragPercent;\n        rangeDraggingDiff = 0;\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n      }\n      else{\n        if(rangeDraggingStart !== undefined){\n          rangeDraggingDiff = _dragPercent - rangeDraggingStart;\n          rangeDraggingStart = _dragPercent;\n        }\n      }\n    }\n\n    if(!isPanelClicked($target) && !panelFillClicked){\n\n      // if clicked directly on 1 of the pointers ---> return it\n      for(const pointer of pointers){\n        if(!pointer.isClicked($target)) continue;\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n\n        return pointer;\n      }\n\n      // if already selected pointer ---> return it\n      for(const pointer of pointers){\n        if(selectedPointer === pointer) return pointer;\n      }\n    }\n\n    // find the closest pointer and return it\n    let minDistance = Infinity;\n    let minDistancePointer = null;\n\n    for(const pointer of pointers){\n      const distance = Math.abs(percent - pointer.percent);\n      if(distance < minDistance){\n        minDistance = distance;\n        minDistancePointer = pointer;\n      }\n    }\n\n    return minDistancePointer;\n  };\n\n  const getSelectedPointerIndex = () => {\n    return pointers.findIndex(pointer => selectedPointer === pointer && !pointer.disabled);\n  };\n\n  const onValueChange = (evt: MouseEvent | TouchEvent) => {\n\n    // find the percent [0, 100] of the current mouse position in vertical or horizontal slider\n    let percent;\n\n    if(type === TypeEnum.Vertical){\n      const { height: boxHeight, top: boxTop } = $slider.getBoundingClientRect();\n      const mouseY = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientY : (evt as TouchEvent).touches[0].clientY;\n      const top = Math.min(Math.max(0, mouseY - boxTop), boxHeight);\n      percent = (top * 100) / boxHeight;\n    }\n    else{\n      const { width: boxWidth, left: boxLeft } = $slider.getBoundingClientRect();\n      const mouseX = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientX : (evt as TouchEvent).touches[0].clientX;\n      const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n      percent = (left * 100) / boxWidth;\n    }\n\n    if(rightToLeft || bottomToTop){\n      percent = 100 - percent;\n    }\n\n    selectedPointer = getActivePointer(evt.target as HTMLElement, percent);\n\n    // handle range dragging\n    if(rangeDragging && pointers.length > 1 && rangeDraggingDiff !== undefined){\n\n      const firstPointer = pointers[0];\n      const lastPointer = pointers[pointers.length - 1];\n\n      const firstSmallerThanMin = firstPointer.percent + rangeDraggingDiff < 0;\n      const lastGreaterThanMax = lastPointer.percent + rangeDraggingDiff > 100;\n      if(firstSmallerThanMin || lastGreaterThanMax) return;\n\n      for(let i=0; i<pointers.length; i++){\n        setPositions(i, pointers[i].percent + rangeDraggingDiff);\n      }\n\n      return;\n    }\n\n    const foundIndex = getSelectedPointerIndex();\n    if(foundIndex !== -1){\n      setPositions(foundIndex, percent);\n      selectedPointer?.$pointer.focus();\n    }\n  };\n\n  const pointerMouseWheel = (evt: WheelEvent) => {\n    if (disabled ||\n      document.activeElement !== $component ||\n      selectedPointer?.disabled) return;\n\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const scrollTop = evt.deltaY < 0;\n    const rightOrBottom = rightToLeft || bottomToTop;\n    const shouldGoPrev = scrollTop ? !rightOrBottom : rightOrBottom;\n\n    const foundIndex = getSelectedPointerIndex();\n    if(foundIndex === -1) return;\n\n    if(shouldGoPrev){\n      goPrev(foundIndex, pointers[foundIndex].percent);\n    }\n    else{\n      goNext(foundIndex, pointers[foundIndex].percent);\n    }\n  };\n\n  // -------------- Arrows --------------------\n\n  const arrowLeft = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go backwards\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n  };\n\n  const arrowRight = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go backward\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n  };\n\n  const arrowUp = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go forwards\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go backwards\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n  };\n\n  const arrowDown = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go backward\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n  };\n\n  // -------------- Helpers ------------------------\n\n  const isPanelClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel');\n  };\n\n  const isPanelFillClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel-fill');\n  };\n\n  const goPrev = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    let stepPercent = getStepPercent(_percent);\n\n    if(stepPercent == undefined){\n      stepPercent = 1;\n    }\n\n    _percent -= stepPercent;\n\n    if(_percent < 0){\n      _percent = 0;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const goNext = (index: number, _percent: number | undefined) => {\n\n    if(_percent === undefined) return;\n\n    let stepPercent = getStepPercent(_percent);\n\n    if(stepPercent == undefined){\n      stepPercent = 1;\n    }\n\n    _percent += stepPercent;\n\n    if(_percent > 100){\n      _percent = 100;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const updatePlugins = () => {\n\n    if(!pluginsManager) return;\n    pluginsManager.update({\n      percents: getPercents(),\n      values: getValues(),\n      $pointers: getPointerElements(),\n\n      min: getNumericMin(),\n      max: getNumericMax(),\n\n      data: getData(),\n      step: getStep(),\n      round: getRound(),\n      type: getType(),\n\n      textMin: getMin(),\n      textMax: getMax(),\n\n      rightToLeft: isRightToLeft(),\n      bottomToTop: isBottomToTop(),\n\n      pointersOverlap: isPointersOverlap(),\n      pointersMinDistance: getPointersMinDistance(),\n      pointersMaxDistance: getPointersMaxDistance(),\n      rangeDragging: isRangeDraggingEnabled(),\n\n      disabled: isDisabled(),\n      keyboardDisabled: isKeyboardDisabled(),\n    });\n  };\n\n  const requestUpdatePlugins = () => {\n    updatePlugins();\n  };\n\n  // -------------- Getters --------------------\n\n  const getPointerLeftWall = (pointerIndex: number) => {\n    if(pointersOverlap || pointers.length <= 1 || max === min) return undefined;\n\n    if(pointerIndex === 0){\n      // by default 0, but if min distance between pointers is defined --->\n      // then the distance to the next pointer\n      const converted = pointersMaxDistance * 100 / (max - min);\n      return Math.max(0, pointers[pointerIndex + 1].percent - converted);\n    }\n    else{\n      // by default previous pointer, but if min distance between pointers is defined --->\n      // then the distance to the next pointer\n      const converted = pointersMinDistance * 100 / (max - min);\n      return Math.min(pointers[pointerIndex - 1].percent + converted, 100);\n    }\n  };\n\n  const getPointerRightWall = (pointerIndex: number) => {\n    if(pointersOverlap || pointers.length <= 1 || max === min) return undefined;\n\n    if(pointerIndex === pointers.length - 1){\n      // by default 100, but if min distance between pointers is defined --->\n      // then the distance to the previous pointer\n      const converted = pointersMaxDistance * 100 / (max - min);\n      return Math.min(pointers[pointerIndex - 1].percent + converted, 100);\n    }\n    else{\n      // distance to the next pointer\n      const converted = pointersMinDistance * 100 / (max - min);\n      return Math.max(0, pointers[pointerIndex + 1].percent - converted);\n    }\n  };\n\n  /**\n   * user step is defined in absolute values;\n   * this function return it as %\n   */\n  const getStepPercent = (_percent: number) => {\n\n    let _step: number | undefined | null;\n\n    if(typeof step === 'function'){\n      // convert percent to value: [0, 100] to [min, max]\n      const currentValue = convertRange(0, 100, min, max, _percent);\n\n      // the slider function provided by user should return an absolute value, not %\n      _step = step(currentValue, _percent);\n    }\n    else{\n      // the step value provided by the user should be absolute value (not %), undefined, or null\n      _step = step;\n    }\n\n    // round percent to step\n    if(isNumber(_step)){\n\n      /*\n      min ......... max (step = 1)\n      0 ........... 100 (step = ?)\n\n      (max - min) ....... step (=1)\n      100 ............... ?\n\n      ? = 100 * step / (max - min)\n      */\n\n      const diff = max - min;\n      _step = diff === 0 ? 0 :  (_step as number) * 100 / diff;\n\n      return _step;\n    }\n\n    return undefined;\n  };\n\n  const getTextValue = (_percent: number | undefined) => {\n    if(_percent === undefined) return undefined;\n\n    const val = convertRange(0, 100, min, max, _percent);\n\n    if(data !== undefined){\n      return data[Math.round(val)];\n    }\n\n    return setDecimalPlaces(val, round);\n  };\n\n  const getMin = () => {\n\n    if(data !== undefined){\n      return data[min];\n    }\n\n    return min;\n  };\n\n  const getMax = () => {\n\n    if(data !== undefined){\n      return data[max];\n    }\n\n    return max;\n  };\n\n  const getStep = () => {\n    return step;\n  };\n\n  const getPointerMin = (index: number) => {\n    if(index <= 0 || pointersOverlap) return getMin();\n    return getTextValue(pointers[index - 1].percent) ?? '';\n  };\n\n  const getPointerMax = (index: number) => {\n    if(pointers.length <= 1 ||\n      index >= pointers.length - 1 ||\n      pointersOverlap) return getMax();\n\n    return getTextValue(pointers[index + 1].percent) ?? '';\n  };\n\n  const getPercents = () => {\n    return pointers.map(pointer => pointer.percent);\n  };\n\n  const getValues = () => {\n    return pointers.map(pointer => getTextValue(pointer.percent));\n  }\n\n  const getPointerElements = () => {\n    return pointers.map(pointer => pointer.$pointer);\n  };\n\n  const getNumericMin = () => {\n    return min;\n  };\n\n  const getNumericMax = () => {\n    return max;\n  };\n\n  const getData = () => {\n    return data;\n  };\n\n  const getType = () => {\n    return type;\n  };\n\n  const getRound = () => {\n    return round;\n  };\n\n  const getPointersMinDistance = () => {\n    return pointersMinDistance;\n  };\n\n  const getPointersMaxDistance = () => {\n    return pointersMaxDistance;\n  };\n\n  const getAriaLabel = (index: number) => {\n    return ariaLabels[index];\n  };\n\n  const isRightToLeft = () => {\n    return rightToLeft;\n  };\n\n  const isBottomToTop = () => {\n    return bottomToTop;\n  };\n\n  const isDisabled = () => {\n    return disabled;\n  };\n\n  const isKeyboardDisabled = () => {\n    return keyboardDisabled;\n  };\n\n  const isPointersOverlap = () => {\n    return pointersOverlap;\n  };\n\n  const isRangeDraggingEnabled = () => {\n    return rangeDragging;\n  };\n\n  // -------------- Setters --------------------\n\n  const setPositions = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    // round percent to step\n    const stepPercent = getStepPercent(_percent);\n\n    if(stepPercent !== undefined){\n      _percent = roundToStep(_percent, stepPercent);\n    }\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    pointer.updatePosition(_percent, getPointerLeftWall(index), getPointerRightWall(index), type, rightToLeft, bottomToTop);\n    panelFill?.updatePosition(type, pointers.map(pointer => pointer.percent), rightToLeft, bottomToTop);\n\n    updatePlugins();\n\n    for(const pointer of pointers){\n      const valueText = getTextValue(pointer.percent);\n      if(valueText !== undefined){\n        pointer.setAttr('aria-valuenow', valueText.toString());\n        pointer.setAttr('aria-valuetext', valueText.toString());\n      }\n    }\n\n    setAriaMinMax();\n\n    sendChangeEvent($component, pointers.map(pointer => getTextValue(pointer.percent)));\n  };\n\n  const setAllPositions = () => {\n    for(let i=0; i<pointers.length; i++){\n      setPositions(i, pointers[i].percent);\n    }\n  };\n\n  /**\n   * on component init, min and max should be initialized together\n   * because their validations depend on each other;\n   */\n  const setMinMax = (_min: number | string | undefined | null, _max: number | string | undefined | null) => {\n\n    min = data !== undefined ? 0 : getNumber(_min, MIN_DEFAULT);\n    max = data !== undefined ? data.length - 1 : getNumber(_max, MAX_DEFAULT);\n\n    // perform validations\n    setMin(min);\n    setMax(max);\n  };\n\n  const setAriaMinMax = () => {\n    for(let i=0; i<pointers.length; i++){\n      const pointer = pointers[i];\n      pointer.setAttr('aria-valuemin', (getPointerMin(i) ?? '').toString());\n      pointer.setAttr('aria-valuemax', (getPointerMax(i) ?? '').toString());\n    }\n  };\n\n  const setMin = (_min: number | string | undefined | null) => {\n    min = getNumber(_min, MIN_DEFAULT);\n\n    if(min > max){\n      max = min + MAX_DEFAULT;\n    }\n\n    setAllPositions();\n  };\n\n  const setMax = (_max: number | string | undefined | null) => {\n\n    max = getNumber(_max, MAX_DEFAULT);\n\n    if(max < min){\n      max = min + MAX_DEFAULT;\n    }\n\n    setAllPositions();\n  };\n\n  const setValues = (values: (number | string | undefined)[]) => {\n\n    // initial values should be initialized together\n    // because their validations may depend on each other;\n\n    // init initial values with pointers overlap ----------\n    pointersOverlap = true;\n\n    for(let i=0; i<values.length; i++){\n      setValue(values[i], i);\n    }\n\n    pointersOverlap = false;\n\n    // add all required validations ------------------------\n    for(let i=0; i<values.length; i++){\n      setValue(values[i], i);\n    }\n  };\n\n  const setValue = (_val: number | string | undefined | null, index: number) => {\n\n    let val: number;\n\n    if(data !== undefined){\n\n      val = (_val === undefined || _val === null) ? 0 : findValueIndexInData(_val, data);\n      if(val === -1){\n        val = 0;\n      }\n    }\n    else{\n      val = getNumber(_val, min);\n\n      if(val < min){\n        val = min;\n      }\n\n      if(val > max){\n        val = max;\n      }\n    }\n\n    // scale a range [min,max] to [a,b]\n    const percent = convertRange(min, max, 0, 100, val);\n\n    setPositions(index, percent);\n  };\n\n  const setStep = (_step: TStep | string) => {\n    if(_step === null || _step === undefined){\n      step = undefined;\n      return;\n    }\n\n    if (typeof _step === 'function') {\n      step = _step;\n      setAllPositions();\n      return;\n    }\n\n    if(isNumber(_step)){\n      step = getNumber(_step, 1);\n\n      const diff = Math.abs(max - min);\n      if (step > diff) {\n        step = undefined;\n      }\n\n      setAllPositions();\n      return;\n    }\n\n    step = undefined;\n  };\n\n  const setPointersOverlap = (_pointersOverlap: boolean) => {\n    pointersOverlap = _pointersOverlap;\n    setAllPositions();\n  };\n\n  const setPointersMinDistance = (_pointersMinDistance: number) => {\n    if(!isNumber(_pointersMinDistance) || _pointersMinDistance < 0){\n      _pointersMinDistance = 0;\n    }\n    pointersMinDistance = _pointersMinDistance;\n  };\n\n  const setPointersMaxDistance = (_pointersMaxDistance: number) => {\n    if(!isNumber(_pointersMaxDistance) || _pointersMaxDistance < 0){\n      _pointersMaxDistance = Infinity;\n    }\n    pointersMaxDistance = _pointersMaxDistance;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $slider.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $slider.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($slider.hasAttribute('aria-disabled')) {\n        $slider.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setKeyboardDisabled = (_disabled: boolean) => {\n    keyboardDisabled = _disabled;\n  };\n\n  const setData = (_data: TData | string | number | null) => {\n\n    if(_data === null || _data === undefined){\n      data = undefined;\n      return;\n    }\n\n    data = parseData(_data as string);\n    if(data === undefined || data.length <= 0){\n      data = undefined;\n      return;\n    }\n\n    setMin(0);\n    setMax(data.length - 1);\n\n    if(step === undefined){\n      setStep(1);\n    }\n  };\n\n  const setType = (_type: string | null | undefined) => {\n\n    if(typeof _type === 'string'){\n      type = _type.trim().toLowerCase() === TypeEnum.Vertical ? TypeEnum.Vertical : TypeEnum.Horizontal;\n    }\n    else{\n      type = TypeEnum.Horizontal;\n    }\n\n    const $box = $component.shadowRoot?.querySelector('.range-slider-box');\n    if(!$box) return;\n    $box.className = `range-slider-box type-${ type }`;\n\n    setAllPositions();\n\n    // update accessibility properties\n    const aria = type === TypeEnum.Vertical ? 'vertical' : 'horizontal';\n    for(const pointer of pointers){\n      pointer.setAttr('aria-orientation', aria);\n    }\n  };\n\n  const setRightToLeft = (_rightToLeft: boolean) => {\n    rightToLeft = _rightToLeft;\n\n    if(pointers.length > 1){\n      changePointersOrder(pointers, rightToLeft, $component);\n    }\n\n    setAllPositions();\n    updatePlugins();\n  };\n\n  const setBottomToTop = (_bottomToTop: boolean) => {\n    bottomToTop = _bottomToTop;\n\n    if(pointers.length > 1){\n      changePointersOrder(pointers, bottomToTop, $component);\n    }\n\n    setAllPositions();\n    updatePlugins();\n  };\n\n  const setRound = (_round: number) => {\n    round = getNumber(_round, ROUND_DEFAULT);\n\n    if(round < 0){\n      round = ROUND_DEFAULT;\n    }\n\n    updatePlugins();\n  };\n\n  const setAnimateOnClick = (_animateOnClick: string | boolean | null | undefined) => {\n    if(_animateOnClick === null ||\n      _animateOnClick === undefined ||\n      _animateOnClick.toString().trim().toLowerCase() === 'false'){\n      animateOnClick = undefined;\n      $slider.style.removeProperty(CSSVariables.AnimateOnClick);\n      $slider.classList.remove(CssClasses.AnimateOnClick);\n    }\n    else{\n      animateOnClick = _animateOnClick.toString();\n      $slider.style.setProperty(CSSVariables.AnimateOnClick, animateOnClick);\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n  };\n\n  const setAriaLabel = (index: number, _ariaLabel: string | undefined) => {\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    pointer.setAttr('aria-label', _ariaLabel);\n    ariaLabels[index] = _ariaLabel;\n  };\n\n  const setRangeDragging = (_rangeDragging: boolean) => {\n    rangeDraggingStart = undefined;\n\n    if(pointers.length <= 1){\n      rangeDragging = false;\n      $slider.classList.remove(CssClasses.RangeDragging);\n      return;\n    }\n\n    rangeDragging = _rangeDragging;\n    $slider.classList.toggle(CssClasses.RangeDragging, rangeDragging);\n  };\n\n  // initialization -------------------------------------\n\n  const initDisabled = () => {\n    setDisabled(getBoolean($component.getAttribute(AttributesEnum.Disabled)));\n    keyboardDisabled = getBoolean($component.getAttribute(AttributesEnum.KeyboardDisabled))\n\n    // handle 'pointer1-disabled, pointer2-disabled, etc.\n    const disabledList = getAttributesByRegex($component, /^pointer([0-9]*)-disabled$/, (val: string) => {\n      return getBoolean(val);\n    });\n\n    for(const item of disabledList){\n      const pointerIndex = item[0];\n      if(!pointers[pointerIndex]) continue;\n      pointers[pointerIndex].disabled = item[1];\n    }\n  };\n\n  const initAriaLabels = () => {\n    // handle 'aria-label1', 'aria-label2', etc.\n    const ariaLabelsList = getAttributesByRegex($component, /^aria-label([0-9]*)$/);\n\n    for(const item of ariaLabelsList){\n      const index = item[0];\n      setAriaLabel(index, item[1] as string);\n    }\n  };\n\n  // add pointer - always to the end\n  const addPointer = (value: string | number | undefined) => {\n    const len = pointers.length;\n    const $latestPointer = pointers[len - 1].$pointer;\n\n    const $newPointer = $latestPointer.cloneNode(true) as HTMLElement;\n    $latestPointer.after($newPointer);\n    const newPointer = Pointer($component, $newPointer, len);\n\n    newPointer.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    pointers.push(newPointer);\n\n    setValue(value, len);\n    setAllPositions();\n    updatePlugins();\n\n    return len;\n  };\n\n  // always from the end\n  const removePointer = () => {\n    const len = pointers.length;\n    const pointer = pointers[len - 1];\n    if(!pointer) return -1;\n\n    pointer.destroy();\n    pointers.pop();\n\n    if(pointers.length <= 1){\n      setRangeDragging(false);\n    }\n\n    setAllPositions();\n    updatePlugins();\n\n    return len - 1;\n  };\n\n  (() => {\n\n    // init pointer callbacks for arrow keys\n    for(const pointer of pointers){\n      pointer.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    }\n\n    // init panel fill\n    const $fill = $component.shadowRoot?.querySelector('.panel-fill') as HTMLElement;\n    if($fill){\n      panelFill = PanelFill($fill);\n    }\n\n    // init main properties from HTML attributes\n    setType($component.getAttribute(AttributesEnum.Type));\n    setRightToLeft(getBoolean($component.getAttribute(AttributesEnum.RightToLeft)));\n    setBottomToTop(getBoolean($component.getAttribute(AttributesEnum.BottomToTop)));\n\n    setMinMax($component.getAttribute(AttributesEnum.Min), $component.getAttribute(AttributesEnum.Max));\n    setStep($component.getAttribute(AttributesEnum.Step));\n    setData($component.getAttribute(AttributesEnum.Data));\n\n    // set value and render the pointers ----------------------\n    setValues(pointersList.map(item => item[1]));\n\n    // overlaps MUST be defined after the pointer values\n    setPointersOverlap(getBoolean($component.getAttribute(AttributesEnum.PointersOverlap)));\n    setPointersMinDistance(getNumber($component.getAttribute(AttributesEnum.PointersMinDistance), 0));\n    setPointersMaxDistance(getNumber($component.getAttribute(AttributesEnum.PointersMaxDistance), Infinity));\n    setRangeDragging(getBoolean($component.getAttribute(AttributesEnum.RangeDragging)));\n\n    // additional properties -----------------------------\n    setRound(getNumber($component.getAttribute(AttributesEnum.Round), ROUND_DEFAULT));\n    initDisabled();\n    initAriaLabels();\n\n    // init styles ---------\n    styles = Styles($component, $slider, pointers);\n    setAnimateOnClick($component.getAttribute(AttributesEnum.AnimateOnClick) ?? ANIMATE_ON_CLICK_DEFAULT);\n\n    // init slider events -------------------------------------\n    $slider.addEventListener('mousedown', onMouseDown);\n    $slider.addEventListener('mouseup', onMouseUp);\n    $slider.addEventListener('touchmove', onValueChange);\n    $slider.addEventListener('touchstart', onValueChange);\n    document.addEventListener('wheel', pointerMouseWheel, { passive: false });\n\n    // init plugins ---------------\n    pluginsManager = PluginsManager(\n      $component,\n      requestUpdatePlugins,\n      {\n        setValues,\n        setMin,\n        setMax,\n        setStep,\n        setPointersOverlap,\n        setPointersMinDistance,\n        setPointersMaxDistance,\n        setDisabled,\n        setType,\n        setRightToLeft,\n        setBottomToTop,\n        setRound,\n        setKeyboardDisabled,\n        setRangeDragging,\n        setData,\n      },\n      {\n        getPercents,\n        getValues,\n        getPointerElements,\n\n        getMin: getNumericMin,\n        getMax: getNumericMax,\n\n        getStep,\n        getData,\n        getType,\n        getRound,\n\n        getTextMin: getMin,\n        getTextMax: getMax,\n\n        isRightToLeft,\n        isBottomToTop,\n\n        isDisabled,\n        isKeyboardDisabled,\n\n        isPointersOverlap,\n        isRangeDraggingEnabled,\n        getPointersMinDistance,\n        getPointersMaxDistance,\n      }\n    );\n    pluginsManager.init();\n  })();\n\n  const destroy = () => {\n    $slider.removeEventListener('mousedown', onMouseDown);\n    $slider.removeEventListener('mouseup', onMouseUp);\n    $slider.removeEventListener('touchmove', onValueChange);\n    $slider.removeEventListener('touchstart', onValueChange);\n    document.removeEventListener('wheel', pointerMouseWheel);\n\n    for(const pointer of pointers){\n      pointer.destroy();\n    }\n\n    pluginsManager?.destroy();\n  };\n\n  return {\n    get pointers() {\n      return pointers;\n    },\n\n    get styles() {\n      return styles;\n    },\n\n    get pluginsManager() {\n      return pluginsManager;\n    },\n\n    get min() {\n      return getMin();\n    },\n\n    get max() {\n      return getMax();\n    },\n\n    get step() {\n      return getStep();\n    },\n\n    get pointersOverlap() {\n      return isPointersOverlap();\n    },\n\n    set pointersOverlap(_pointersOverlap) {\n      setPointersOverlap(_pointersOverlap);\n    },\n\n    get pointersMinDistance() {\n      return getPointersMinDistance();\n    },\n\n    set pointersMinDistance(_pointersMinDistance) {\n      setPointersMinDistance(_pointersMinDistance);\n    },\n\n    get pointersMaxDistance() {\n      return getPointersMaxDistance();\n    },\n\n    set pointersMaxDistance(_pointersMaxDistance) {\n      setPointersMaxDistance(_pointersMaxDistance);\n    },\n\n    get disabled() {\n      return isDisabled();\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    get data() {\n      return getData();\n    },\n\n    get type() {\n      return getType();\n    },\n\n    set type(_type) {\n      setType(_type);\n    },\n\n    get rightToLeft() {\n      return isRightToLeft();\n    },\n\n    set rightToLeft(_rightToLeft) {\n      setRightToLeft(_rightToLeft);\n    },\n\n    get bottomToTop() {\n      return isBottomToTop();\n    },\n\n    set bottomToTop(_bottomToTop) {\n      setBottomToTop(_bottomToTop);\n    },\n\n    get round() {\n      return getRound();\n    },\n\n    set round(_round) {\n      setRound(_round);\n    },\n\n    get animateOnClick() {\n      return animateOnClick;\n    },\n\n    set animateOnClick(_animateOnClick) {\n      setAnimateOnClick(_animateOnClick);\n    },\n\n    get keyboardDisabled() {\n      return isKeyboardDisabled();\n    },\n\n    set keyboardDisabled(_keyboardDisabled){\n      setKeyboardDisabled(_keyboardDisabled);\n    },\n\n    get rangeDragging() {\n      return isRangeDraggingEnabled();\n    },\n\n    set rangeDragging(_rangeDragging) {\n      setRangeDragging(_rangeDragging);\n    },\n\n    setMin,\n    setMax,\n    setValue,\n    setStep,\n    setData,\n    getTextValue,\n    setAriaLabel,\n    getAriaLabel,\n\n    addPointer,\n    removePointer,\n\n    destroy,\n  };\n};\n\n", "import * as AttributesEnum from '../enums/attributes-enum';\nimport { ISlider, ROUND_DEFAULT } from '../ui/slider';\nimport { getBoolean, getNumber } from './math-provider';\nimport { stylePropertiesList } from '../ui/styles';\n\nexport const onAttributeChange = (slider: ISlider, attrName: string, newValue: string) => {\n\n  // handle style properties ------------------------------------\n  // try to get style property - ['--pointer-width', 'pointer-width', 1, 'pointerWidth']\n  const found = stylePropertiesList.find(([_cssVariableName, _attrName, _apiProperty, _regex]) => {\n    return _attrName.replace('#', '') === attrName.replace(/\\d+/g, '');\n  });\n\n  if(found && slider.styles){\n    const [_cssVariableName, _attrName, _apiProperty, _regex] = found;\n\n    const key = attrName.replace(/\\D/g, '').trim();\n    const index = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n\n    slider.styles.setStyle(_cssVariableName, newValue, index);\n    return;\n  }\n\n  if(slider && slider.pluginsManager){\n    slider.pluginsManager.onAttrChange(attrName, newValue);\n  }\n\n  // handle static properties ----------------------------------\n  switch (attrName) {\n\n    case AttributesEnum.Min: {\n      slider.setMin(newValue);\n      break;\n    }\n\n    case AttributesEnum.Max: {\n      slider.setMax(newValue);\n      break;\n    }\n\n    case AttributesEnum.Step: {\n      slider.setStep(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersOverlap: {\n      slider.pointersOverlap = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMinDistance: {\n      slider.pointersMinDistance = getNumber(newValue, 0);\n      break;\n    }\n\n    case AttributesEnum.RangeDragging: {\n      slider.rangeDragging = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMaxDistance: {\n      slider.pointersMaxDistance = getNumber(newValue, Infinity);\n      break;\n    }\n\n    case AttributesEnum.Disabled: {\n      slider.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.KeyboardDisabled: {\n      slider.keyboardDisabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Data: {\n      slider.setData(newValue);\n      break;\n    }\n\n    case AttributesEnum.Type: {\n      slider.type = newValue;\n      break;\n    }\n\n    case AttributesEnum.RightToLeft: {\n      slider.rightToLeft = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.BottomToTop: {\n      slider.bottomToTop = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Round: {\n      slider.round = getNumber(newValue, ROUND_DEFAULT);\n      break;\n    }\n\n    case AttributesEnum.Theme: {\n      if(slider.styles){\n        slider.styles.theme = newValue;\n      }\n      break;\n    }\n\n    case AttributesEnum.AnimateOnClick: {\n      slider.animateOnClick = newValue;\n      break;\n    }\n  }\n\n  // handle dynamic properties ------------------------------------\n  let property: string | null = null;\n\n  if(/^value([0-9]*)$/.test(attrName)){\n    property = 'value';\n  }\n\n  if(/^pointer([0-9]*)-disabled$/.test(attrName)){\n    property = 'pointer-disabled';\n  }\n\n  if(/^aria-label([0-9]*)$/.test(attrName)){\n    property = 'aria-label';\n  }\n\n  if(/^pointer([0-9]*)-shape$/.test(attrName)){\n    property = 'pointer-shape';\n  }\n\n  if(!property) return;\n\n  const key = attrName.replace(/\\D/g, '').trim();\n  const index = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1)\n\n  switch (property) {\n\n    case 'value': {\n      slider.setValue(newValue, index);\n      break;\n    }\n\n    case 'pointer-disabled': {\n      const pointer = slider?.pointers[index];\n      if(!pointer) return;\n\n      pointer.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case 'aria-label': {\n      slider.setAriaLabel(index, newValue);\n      break;\n    }\n\n    case 'pointer-shape': {\n      if(slider.styles){\n        slider.styles.setPointerShape(index, newValue);\n      }\n      break;\n    }\n  }\n};", "import mainTemplate from '../templates/main.html.js'; // esbuild custom loader\nimport styles from './styles.pcss';\nimport { onAttributeChange } from '../domain/attributes-provider';\nimport { ISlider, ROUND_DEFAULT, Slider } from '../ui/slider';\nimport { TData, TStep } from '../types';\nimport { getBoolean } from '../domain/math-provider';\nimport * as TypeEnum from '../enums/type-enum';\nimport { getExternalCSSList } from '../domain/common-provider';\nimport { initPointerAPI, initPointerAPIs, initPointers } from '../domain/pointers-provider';\n\n/**\n * Usage: <toolcool-range-slider value=\"0\" min=\"0\" max=\"100\"></toolcool-range-slider>\n * Documentation: https://github.com/toolcool-org/toolcool-range-slider\n */\nclass TCRangeSlider extends HTMLElement {\n\n  public slider: ISlider | undefined;\n\n  private _externalCSSList: string[] | null = [];\n\n  private _observer: MutationObserver | null = null;\n\n  // -------------- APIs --------------------\n\n  public set step(_step: TStep) {\n    if(this.slider){\n      this.slider.setStep(_step);\n    }\n  }\n\n  public get step() {\n    return this.slider?.step;\n  }\n\n  public set disabled(_disabled: boolean) {\n    if(this.slider){\n      this.slider.disabled = _disabled;\n    }\n  }\n\n  public get disabled() {\n    return this.slider?.disabled ?? false;\n  }\n\n  public set data(_data: TData) {\n    this.slider?.setData(_data);\n  }\n\n  public get data() {\n    return this.slider?.data;\n  }\n\n  public set min(_min: number | string | undefined | null) {\n    this.slider?.setMin(_min);\n  }\n\n  public get min() {\n    return this.slider?.min;\n  }\n\n  public set max(_max: number | string | undefined | null) {\n    this.slider?.setMax(_max);\n  }\n\n  public get max() {\n    return this.slider?.max;\n  }\n\n  public set round(_round: number) {\n    if(!this.slider) return;\n    this.slider.round = _round;\n  }\n\n  public get round() {\n    return this.slider?.round ?? ROUND_DEFAULT;\n  }\n\n  public set type(_type: string | undefined) {\n    if(!this.slider) return;\n    this.slider.type = _type ?? TypeEnum.Horizontal;\n  }\n\n  public get type() {\n    return this.slider?.type || TypeEnum.Horizontal;\n  }\n\n  public set pointersOverlap(_pointersOverlap: boolean) {\n    if(!this.slider) return;\n    this.slider.pointersOverlap = _pointersOverlap;\n  }\n\n  public get pointersOverlap() {\n    return this.slider?.pointersOverlap ?? false;\n  }\n\n  public set pointersMinDistance(_pointersMinDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMinDistance = _pointersMinDistance;\n  }\n\n  public get pointersMinDistance() {\n    return this.slider?.pointersMinDistance ?? 0;\n  }\n\n  public set pointersMaxDistance(_pointersMaxDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMaxDistance = _pointersMaxDistance;\n  }\n\n  public get pointersMaxDistance() {\n    return this.slider?.pointersMaxDistance ?? Infinity;\n  }\n\n  public set theme(_theme: string | null) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.theme = _theme;\n  }\n\n  public get theme() {\n    return this.slider?.styles?.theme ?? null;\n  }\n\n  public set rtl(_rtl: boolean) {\n    if(!this.slider) return;\n    this.slider.rightToLeft = _rtl;\n  }\n\n  public get rtl() {\n    return this.slider?.rightToLeft ?? false;\n  }\n\n  public set btt(_btt: boolean) {\n    if(!this.slider) return;\n    this.slider.bottomToTop = _btt;\n  }\n\n  public get btt() {\n    return this.slider?.bottomToTop ?? false;\n  }\n\n  public set keyboardDisabled(_keyboardDisabled: boolean) {\n    if(!this.slider) return;\n    this.slider.keyboardDisabled = _keyboardDisabled;\n  }\n\n  public get keyboardDisabled() {\n    return this.slider?.keyboardDisabled ?? false;\n  }\n\n  public set animateOnClick(_animateOnClick: string | boolean | undefined) {\n    if(!this.slider) return;\n    this.slider.animateOnClick = _animateOnClick;\n  }\n\n  public get animateOnClick() {\n    return this.slider?.animateOnClick;\n  }\n\n  public get rangeDragging(){\n    return this.slider?.rangeDragging ?? false;\n  }\n\n  public set rangeDragging(_rangeDragging: boolean | string | undefined | null) {\n    if(this.slider){\n      this.slider.rangeDragging = getBoolean(_rangeDragging);\n    }\n  }\n\n  public get externalCSSList() {\n    return this._externalCSSList;\n  }\n\n  public addPointer(value: number | string | undefined) {\n    if(!this.slider) return;\n\n    const index = this.slider?.addPointer(value);\n\n    initPointerAPI(this,\n      this.slider,\n      index,\n      `value${ index + 1 }`,\n      `ariaLabel${ index + 1 }`,\n      `pointerShape${ index + 1 }`,\n      `pointer${ index + 1 }Disabled`\n    );\n  }\n\n  public removePointer() {\n    if(!this.slider) return;\n    this.slider?.removePointer();\n  }\n\n  public addCSS(css: string) {\n    if(!this.shadowRoot) return;\n\n    const sheet = document.createElement('style')\n    sheet.textContent = css;\n    this.shadowRoot.appendChild(sheet);\n  }\n\n  // ----------------------------------------------\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    // get optional external CSS list\n    this._externalCSSList = getExternalCSSList(this);\n    this.shadowRoot.innerHTML = mainTemplate(styles, this._externalCSSList);\n\n    // init first pointer\n    const $pointer = this.shadowRoot?.querySelector('.pointer') as HTMLElement;\n    if(!$pointer) return;\n\n    // init the slider\n    const $slider = this.shadowRoot?.getElementById('range-slider') as HTMLElement;\n    if(!$slider) return;\n\n    const pointers = initPointers(this, $pointer);\n    this.slider = Slider(this, $slider, pointers);\n\n    initPointerAPIs(this, this.slider);\n\n    this._observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (!this.slider || mutation.type !== 'attributes') return;\n\n        const attrName = mutation.attributeName;\n        if(!attrName) return;\n\n        onAttributeChange(this.slider, attrName, this.getAttribute(attrName) ?? '');\n      });\n    });\n\n    this._observer.observe(this, {\n      attributes: true, //configure it to listen to attribute changes\n    });\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    if(this._observer){\n      this._observer.disconnect();\n    }\n\n    if(!this.slider) return\n\n    this.slider.destroy();\n  }\n}\n\nexport default TCRangeSlider;\n", "import TCRangeSlider from './app/range-slider';\nimport { DynamicFields } from './types';\n\ntype RangeSlider = TCRangeSlider & HTMLElement & DynamicFields;\n\ndeclare global {\n  interface Window {\n    tcRangeSlider: typeof TCRangeSlider;\n  }\n}\n\nwindow.tcRangeSlider = TCRangeSlider;\n\n// register web components\nif (!customElements.get('toolcool-range-slider')) {\n  customElements.define('toolcool-range-slider', TCRangeSlider);\n}\n\nif (!customElements.get('tc-range-slider')) {\n  customElements.define('tc-range-slider', class extends TCRangeSlider{});\n}\n\nexport default RangeSlider;\n\n\n", "import RangeSlider from '../../../core';\nimport { IBindingLabelsPlugin } from '../../../plugins/binding-labels-plugin';\nimport { IGeneratedLabelsPlugin } from '../../../plugins/generated-labels-plugin';\nimport { IMovingTooltipPlugin } from '../../../plugins/moving-tooltip-plugin';\n\nexport const getSetValuesExamples = () => {\n  if(!document.querySelector('[data-examples=\"get-set-values\"]')) return;\n\n  try{\n    const $slider1 = document.getElementById('slider-1') as RangeSlider;\n    const $label1 = document.getElementById('label-1') as HTMLElement;\n\n    $slider1.addEventListener('change', (evt: CustomEvent) => {\n      $label1.textContent = evt.detail.value;\n    });\n\n    $slider1.value = 50;\n  }\n  catch(ex) { console.error(ex); }\n\n  try{\n    const $slider2 = document.getElementById('slider-2') as RangeSlider;\n    const $label2 = document.getElementById('label-2') as HTMLElement;\n    const $label3 = document.getElementById('label-3') as HTMLElement;\n\n    $slider2.addEventListener('change', (evt: CustomEvent) => {\n      $label2.textContent = evt.detail.value;\n      $label3.textContent = evt.detail.value2;\n    });\n\n    $slider2.value1 = 40;\n    $slider2.value2 = 80;\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const autoBindingValuesExamples = () => {\n  if(!document.querySelector('[data-examples=\"auto-binding-values\"]')) return;\n\n  try{\n    const $slider2 = document.getElementById('slider-2') as RangeSlider;\n\n    ($slider2 as IBindingLabelsPlugin).valueLabel = '.value-22';\n    // $slider2.setAttribute('value-label', '.value-22');\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const autoGeneratedLabelsExamples = () => {\n  if(!document.querySelector('[data-examples=\"auto-generated-labels\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-3');\n    if(!$slider) return;\n\n    const $btn = document.getElementById('toggle-gen-labels');\n    if(!$btn) return;\n\n    $btn.addEventListener('click', () => {\n      const $plugin = ($slider as IGeneratedLabelsPlugin);\n      $plugin.generateLabels = !$plugin.generateLabels;\n      // $slider.setAttribute('generate-labels', (!$plugin.generateLabels) + '');\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const minMaxExamples = () => {\n  if(!document.querySelector('[data-examples=\"min-max\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-4') as RangeSlider;\n    const $changeBtn = document.getElementById('set-min-max-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('set-min-max-btn-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.min = -200;\n      $slider.max = 200;\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.min = -500;\n      $slider.max = 500;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const roundExamples = () => {\n  if(!document.querySelector('[data-examples=\"rounding\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-5') as RangeSlider;\n    const $changeBtn = document.getElementById('rounding-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('rounding-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.round = 0;\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.round = 2;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const stepExamples = () => {\n  if(!document.querySelector('[data-examples=\"step\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-6') as RangeSlider;\n    const $changeBtn = document.getElementById('step-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('step-reset') as HTMLElement;\n\n    /*// get the step value\n    const step: TStep = $slider.step;\n    console.log(step);*/\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.step = 10;\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.step = undefined;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const nonLinearStepExamples = () => {\n  if(!document.querySelector('[data-examples=\"non-linear-step\"]')) return;\n\n  // non linear step example\n  try{\n    const $slider = document.getElementById('slider-7') as RangeSlider;\n    $slider.step = (_value: string | number, _percent: number) => {\n      return _value < 50 ? 5 : 10;\n    };\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const dataExamples = () => {\n  if(!document.querySelector('[data-examples=\"data\"]')) return;\n\n  // non linear step example\n  try{\n    const $slider = document.getElementById('slider-8') as RangeSlider;\n    const $changeBtn = document.getElementById('data-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('data-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.data = ['red', 'green', 'blue', 'yellow', 'pink', 'brown', 'silver', 'white', 'black'];\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.data = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const withHeightBorderRadiusExamples = () => {\n  if(!document.querySelector('[data-examples=\"width-height-border-radius\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-9') as RangeSlider;\n    const $changeBtn = document.getElementById('styles-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('styles-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.sliderWidth = '200px';\n      $slider.sliderHeight = '0.7rem';\n      $slider.sliderRadius = 0;\n\n      $slider.pointerWidth = '1.8rem';\n      $slider.pointerHeight = '1.8rem';\n      $slider.pointerRadius = 0;\n\n      $slider.pointer2Width = '1.3rem';\n      $slider.pointer2Height = '1.3rem';\n      $slider.pointer2Radius = '1rem';\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.sliderWidth = '300px';\n      $slider.sliderHeight = '0.25rem';\n      $slider.sliderRadius = '1rem';\n\n      $slider.pointerWidth = '1rem';\n      $slider.pointerHeight = '1rem';\n      $slider.pointerRadius = '100%';\n\n      $slider.pointer2Width = '1rem';\n      $slider.pointer2Height = '1rem';\n      $slider.pointer2Radius = '100%';\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const colorExamples = () => {\n  if(!document.querySelector('[data-examples=\"colors\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-10') as RangeSlider;\n    const $changeBtn = document.getElementById('color-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('color-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.sliderBg = '#efefef';\n      $slider.sliderBgHover = '#ddd';\n      $slider.sliderBgFill = '#ccc';\n\n      $slider.pointer1Bg = 'red';\n      $slider.pointer2Bg = 'green';\n      $slider.pointer3Bg = 'blue';\n\n      $slider.pointer1Border = 'none';\n      $slider.pointer2Border = 'none';\n      $slider.pointer3Border = 'none';\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.sliderBg = undefined;\n      $slider.sliderBgHover = undefined;\n      $slider.sliderBgFill = undefined;\n\n      $slider.pointer1Bg = undefined;\n      $slider.pointer2Bg = undefined;\n      $slider.pointer3Bg = undefined;\n\n      $slider.pointer1Border = undefined;\n      $slider.pointer2Border = undefined;\n      $slider.pointer3Border = undefined;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const themesExamples = () => {\n  if(!document.querySelector('[data-examples=\"themes\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-11') as RangeSlider;\n    const $rect = document.getElementById('rect-btn') as HTMLElement;\n    const $glass = document.getElementById('glass-btn') as HTMLElement;\n    const $circle = document.getElementById('circle-btn') as HTMLElement;\n    const $rainbow = document.getElementById('rainbow-btn') as HTMLElement;\n\n    $rect.addEventListener('click', () => {\n      $slider.theme = 'rect';\n    });\n\n    $glass.addEventListener('click', () => {\n      $slider.theme = 'glass';\n    });\n\n    $circle.addEventListener('click', () => {\n      $slider.theme = 'circle';\n    });\n\n    $rainbow.addEventListener('click', () => {\n      $slider.theme = 'rainbow';\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const pointerShapesExamples = () => {\n  if(!document.querySelector('[data-examples=\"pointer-shapes\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-12') as RangeSlider;\n    const $triangle = document.getElementById('shape-triangle-btn') as HTMLElement;\n    const $star = document.getElementById('shape-star-btn') as HTMLElement;\n    const $rhombus = document.getElementById('shape-rhombus-btn') as HTMLElement;\n    const $trapezoid = document.getElementById('shape-trapezoid-btn') as HTMLElement;\n    const $parallelogram = document.getElementById('shape-parallelogram-btn') as HTMLElement;\n    const $rightArrow = document.getElementById('shape-right-arrow-btn') as HTMLElement;\n\n    $triangle.addEventListener('click', () => {\n      $slider.pointerShape = 'triangle';\n    });\n\n    $star.addEventListener('click', () => {\n      $slider.pointerShape = 'star';\n    });\n\n    $rhombus.addEventListener('click', () => {\n      $slider.pointerShape = 'rhombus';\n    });\n\n    $trapezoid.addEventListener('click', () => {\n      $slider.pointerShape = 'trapezoid';\n    });\n\n    $parallelogram.addEventListener('click', () => {\n      $slider.pointerShape = 'parallelogram';\n    });\n\n    $rightArrow.addEventListener('click', () => {\n      $slider.pointerShape = 'right-arrow';\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const animationShapesExamples = () => {\n  if(!document.querySelector('[data-examples=\"animation\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-13') as RangeSlider;\n    const $animation2s = document.getElementById('animation-2s-btn') as HTMLElement;\n    const $disable = document.getElementById('animation-disable-btn') as HTMLElement;\n    const $reset = document.getElementById('animation-reset-btn') as HTMLElement;\n\n    $animation2s.addEventListener('click', () => {\n      $slider.animateOnClick = '2s';\n    });\n\n    $disable.addEventListener('click', () => {\n      $slider.animateOnClick = false;\n    });\n\n    $reset.addEventListener('click', () => {\n      $slider.animateOnClick = '0.3s';\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const verticalExamples = () => {\n  if(!document.querySelector('[data-examples=\"vertical\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-14') as RangeSlider;\n    const $vertical = document.getElementById('vertical-btn') as HTMLElement;\n    const $horizontal = document.getElementById('horizontal-btn') as HTMLElement;\n\n    $vertical.addEventListener('click', () => {\n      $slider.type = 'vertical';\n    });\n\n    $horizontal.addEventListener('click', () => {\n      $slider.type = 'horizontal';\n    });\n  }\n  catch(ex) { console.error(ex); }\n\n  try{\n    const $slider = document.getElementById('slider-14_2') as RangeSlider;\n    const $btt = document.getElementById('btt-btn') as HTMLElement;\n    const $ttb = document.getElementById('ttb-btn') as HTMLElement;\n\n    $btt.addEventListener('click', () => {\n      $slider.btt = true;\n    });\n\n    $ttb.addEventListener('click', () => {\n      $slider.btt = false;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const rightToLeftExamples = () => {\n  if(!document.querySelector('[data-examples=\"rtl\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-15') as RangeSlider;\n    const $rtl = document.getElementById('rtl-btn') as HTMLElement;\n    const $ltr = document.getElementById('ltr-btn') as HTMLElement;\n\n    $rtl.addEventListener('click', () => {\n      $slider.rtl = true;\n    });\n\n    $ltr.addEventListener('click', () => {\n      $slider.rtl = false;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const disabledExamples = () => {\n  if(!document.querySelector('[data-examples=\"disabled\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-16') as RangeSlider;\n    const $btn = document.getElementById('disabled-toggle-btn') as HTMLElement;\n\n    $btn.addEventListener('click', () => {\n      $slider.disabled = !$slider.disabled;\n    });\n  }\n  catch(ex) { console.error(ex); }\n\n  try{\n    const $slider = document.getElementById('slider-17') as RangeSlider;\n    const $btn = document.getElementById('disabled-pointers-toggle-btn') as HTMLElement;\n\n    $btn.addEventListener('click', () => {\n      $slider.pointer1Disabled = !$slider.pointer1Disabled;\n      $slider.pointer2Disabled = !$slider.pointer2Disabled;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const rangeDraggingExamples = () => {\n  if(!document.querySelector('[data-examples=\"range-dragging\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-19') as RangeSlider;\n    const $btn = document.getElementById('range-dragging-toggle-btn') as HTMLElement;\n\n    $btn.addEventListener('click', () => {\n      $slider.rangeDragging = !$slider.rangeDragging;\n      $btn.textContent = $slider.rangeDragging ? 'Disable Range Dragging' : 'Enable Range Dragging';\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const pointersOverlapExamples = () => {\n  if(!document.querySelector('[data-examples=\"pointers-overlap\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-20') as RangeSlider;\n    const $btn = document.getElementById('pointers-overlap-toggle-btn') as HTMLElement;\n\n    $btn.addEventListener('click', () => {\n      $slider.pointersOverlap = !$slider.pointersOverlap;\n      $btn.textContent = $slider.pointersOverlap ? 'Disable Pointers Overlap' : 'Enable Pointers Overlap';\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const softLimitsExamples = () => {\n  if(!document.querySelector('[data-examples=\"soft-limits\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-21') as RangeSlider;\n    $slider.addEventListener('onMouseUp', () => {\n\n      if($slider.value1 !== undefined && $slider.value1 < 20) {\n        $slider.value1 = 20;\n      }\n\n      if($slider.value2 !== undefined && $slider.value2 > 80) {\n        $slider.value2 = 80;\n      }\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const createdSliderDynamicallyExamples = () => {\n  if(!document.querySelector('[data-examples=\"created-slider-dynamically\"]')) return;\n\n  try{\n    const $box1 = document.getElementById('slider-box-1') as HTMLElement;\n    const $btn1 = document.getElementById('create-slider-btn-1') as HTMLElement;\n\n    $btn1.addEventListener('click', () => {\n\n      const $found = $box1.querySelector('tc-range-slider');\n      if($found){\n        $found.remove();\n        $btn1.textContent = 'Create Slider';\n      }\n      else{\n        const $slider = document.createElement('tc-range-slider');\n        $slider.setAttribute('min', '-100');\n        $slider.setAttribute('max', '100');\n        $slider.setAttribute('value1', '10');\n        $slider.setAttribute('value2', '50');\n        $slider.setAttribute('generate-labels', 'true');\n        $box1.prepend($slider);\n        $btn1.textContent = 'Remove Slider';\n      }\n    });\n  }\n  catch(ex) { console.error(ex); }\n\n};\n\nexport const movingTooltipExamples = () => {\n  if(!document.querySelector('[data-examples=\"moving-tooltip\"]')) return;\n\n  try{\n    const $slider = document.getElementById('moving-tooltip-slider-1') as RangeSlider;\n    const $toggleBrt = document.getElementById('moving-tooltip-toggle-btn') as HTMLElement;\n\n    $toggleBrt.addEventListener('click', () => {\n      const $plugin = $slider as IMovingTooltipPlugin;\n      $plugin.movingTooltip = !$plugin.movingTooltip;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};", "import '../../../../dist/plugins/tcrs-themes.min.css';\nimport '../../../../dist/plugins/tcrs-pointer-shapes.min.css';\nimport '../../../../dist/plugins/tcrs-binding-labels.min.js';\nimport '../../../../dist/plugins/tcrs-generated-labels.min.js';\nimport '../../../../dist/plugins/tcrs-storage.min.js';\nimport '../../../../dist/plugins/tcrs-moving-tooltip.min.js';\nimport '../../../../dist/plugins/tcrs-origin-center.min.js';\nimport '../../../../dist/toolcool-range-slider.min.js';\n\nimport {\n  getSetValuesExamples,\n  autoBindingValuesExamples,\n  autoGeneratedLabelsExamples,\n  minMaxExamples,\n  roundExamples,\n  stepExamples,\n  nonLinearStepExamples,\n  dataExamples,\n  withHeightBorderRadiusExamples,\n  colorExamples,\n  themesExamples,\n  pointerShapesExamples,\n  animationShapesExamples,\n  verticalExamples,\n  rightToLeftExamples,\n  disabledExamples,\n  rangeDraggingExamples,\n  pointersOverlapExamples,\n  softLimitsExamples, createdSliderDynamicallyExamples, movingTooltipExamples\n} from './examples';\n\nconst initMobileMenu = () => {\n  const $btn = document.getElementById('mobile-menu-btn');\n  if(!$btn) return;\n\n  $btn.addEventListener('click', (evt) => {\n    evt.stopPropagation();\n    document.body.classList.toggle('mobile-menu-opened');\n  });\n\n  document.body.addEventListener('click', () => {\n    document.body.classList.remove('mobile-menu-opened');\n  });\n\n  const $sideMenu = document.getElementById('side-menu');\n  if(!$sideMenu) return;\n\n  $sideMenu.addEventListener('click', (evt) => {\n    evt.stopPropagation();\n  });\n\n  const $close = document.getElementById('mobile-menu-close-btn');\n  if(!$close) return;\n\n  $close.addEventListener('click', () => {\n    document.body.classList.remove('mobile-menu-opened');\n  });\n};\n\nconst init = () => {\n  initMobileMenu();\n  getSetValuesExamples();\n  autoBindingValuesExamples();\n  autoGeneratedLabelsExamples();\n  minMaxExamples();\n  roundExamples();\n  stepExamples();\n  nonLinearStepExamples();\n  dataExamples();\n  withHeightBorderRadiusExamples();\n  colorExamples();\n  themesExamples();\n  pointerShapesExamples();\n  animationShapesExamples();\n  verticalExamples();\n  rightToLeftExamples();\n  disabledExamples();\n  rangeDraggingExamples();\n  pointersOverlapExamples();\n  softLimitsExamples();\n  createdSliderDynamicallyExamples();\n  movingTooltipExamples();\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  init();\n});\n\nexport {};\n"],
  "mappings": ";;;;OAOC,IAAI,CAAC,IAAIA,EAAEC,GAAG,CAAC,MAAM,WAAWA,CAAC,CAAC,GAAG,SAASA,CAAC,EAAEC,EAAE,CAACD,EAAEE,IAAIH,EAAEC,CAAC,EAAE,OAAOA,CAAC,EAAEE,EAAE,OAAO,qBAAqB,OAAO,sBAAsB,CAAC,EAAE,IAAIC,EAAE,IAAI,CAAC,IAAIH,EAAE,KAAKE,EAAE,KAAKE,EAAE,KAAKC,EAAE,CAAC,EAAEC,EAAE,CAAC,EAAEC,EAAE,CAACC,EAAEC,IAAI,CAAC,OAAO,UAAU,eAAe,KAAKP,EAAEM,CAAC,GAAG,OAAO,eAAeN,EAAEM,EAAE,CAAC,KAAK,CAAC,OAAOH,EAAEI,EAAE,EAAE,IAAIC,GAAG,CAACC,EAAEF,EAAEC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEC,EAAE,CAACH,EAAEC,IAAI,CAAC,IAAIC,EAAE,CAAC,CAACJ,EAAEE,GAAGF,EAAEE,KAAKF,EAAEE,GAAG,YAAY,IAAI,IAAII,EAAE,SAAS,cAAcH,CAAC,EAAEH,EAAEE,GAAGI,GAAG,KAAKA,EAAE,OAAOP,EAAEG,GAAGC,GAAG,KAAKA,EAAE,OAAOC,IAAIF,IAAI,GAAGD,EAAE,aAAaC,CAAC,EAAED,EAAE,cAAcC,CAAC,EAAED,EAAE,cAAcC,CAAC,GAAGD,EAAE,QAAQC,EAAE,SAASA,CAAC,GAAG,OAAOJ,GAAG,YAAYA,EAAE,CAAC,EAAES,EAAE,IAAI,CAAC,IAAIJ,EAAEC,EAAEE,EAAEE,EAAEC,EAAEC,GAAEC,GAAE,IAAIT,IAAGC,EAAET,GAAG,KAAK,OAAOA,EAAE,UAAU,IAAI,KAAKS,EAAE,CAAC,EAAE,QAAQS,EAAE,EAAEA,EAAEV,GAAE,OAAOU,IAAI,CAAC,IAAIC,EAAE,GAAG,GAAGD,IAAI,GAAGC,GAAGT,EAAER,GAAG,KAAK,OAAOA,EAAE,aAAa,aAAa,IAAI,KAAKQ,EAAE,GAAGS,IAAIA,GAAGP,EAAEV,GAAG,KAAK,OAAOA,EAAE,aAAa,cAAc,IAAI,KAAKU,EAAE,IAAIO,IAAIA,GAAGL,EAAEZ,GAAG,KAAK,OAAOA,EAAE,aAAa,cAAc,IAAI,KAAKY,EAAE,KAAKK,GAAGJ,EAAEb,GAAG,KAAK,OAAOA,EAAE,aAAa,QAAQgB,EAAE,SAAS,IAAI,KAAKH,EAAE,GAAG,CAACI,EAAE,CAACb,EAAEY,GAAG,OAAOb,EAAEa,GAAG,OAAO,QAAQ,CAAC,IAAIE,GAAE,SAAS,cAAcD,CAAC,EAAE,GAAG,CAACC,GAAE,CAACd,EAAEY,GAAG,OAAOb,EAAEa,GAAG,OAAO,QAAQ,CAACZ,EAAEY,GAAGE,GAAEf,EAAEa,GAAGC,EAAEC,GAAE,aAAaH,IAAGD,GAAER,GAAEU,KAAK,KAAK,OAAOF,GAAE,SAAS,IAAI,KAAKC,GAAE,GAAGC,IAAI,GAAGX,EAAE,aAAaW,CAAC,EAAEX,EAAE,cAAcW,CAAC,EAAEX,EAAE,cAAcW,CAAC,GAAGX,EAAE,QAAQW,EAAE,SAASA,CAAC,CAAC,CAAC,OAAOd,GAAG,YAAYA,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,gBAAgB,EAAE,KAAK,CAACI,EAAEC,EAAEC,EAAEE,IAAI,CAACV,EAAEM,EAAEJ,EAAEK,EAAET,EAAEY,EAAEC,EAAE,CAAC,EAAE,OAAOL,GAAG,CAAC,IAAIC,EAAE,QAAQC,EAAE,EAAEA,EAAEF,EAAE,OAAO,OAAOE,IAAI,CAAC,IAAIE,EAAEN,EAAEI,GAAG,GAAG,CAACE,EAAE,SAAS,IAAIE,GAAGL,EAAED,EAAE,OAAOE,KAAK,KAAKD,EAAE,GAAGG,EAAE,YAAYE,EAAE,SAAS,CAAC,CAAC,EAAE,aAAa,CAACN,EAAEC,IAAI,CAAC,GAAG,wBAAwB,KAAKD,CAAC,GAAG,OAAOJ,GAAG,WAAW,CAAC,IAAIM,EAAEF,EAAE,QAAQ,MAAM,EAAE,EAAE,KAAK,EAAEI,EAAEF,IAAI,IAAIA,IAAI,KAAKA,IAAI,IAAI,EAAET,EAAES,EAAE,CAAC,EAAE,EAAEC,EAAEC,EAAEH,CAAC,CAAC,CAAC,EAAE,QAAQ,IAAI,CAAC,QAAQD,KAAKF,EAAE,CAACE,GAAGA,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,qBAAqB,KAAKL,CAAC,EAAE,IAAIkB,EAAElB,CAAE,GAAG,GCAzqD,IAAI,CAAC,IAAImB,EAAEC,GAAGA,GAAG,KAAK,GAAG,OAAOA,GAAG,UAAUA,EAAEA,EAAE,KAAK,EAAE,YAAY,IAAI,OAAO,OAAO,qBAAqB,OAAO,sBAAsB,CAAC,EAAE,IAAIC,EAAE,YAAYC,EAAE,YAAYC,EAAE,UAAUC,EAAE,IAAI,CAAC,IAAIJ,EAAE,KAAKK,EAAE,KAAKC,EAAE,KAAKC,EAAE,GAAGC,EAAEL,EAAEM,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAKC,EAAE,KAAKC,EAAE,CAAC,EAAEC,EAAE,IAAI,CAAC,IAAIC,EAAE,IAAIC,GAAGD,EAAEf,GAAG,KAAK,OAAOA,EAAE,aAAa,KAAK,OAAOe,EAAE,cAAc,mBAAmB,EAAEL,EAAE,SAAS,cAAc,KAAK,EAAEA,EAAE,UAAU,IAAI,YAAY,EAAEM,EAAE,QAAQN,CAAC,CAAC,EAAEO,GAAED,GAAG,CAAC,IAAID,EAAE,SAAS,cAAc,OAAO,EAAE,OAAOA,EAAE,UAAUC,EAAED,EAAE,aAAa,MAAM,cAAc,EAAEA,CAAC,EAAEG,GAAE,IAAI,CAAC,IAAIF,GAAGV,GAAG,KAAK,OAAOA,EAAE,cAAc,KAAKA,GAAG,KAAK,OAAOA,EAAE,cAAc,GAAGK,EAAEM,GAAEhB,CAAC,EAAEU,EAAE,YAAYQ,GAAEb,GAAG,KAAK,OAAOA,EAAE,WAAW,EAAEG,CAAC,EAAEG,EAAEK,GAAEf,CAAC,EAAEU,EAAE,YAAYO,GAAEb,GAAG,KAAK,OAAOA,EAAE,WAAW,EAAEG,CAAC,EAAEO,GAAGX,GAAG,MAAMA,EAAE,MAAMM,CAAC,EAAEN,GAAG,MAAMA,EAAE,OAAOO,CAAC,IAAIP,GAAG,MAAMA,EAAE,OAAOM,CAAC,EAAEN,GAAG,MAAMA,EAAE,MAAMO,CAAC,GAAG,IAAIG,EAAET,GAAG,KAAK,OAAOA,EAAE,UAAU,EAAE,GAAKS,EAAE,QAAQK,GAAE,EAAEA,GAAEL,EAAE,OAAOK,KAAI,CAAC,IAAIC,GAAEJ,GAAE,QAAQG,GAAE,yBAAyB,EAAEC,GAAE,YAAYF,GAAEJ,EAAEK,IAAGX,CAAC,EAAEI,EAAE,KAAKQ,EAAC,EAAEL,EAAEN,GAAG,MAAMA,EAAE,QAAQW,EAAC,EAAEX,GAAG,MAAMA,EAAE,OAAOW,EAAC,CAAC,CAAC,EAAEC,GAAE,IAAI,CAAC,QAAQN,KAAKH,EAAE,CAACG,GAAGA,EAAE,OAAO,EAAEL,GAAG,MAAMA,EAAE,OAAO,EAAEC,GAAG,MAAMA,EAAE,OAAO,EAAEF,GAAG,MAAMA,EAAE,OAAO,EAAEG,EAAE,CAAC,CAAC,EAAEU,EAAEP,GAAG,CAACT,EAAES,EAAET,GAAGO,EAAE,EAAEI,GAAE,GAAGI,GAAE,CAAC,EAAEE,EAAER,GAAG,CAACR,EAAEQ,EAAE,QAAQD,KAAKF,EAAE,CAACE,IAAIA,EAAE,MAAM,MAAMP,GAAG,KAAKA,EAAEL,GAAGQ,IAAIA,EAAE,MAAM,MAAMH,GAAG,KAAKA,EAAEL,GAAGS,IAAIA,EAAE,MAAM,MAAMJ,GAAG,KAAKA,EAAEL,EAAE,EAAEsB,GAAET,GAAG,CAACP,EAAEO,CAAC,EAAEU,GAAE,IAAI,CAAC,CAACpB,GAAG,CAACI,GAAGA,EAAE,UAAU,OAAO,cAAcJ,EAAE,cAAc,GAAGA,EAAE,cAAc,CAAC,CAAC,EAAEa,GAAE,CAACH,EAAED,IAAI,IAAIC,GAAG,KAAKA,EAAE,IAAI,SAAS,IAAID,IAAI,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,kBAAkB,EAAE,KAAK,CAACC,EAAED,EAAEK,GAAEC,KAAI,CAAC,IAAIM,GAAEC,GAAEC,GAAE7B,EAAEgB,EAAEV,EAAEe,GAAEhB,GAAGsB,GAAEX,EAAE,aAAa,KAAK,OAAOW,GAAE,eAAe,cAAc,EAAEnB,GAAGoB,GAAE5B,EAAE,aAAa,4BAA4B,IAAI,KAAK4B,GAAEzB,EAAEM,GAAGoB,GAAE7B,EAAE,aAAa,uBAAuB,IAAI,KAAK6B,GAAE,GAAGN,EAAExB,EAAEC,EAAE,aAAa,iBAAiB,CAAC,CAAC,EAAE0B,GAAE,EAAEF,EAAEhB,CAAC,CAAC,EAAE,OAAOQ,GAAG,CAAC,GAAG,EAAE,CAACT,GAAG,CAACS,EAAE,QAAQ,CAACU,GAAE,EAAE,QAAQX,EAAE,EAAEA,EAAEC,EAAE,OAAO,OAAOD,IAAI,CAAC,IAAIK,GAAEJ,EAAE,OAAOD,GAAGM,GAAER,EAAEE,GAAG,GAAGK,KAAI,QAAQ,CAAC,CAACC,GAAE,CAACA,GAAE,OAAO,EAAER,EAAEE,GAAG,OAAO,QAAQ,CAAC,GAAGK,KAAI,QAAQ,CAACC,GAAE,CAAC,IAAIM,GAAEV,GAAE,QAAQF,EAAE,yBAAyB,EAAE,GAAGY,GAAE,YAAYR,GAAEC,GAAEX,CAAC,EAAEI,EAAEE,GAAGY,GAAEX,EAAE,OAAO,QAAQ,EAAEN,GAAG,MAAMA,EAAE,OAAOiB,EAAC,MAAM,CAAC,IAAIC,IAAGtB,GAAG,KAAK,OAAOA,EAAE,cAAc,KAAKA,GAAG,KAAK,OAAOA,EAAE,cAAc,GAAG,GAAGS,IAAI,EAAEa,GAAElB,GAAG,MAAMA,EAAE,OAAOiB,EAAC,EAAEjB,GAAG,MAAMA,EAAE,QAAQiB,EAAC,MAAM,CAAC,IAAIE,GAAEhB,EAAEE,EAAE,GAAGa,GAAEC,IAAG,MAAMA,GAAE,OAAOF,EAAC,EAAEE,IAAG,MAAMA,GAAE,MAAMF,EAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAACN,KAAIA,GAAE,YAAYF,GAAEC,GAAEX,CAAC,EAAE,CAACE,IAAIA,EAAE,YAAYQ,GAAEH,EAAE,QAAQP,CAAC,GAAGG,IAAIA,EAAE,YAAYO,GAAEH,EAAE,QAAQP,CAAC,GAAGe,EAAEhB,CAAC,CAAC,CAAC,EAAE,aAAa,CAACQ,EAAED,IAAI,CAACC,IAAI,mBAAmBO,EAAExB,EAAEgB,CAAC,CAAC,EAAEC,IAAI,8BAA8BQ,EAAET,CAAC,EAAEC,IAAI,yBAAyBS,GAAEV,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC,KAAK,iBAAiB,WAAW,CAAC,KAAK,CAAC,OAAOR,GAAG,KAAKA,EAAE,EAAE,EAAE,IAAIS,GAAG,CAACO,EAAExB,EAAEiB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,YAAY,WAAW,CAAC,KAAK,CAAC,OAAOR,GAAG,KAAKA,EAAE,EAAE,EAAE,IAAIQ,GAAG,CAACQ,EAAER,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,QAAQ,WAAW,CAAC,KAAK,CAAC,OAAOP,GAAG,KAAKA,EAAE,EAAE,EAAE,IAAIO,GAAG,CAACS,GAAET,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0CznF,QAAQM,EAAC,CAAC,EAAE,OAAO,qBAAqB,KAAKlB,CAAC,EAAE,IAAI0B,EAAE1B,CAAE,GAAG,GC1ChE,IAAI,CAAC,IAAI2B,EAAE,kBAAkBC,EAAEC,GAAG,CAAC,GAAGA,IAAI,gBAAgB,CAAC,IAAIC,EAAE,OAAO,GAAG,CAAC,OAAO,OAAO,aAAa,QAAQA,EAAEA,CAAC,EAAE,OAAO,aAAa,WAAWA,CAAC,EAAE,EAAE,OAAOC,EAAN,CAAS,MAAM,EAAE,CAAC,CAAC,GAAGF,IAAI,kBAAkB,CAAC,IAAIC,EAAE,OAAO,GAAG,CAAC,OAAO,OAAO,eAAe,QAAQA,EAAEA,CAAC,EAAE,OAAO,eAAe,WAAWA,CAAC,EAAE,EAAE,OAAOC,EAAN,CAAS,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,EAAEC,EAAE,CAACH,EAAEC,IAAI,CAAC,IAAIC,EAAE,mBAAmB,OAAOD,GAAG,SAAS,KAAK,UAAUA,CAAC,EAAEA,CAAC,EAAE,OAAO,aAAa,QAAQD,EAAEE,CAAC,CAAC,EAAEE,EAAEJ,GAAG,CAAC,IAAIC,EAAE,OAAO,aAAa,QAAQD,CAAC,EAAE,OAAOC,IAAI,KAAK,KAAK,mBAAmBA,CAAC,CAAC,EAAEI,EAAE,CAACL,EAAEC,IAAI,CAAC,IAAIC,EAAE,mBAAmB,OAAOD,GAAG,SAAS,KAAK,UAAUA,CAAC,EAAEA,CAAC,EAAE,OAAO,eAAe,QAAQD,EAAEE,CAAC,CAAC,EAAEI,EAAEN,GAAG,CAAC,IAAIC,EAAE,OAAO,eAAe,QAAQD,CAAC,EAAE,OAAOC,IAAI,KAAK,KAAK,mBAAmBA,CAAC,CAAC,EAAEM,EAAE,CAACP,EAAEC,EAAEC,IAAI,CAAC,GAAKH,EAAEC,CAAC,EAAE,OAAOA,OAAO,gBAAgB,CAACG,EAAEF,EAAEC,CAAC,EAAE,KAAK,KAAK,kBAAkB,CAACG,EAAEJ,EAAEC,CAAC,EAAE,KAAK,EAAE,EAAEM,EAAE,CAACR,EAAEC,IAAIF,EAAEC,CAAC,EAAEA,IAAI,gBAAgBI,EAAEH,CAAC,EAAED,IAAI,kBAAkBM,EAAEL,CAAC,EAAE,KAAK,KAAKQ,EAAE,CAACT,EAAEC,EAAEC,IAAI,CAAC,GAAG,CAACF,EAAE,OAAO,IAAIU,EAAEF,EAAER,EAAEC,CAAC,EAAE,GAAG,CAACS,EAAE,OAAO,IAAIC,EAAE,KAAK,GAAG,CAACA,EAAE,KAAK,MAAMD,CAAC,CAAC,OAAOE,EAAN,CAAS,CAAC,CAACD,GAAGT,EAAES,CAAC,CAAC,EAAE,OAAO,qBAAqB,OAAO,sBAAsB,CAAC,EAAE,IAAIE,EAAE,IAAI,CAAC,IAAIb,EAAEC,EAAEH,EAAEI,EAAE,GAAG,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,gBAAgB,EAAE,KAAK,CAACQ,EAAEC,EAAEC,EAAEE,KAAI,CAACd,EAAEU,EAAE,aAAa,SAAS,GAAG,OAAOT,EAAES,EAAE,aAAa,aAAa,GAAGZ,EAAEE,IAAIS,EAAET,EAAEC,EAAEW,EAAE,SAAS,EAAEV,EAAE,GAAG,EAAE,OAAOQ,GAAG,CAAC,CAACV,GAAG,CAACE,GAAGK,EAAEP,EAAEC,EAAES,EAAE,MAAM,CAAC,EAAE,aAAa,CAACA,EAAEC,IAAI,CAAC,OAAOD,OAAO,UAAU,CAACV,EAAEW,EAAE,KAAK,KAAK,cAAc,CAACV,EAAEU,EAAE,KAAK,EAAE,EAAE,kBAAkB,CAAC,CAAC,KAAK,UAAU,WAAW,CAAC,KAAK,CAAC,OAAOX,CAAC,EAAE,IAAIU,GAAG,CAACV,EAAEU,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,aAAa,WAAW,CAAC,KAAK,CAAC,OAAOT,GAAG,KAAKA,EAAEH,CAAC,EAAE,IAAIY,GAAG,CAACT,EAAES,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,qBAAqB,KAAKG,CAAC,EAAE,IAAIE,EAAEF,CAAE,GAAG,GCAtiD,IAAI,CAAC,IAAIG,EAAEC,GAAG,CAAC,MAAM,WAAWA,CAAC,CAAC,GAAG,SAASA,CAAC,EAAEC,EAAE,CAACD,EAAEE,IAAIH,EAAEC,CAAC,EAAE,OAAOA,CAAC,EAAEE,EAAMC,EAAEH,GAAGA,GAAG,KAAK,GAAG,OAAOA,GAAG,UAAUA,EAAEA,EAAE,KAAK,EAAE,YAAY,IAAI,OAAO,OAAO,qBAAqB,OAAO,sBAAsB,CAAC,EAAE,IAAII,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,UAAUC,EAAE,OAAOC,EAAE,IAAI,CAAC,IAAIT,EAAE,KAAKE,EAAE,KAAKQ,EAAE,GAAGC,EAAEP,EAAEQ,EAAEP,EAAEQ,EAAEP,EAAEQ,EAAEP,EAAEQ,GAAEP,EAAEQ,GAAE,GAAGC,GAAE,CAAC,EAAEC,EAAE,KAAKC,EAAE,KAAKC,GAAE,IAAI,CAACF,GAAG,MAAMA,EAAE,UAAU,OAAO,WAAWP,GAAG,CAAC,CAAC,EAAEU,GAAE,IAAI,CAAC,IAAIC,EAAE,IAAIC,GAAGD,EAAEtB,GAAG,KAAK,OAAOA,EAAE,aAAa,KAAK,OAAOsB,EAAE,cAAc,eAAe,EAAEJ,EAAE,SAAS,cAAc,KAAK,EAAEA,EAAE,UAAU,IAAI,UAAU,EAAEK,EAAE,QAAQL,CAAC,EAAEE,GAAE,CAAC,EAAEI,GAAED,GAAG,CAAC,IAAID,EAAE,SAAS,cAAc,KAAK,EAAE,OAAOA,EAAE,UAAUC,EAAED,CAAC,EAAE,EAAE,CAACC,EAAED,EAAEG,GAAEC,IAAI,CAAC,CAACH,IAAID,IAAI,YAAYC,EAAE,MAAM,KAAK,GAAG,CAACZ,MAAMY,EAAE,MAAM,IAAIG,GAAG,KAAKA,EAAE,MAAMH,EAAE,MAAM,KAAKE,IAAG,KAAKA,GAAE,IAAIF,EAAE,MAAM,IAAI,GAAG,CAACZ,OAAOY,EAAE,MAAM,MAAM,GAAGX,MAAMW,EAAE,MAAM,OAAO,GAAGV,MAAMU,EAAE,MAAM,WAAWT,EAAES,EAAE,MAAM,MAAMR,GAAE,EAAEY,EAAE,IAAI,CAAC,IAAID,EAAEE,EAAEC,GAAEC,EAAE,IAAIP,IAAGG,EAAExB,GAAG,KAAK,OAAOA,EAAE,UAAU,IAAI,KAAKwB,EAAE,CAAC,EAAEJ,GAAGM,EAAE1B,GAAG,KAAK,OAAOA,EAAE,mBAAmB,IAAI,KAAK0B,EAAE,CAAC,EAAEH,GAAGI,GAAE3B,GAAG,KAAK,OAAOA,EAAE,QAAQ,IAAI,KAAK2B,GAAE,aAAa,GAAKN,GAAE,QAAQQ,EAAE,EAAEA,EAAER,GAAE,OAAOQ,IAAI,CAAC,IAAIC,GAAEf,GAAEc,GAAG,GAAG,CAACC,GAAE,SAAS,IAAIC,KAAIH,EAAEP,GAAEQ,KAAK,KAAKD,EAAE,IAAI,SAAS,EAAEE,GAAE,YAAY,GAAGC,KAAIjB,KAAI,EAAEgB,GAAEP,EAAEH,EAAES,GAAG,MAAM,KAAKT,EAAES,GAAG,MAAM,GAAG,CAAC,CAAC,EAAEG,GAAE,IAAI,CAAC,IAAIZ,EAAE,IAAIC,GAAGD,EAAEpB,GAAG,KAAK,OAAOA,EAAE,UAAU,IAAI,KAAKoB,EAAE,CAAC,EAAE,GAAKC,EAAE,CAAC,QAAQE,GAAE,EAAEA,GAAEF,EAAE,OAAOE,KAAI,CAAC,IAAIC,EAAEF,GAAE,mBAAmBC,GAAE,GAAG,EAAEC,EAAE,MAAM,SAAS,WAAWT,GAAE,KAAKS,CAAC,EAAER,GAAG,MAAMA,EAAE,QAAQQ,CAAC,CAAC,CAACC,EAAE,CAAC,CAAC,EAAEQ,GAAE,IAAI,CAAC,CAACnC,IAAImB,EAAE,IAAI,eAAeI,GAAG,CAAC,QAAQD,KAAKC,EAAEI,EAAE,CAAC,CAAC,EAAER,EAAE,QAAQnB,CAAC,EAAE,EAAEoC,GAAEb,GAAG,CAACb,EAAEa,EAAEb,GAAGW,GAAE,EAAEa,GAAE,EAAEC,GAAE,GAAGE,GAAE,CAAC,EAAEC,GAAEf,GAAG,CAACZ,EAAEY,EAAEI,EAAE,CAAC,EAAEY,GAAEhB,GAAG,CAACX,EAAEW,EAAEI,EAAE,CAAC,EAAEa,GAAEjB,GAAG,CAACV,EAAEU,EAAEI,EAAE,CAAC,EAAEc,GAAElB,GAAG,CAACT,EAAES,EAAEI,EAAE,CAAC,EAAEe,GAAEnB,GAAG,CAACR,GAAEQ,EAAEI,EAAE,CAAC,EAAEgB,GAAEpB,GAAG,CAACP,GAAEO,EAAEI,EAAE,CAAC,EAAEiB,GAAErB,GAAG,CAAC,IAAIG,EAAEE,GAAE,GAAG,CAAClB,GAAG,CAACa,EAAE,OAAO,OAAO,IAAID,GAAGI,EAAExB,GAAG,KAAK,OAAOA,EAAE,mBAAmB,IAAI,KAAKwB,EAAE,CAAC,EAAED,IAAGG,GAAE1B,GAAG,KAAK,OAAOA,EAAE,QAAQ,IAAI,KAAK0B,GAAE,aAAa,QAAQC,EAAE,EAAEA,EAAEN,EAAE,OAAO,OAAOM,IAAI,CAAC,IAAIC,EAAEP,EAAE,OAAOM,GAAGE,EAAEd,GAAEY,GAAG,GAAGC,IAAI,QAAQ,CAAC,CAACC,EAAE,CAACA,EAAE,OAAO,EAAEA,EAAEF,GAAG,OAAO,QAAQ,CAAC,GAAGC,IAAI,QAAQ,CAACC,EAAE,CAAC,IAAIE,GAAET,GAAE,mBAAmBK,EAAE,GAAG,EAAEgB,IAAGf,GAAG,KAAKA,EAAE,IAAI,SAAS,EAAEG,GAAE,YAAY,GAAGY,KAAI7B,KAAIiB,GAAE,MAAM,SAAS,WAAW,EAAEA,GAAER,GAAEH,EAAEO,GAAG,MAAM,KAAKP,EAAEO,GAAG,MAAM,GAAG,EAAEZ,GAAEY,GAAGI,GAAEf,GAAG,MAAMA,EAAE,OAAOe,EAAC,CAAC,CAAC,GAAG,CAACF,EAAE,SAAS,IAAIC,IAAGF,GAAG,KAAKA,EAAE,IAAI,SAAS,EAAEC,EAAE,YAAY,GAAGC,KAAIhB,KAAI,EAAEe,EAAEN,GAAEH,EAAEO,GAAG,MAAM,KAAKP,EAAEO,GAAG,MAAM,GAAG,CAAC,CAAC,EAAEQ,GAAE,IAAI,CAACnB,GAAG,MAAMA,EAAE,OAAO,EAAE,QAAQK,KAAKN,GAAE,CAACM,GAAGA,EAAE,OAAO,EAAEN,GAAE,CAAC,EAAEE,GAAG,MAAMA,EAAE,WAAW,CAAC,EAAE,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,gBAAgB,EAAE,KAAK,CAACI,EAAED,EAAEG,GAAEC,IAAI,CAAC1B,EAAEuB,EAAErB,EAAEwB,EAAEf,EAAEV,EAAEsB,EAAE,aAAa,oCAAoC,EAAEnB,CAAC,EAAEQ,EAAEX,EAAEsB,EAAE,aAAa,sBAAsB,EAAElB,CAAC,EAAEQ,EAAEZ,EAAEsB,EAAE,aAAa,uBAAuB,EAAEjB,CAAC,EAAEQ,EAAES,EAAE,aAAa,mBAAmB,GAAGhB,EAAEQ,GAAEQ,EAAE,aAAa,2BAA2B,GAAGf,EAAEQ,GAAEO,EAAE,aAAa,sBAAsB,GAAG,GAAGa,GAAEjC,EAAEoB,EAAE,aAAa,gBAAgB,CAAC,CAAC,CAAC,EAAE,OAAOqB,GAAE,aAAa,CAACrB,EAAED,IAAI,CAACC,IAAI,kBAAkBa,GAAEjC,EAAEmB,CAAC,CAAC,EAAEC,IAAI,sCAAsCe,GAAErC,EAAEqB,EAAElB,CAAC,CAAC,EAAEmB,IAAI,wBAAwBgB,GAAEtC,EAAEqB,EAAEjB,CAAC,CAAC,EAAEkB,IAAI,yBAAyBiB,GAAEvC,EAAEqB,EAAEhB,CAAC,CAAC,EAAEiB,IAAI,qBAAqBkB,GAAEnB,CAAC,EAAEC,IAAI,6BAA6BmB,GAAEpB,CAAC,EAAEC,IAAI,wBAAwBoB,GAAErB,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC,KAAK,gBAAgB,WAAW,CAAC,KAAK,CAAC,OAAOZ,GAAG,KAAKA,EAAE,EAAE,EAAE,IAAIa,GAAG,CAACa,GAAEjC,EAAEoB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,oBAAoB,WAAW,CAAC,KAAK,CAAC,OAAOZ,GAAG,KAAKA,EAAE,EAAE,EAAE,IAAIY,GAAG,CAACe,GAAErC,EAAEsB,EAAEnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,eAAe,WAAW,CAAC,KAAK,CAAC,OAAOQ,CAAC,EAAE,IAAIW,GAAG,CAACgB,GAAEtC,EAAEsB,EAAElB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,gBAAgB,WAAW,CAAC,KAAK,CAAC,OAAOQ,CAAC,EAAE,IAAIU,GAAG,CAACiB,GAAEvC,EAAEsB,EAAEjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,YAAY,WAAW,CAAC,KAAK,CAAC,OAAOQ,CAAC,EAAE,IAAIS,GAAG,CAACkB,GAAElB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,mBAAmB,WAAW,CAAC,KAAK,CAAC,OAAOR,EAAC,EAAE,IAAIQ,GAAG,CAACmB,GAAEnB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,eAAe,WAAW,CAAC,KAAK,CAAC,OAAOP,EAAC,EAAE,IAAIO,GAAG,CAACoB,GAAEpB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAqCr3G,QAAQc,EAAC,CAAC,EAAE,OAAO,qBAAqB,KAAK5B,CAAC,EAAE,IAAIqC,EAAErC,CAAE,GAAG,GCrChE,IAAI,CAAC,IAAIsC,EAAEC,GAAGA,GAAG,KAAK,GAAG,OAAOA,GAAG,UAAUA,EAAEA,EAAE,KAAK,EAAE,YAAY,IAAI,OAAO,OAAO,qBAAqB,OAAO,sBAAsB,CAAC,EAAE,IAAIC,EAAE,IAAI,CAAC,IAAID,EAAE,GAAGE,EAAE,KAAKC,EAAE,KAAKC,EAAE,IAAI,CAAC,GAAG,CAACD,GAAG,CAACD,EAAE,OAAO,IAAIG,EAAEH,EAAE,YAAY,GAAG,CAAC,EAAE,GAAGG,EAAE,SAAS,EAAE,OAAO,IAAIC,EAAED,EAAE,GAAGE,EAAED,GAAG,GAAGA,EAAEA,EAAE,KAAK,IAAIA,EAAE,EAAE,EAAE,GAAGJ,EAAE,QAAQ,IAAI,WAAW,CAACC,EAAE,MAAM,eAAe,OAAO,EAAEA,EAAE,MAAM,eAAe,MAAM,EAAEA,EAAE,MAAM,eAAe,OAAO,EAAE,IAAIK,EAAE,KAAK,IAAI,GAAGF,CAAC,EAAEH,EAAE,MAAM,OAAO,GAAGK,KAAKN,EAAE,cAAc,EAAEC,EAAE,MAAM,OAAO,GAAGI,KAAKJ,EAAE,MAAM,IAAI,GAAGI,IAAI,KAAK,CAACJ,EAAE,MAAM,eAAe,QAAQ,EAAEA,EAAE,MAAM,eAAe,KAAK,EAAEA,EAAE,MAAM,eAAe,QAAQ,EAAE,IAAIK,EAAE,KAAK,IAAI,GAAGF,CAAC,EAAEH,EAAE,MAAM,MAAM,GAAGK,KAAKN,EAAE,cAAc,EAAEC,EAAE,MAAM,MAAM,GAAGI,KAAKJ,EAAE,MAAM,KAAK,GAAGI,IAAI,CAAC,EAAEE,EAAEJ,GAAG,CAACL,EAAEK,EAAED,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,kBAAkB,EAAE,KAAK,CAACC,EAAEC,EAAEC,EAAEC,IAAI,CAAC,IAAIE,EAAER,EAAEM,EAAEL,GAAGO,EAAEL,EAAE,aAAa,KAAK,OAAOK,EAAE,cAAc,aAAa,EAAEV,EAAED,EAAEM,EAAE,aAAa,kBAAkB,CAAC,EAAEL,GAAGI,EAAE,CAAC,EAAE,OAAOC,GAAG,CAAC,CAACL,GAAGI,EAAE,CAAC,EAAE,aAAa,CAACC,EAAEC,IAAI,CAACD,IAAI,oBAAoBI,EAAEV,EAAEO,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC,KAAK,UAAU,WAAW,CAAC,KAAK,CAAC,OAAON,GAAG,KAAKA,EAAE,EAAE,EAAE,IAAIK,GAAG,CAACI,EAAEV,EAAEM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,qBAAqB,KAAKJ,CAAC,EAAE,IAAIU,EAAEV,CAAE,GAAG,mLCPxmCW,EAAQ,CAACC,EAAQC,IAAuB,IAAKA,GAAaA,EAAU,OAAS,EAAIA,EAAU,IAAIC,GAAY,gCAAiCA,OAAe,EAAE,KAAK,EAAE,EAAI,cAAeF,iVAAAA,EAAAA,s/FCGjLG,EAAkB,mBAClBC,EAAsB,wBACtBC,EAAsB,wBACtBC,EAAgB,iBAEhBC,EAAO,OACPC,EAAM,MACNC,EAAM,MACNC,EAAO,OACPC,EAAQ,QACRC,EAAO,OACPC,EAAQ,QACRC,GAAc,MACdC,GAAc,MAEdC,GAAW,WACXC,EAAmB,oBAEnBC,EAAc,eACdC,GAAe,gBACfC,GAAe,gBAEfC,GAAW,YACXC,EAAgB,kBAChBC,EAAe,iBAEfC,GAAe,gBACfC,GAAgB,iBAChBC,GAAgB,iBAChBC,GAAY,aACZC,GAAiB,mBACjBC,GAAiB,mBACjBC,GAAgB,iBAChBC,GAAqB,uBACrBC,GAAqB,uBACrBC,GAAgB,iBAChBC,GAAqB,uBACrBC,EAAqB,uBAErBC,EAAiB,kBACjBC,GAAW,YCxCXC,EAAW,WACXC,GAAa,aCAbC,EAAe,CAACC,EAAaC,EAAaC,EAAWC,EAAWC,IAAc,CACzF,IAAMC,EAAQJ,EAAMD,EACpB,OAAGK,IAAS,EAAUH,GACbC,EAAID,IAAME,EAAIJ,GAAQK,EAAOH,CACxC,EAGaI,EAAYC,GAChB,CAAC,MAAM,WAAWA,CAAK,CAAC,GAAK,SAASA,CAAK,EAKvCC,EAAY,CAACD,EAAYE,IAC7BH,EAASC,CAAK,EAAI,OAAOA,CAAK,EAAIE,EAO9BC,GAAc,CAACC,EAAaC,IAChCA,IAAS,EAAI,EAAI,KAAK,MAAMD,EAAMC,CAAI,EAAIA,EAOtCC,GAAmB,CAACF,EAAaG,EAAgB,EAAA,IAAa,CACzE,GAAIA,IAAkB,EAAA,EAAU,OAAOH,EAEvC,IAAMI,EAAQC,EAAA,GAAMF,CAAAA,EACpB,OAAO,KAAK,MAAMH,EAAMI,CAAK,EAAIA,CACnC,EAEaE,GAAcC,GACtBA,GAAQ,KAAkC,GAC1C,OAAOA,GAAQ,UAAkBA,EAC7BA,EAAI,KAAK,EAAE,YAAY,IAAM,OCtCzBC,GAA0B,CAACC,EAAyBC,IAA0B,CACzFD,EAAW,cACT,IAAI,YAAY,mBAAoB,CAClC,OAAQ,CACN,SAAUC,CACZ,CACF,CAAC,CACH,CACF,EAEaC,GAAqB,CAACF,EAAyBG,IAAoB,CAC9EH,EAAW,cACT,IAAI,YAAY,cAAe,CAC7B,OAAQ,CACN,YAAaG,CACf,CACF,CAAC,CACH,CACF,EAEaC,GAAmB,CAACJ,EAAyBG,IAAoB,CAC5EH,EAAW,cACT,IAAI,YAAY,YAAa,CAC3B,OAAQ,CACN,YAAaG,CACf,CACF,CAAC,CACH,CACF,EAEaE,GAAqB,CAACL,EAAyBG,IAAuB,CACjFH,EAAW,cACT,IAAI,YAAY,YAAa,CAC3B,OAAQ,CACN,YAAaG,CACf,CACF,CAAC,CACH,CACF,EAEaG,GAAkB,CAC7BN,EACAO,IACG,CAEH,GAAG,CAACA,GAAUA,EAAO,QAAU,EAAG,OAElC,IAAMC,EAAcD,EAAO,IAAIE,GAASvB,EAASuB,CAAK,EAAIrB,EAAUqB,EAAOA,CAAK,EAAIA,CAAK,EAEnFC,EAAqB,CACzB,OAAQF,GAAe,CAAC,CAC1B,EAEAE,EAAO,MAAQF,EAAY,GAC3BE,EAAO,OAASF,EAAY,GAC5BE,EAAO,OAASF,EAAY,GAE5B,QAAQG,EAAE,EAAGA,EAAEH,EAAY,OAAQG,IACjCD,EAAO,QAASC,EAAI,KAAQH,EAAYG,GAG1CX,EAAW,cACT,IAAI,YAAY,SAAU,CACxB,OAAAU,CACF,CAAC,CACH,CACF,EC9CaE,GAAU,CAACZ,EAAyBC,EAAuBY,IAA6B,CAInG,IAAIC,EAAU,EAEVC,EACAC,EACAC,EACAC,EAEAC,EAAW,GAGTC,EAAiB,CAACC,EAAkBC,EAA+BC,EAAgCC,EAAeC,EAAuBC,IAA0B,CACpKH,IAAe,QAAaF,EAAWE,IACxCF,EAAWE,GAGVD,IAAc,QAAaD,EAAWC,IACvCD,EAAWC,GAGbR,EAAUO,EAKV,IAAIM,GAAab,GACbU,IAAmB/C,GAAYiD,GAChCF,IAAmB9C,IAAc+C,KAClCE,GAAa,IAAMA,IAGjBH,IAAmB/C,EACrBwB,EAAS,MAAM,IAAM,GAAI0B,MAGzB1B,EAAS,MAAM,KAAO,GAAI0B,KAE9B,EAEMC,EAAaC,GACVA,IAAY5B,GAAYA,EAAS,SAAS4B,CAAO,EAGpDC,EAAe,CACnBC,EACAC,EACAC,EACAC,IACG,CACHnB,EAAYgB,EACZf,EAAagB,EACbf,EAAUgB,EACVf,EAAYgB,CACd,EAEMC,EAAeC,GAAuB,CAC1CjB,EAAWiB,EACXnC,EAAS,UAAU,OAAO,WAAYkB,CAAQ,EAE3CA,EACDlB,EAAS,aAAa,gBAAiB,MAAM,EAGzCA,EAAS,aAAa,eAAe,GACvCA,EAAS,gBAAgB,eAAe,CAG9C,EAEMoC,GAAU,CAACC,EAAa7B,IAAqC,CAC9DA,GAAU,KACXR,EAAS,gBAAgBqC,CAAG,EAG5BrC,EAAS,aAAaqC,EAAK7B,CAAK,CAEpC,EAEM8B,GAAWD,GACRrC,EAAS,aAAaqC,CAAG,EAK5BE,EAAkBrC,GAAuB,CAC7C,GAAG,CAAAgB,EAEH,CAAA,OAAQhB,EAAI,SACL,YAAa,CAChBA,EAAI,eAAe,EAChB,OAAOY,GAAc,YACtBA,EAAUF,CAAK,EAEjB,KACF,KAEK,aAAc,CACjBV,EAAI,eAAe,EAChB,OAAOa,GAAe,YACvBA,EAAWH,CAAK,EAElB,KACF,KAEK,UAAW,CACdV,EAAI,eAAe,EAChB,OAAOc,GAAY,YACpBA,EAAQJ,CAAK,EAEf,KACF,KAEK,YAAa,CAChBV,EAAI,eAAe,EAChB,OAAOe,GAAc,YACtBA,EAAUL,CAAK,EAEjB,KACF,EAGFR,GAAmBL,EAAYG,CAAG,CAAA,CACpC,EAEMsC,EAAiB,IAAM,CACxBtB,GACHpB,GAAwBC,EAAYC,CAAQ,CAC9C,EAIA,OACEA,EAAS,UAAY,mBAAoBY,IAEzCZ,EAAS,iBAAiB,UAAWuC,CAAc,EACnDvC,EAAS,iBAAiB,QAASwC,CAAc,EAS5C,CACL,SAAAxC,EAEA,IAAI,SAAU,CACZ,OAAOa,CACT,EAEA,IAAI,UAAW,CACb,OAAOK,CACT,EAEA,IAAI,SAASiB,EAAW,CACtBD,EAAYC,CAAS,CACvB,EAEA,eAAAhB,EAEA,UAAAQ,EACA,aAAAE,EACA,QAAAO,GACA,QAAAE,GAEA,QA5Bc,IAAM,CACpBtC,EAAS,oBAAoB,UAAWuC,CAAc,EACtDvC,EAAS,oBAAoB,QAASwC,CAAc,EACpDxC,EAAS,OAAO,CAClB,CAyBA,CACF,EClMayC,GAAaC,GAA2E,CACnG,GAAgCA,GAAe,KAAM,OAErD,GAAG,MAAM,QAAQA,CAAU,EAAG,OAAOA,EAGrC,GADeA,EAAW,KAAK,IAChB,GAAI,OAEnB,IAAMC,EAAQD,EAAW,MAAM,GAAG,EAC5BE,EAAiB,CAAC,EACpBC,EAAsB,GAE1B,QAASnC,EAAI,EAAGA,EAAIiC,EAAM,OAAQjC,IAAK,CACrC,IAAMoC,EAAOH,EAAMjC,GAAG,KAAK,EACvBoC,IAAS,KAEbF,EAAK,KAAKE,CAAI,EAET7D,EAAS6D,CAAI,IAChBD,EAAsB,IAE1B,CAEA,OAAKA,EAEED,EAAK,IAAKG,GAAS,OAAOA,CAAI,CAAC,EAFLH,CAGnC,EAEaI,GAAuB,CAACnD,EAAsBoD,IAClDA,EAAOA,EAAK,UAAWF,GAASA,IAASlD,GAAOkD,EAAK,SAAS,EAAE,KAAK,IAAMlD,EAAI,SAAS,EAAE,KAAK,CAAC,EAAI,GCzBhGqD,GAAaC,IA8EjB,CACL,eA7EqB,CAACC,EAAcC,EAAkCC,EAAsBC,IAAyB,CAErH,GAAGF,EAAS,QAAU,EAAG,OAEzB,IAAMG,EAAUH,EAAS,SAAW,EAC9BI,EAAQJ,EAAS,GACjBK,EAAOL,EAASA,EAAS,OAAS,GAEpCD,IAAkB5E,GACpB2E,EAAM,MAAM,eAAe,OAAO,EAClCA,EAAM,MAAM,eAAe,OAAO,EAClCA,EAAM,MAAM,eAAe,MAAM,EAE5BK,EAIHL,EAAM,MAAM,OAAS,GAAIM,KAHzBN,EAAM,MAAM,OAAS,GAAG,KAAK,IAAIM,EAAQC,CAAI,KAM3CH,GACFJ,EAAM,MAAM,OAAS,KAEhBK,EAIHL,EAAM,MAAM,IAAM,OAHlBA,EAAM,MAAM,IAAM,GAAG,KAAK,IAAI,IAAMO,EAAM,IAAMD,CAAK,OAOvDN,EAAM,MAAM,OAAS,OAEhBK,EAIHL,EAAM,MAAM,IAAM,KAHlBA,EAAM,MAAM,IAAM,GAAG,KAAK,IAAIM,EAAOC,CAAI,QAQ7CP,EAAM,MAAM,eAAe,QAAQ,EACnCA,EAAM,MAAM,eAAe,KAAK,EAChCA,EAAM,MAAM,eAAe,QAAQ,EAE9BK,EAIHL,EAAM,MAAM,MAAQ,GAAIM,KAHxBN,EAAM,MAAM,MAAQ,GAAI,KAAK,IAAIM,EAAQC,CAAI,KAM3CJ,GACFH,EAAM,MAAM,MAAQ,KAEfK,EAIHL,EAAM,MAAM,KAAO,OAHnBA,EAAM,MAAM,KAAO,GAAI,KAAK,IAAI,IAAMO,EAAM,IAAMD,CAAK,OAOzDN,EAAM,MAAM,MAAQ,OAEfK,EAIHL,EAAM,MAAM,KAAO,KAHnBA,EAAM,MAAM,KAAO,GAAI,KAAK,IAAIM,EAAOC,CAAI,MAOnD,CAIA,GCnFWpF,GAAiB,oBACjBlB,GAAc,UACdC,GAAe,WACfC,GAAe,2BAEfC,GAAW,aACXC,GAAgB,mBAChBC,GAAe,kBAEfC,GAAe,kBACfC,GAAgB,mBAChBC,GAAgB,0BAChBC,GAAY,eACZC,GAAiB,qBACjBC,GAAiB,qBACjBC,GAAgB,mBAChBC,GAAqB,yBACrBC,GAAqB,yBACrBC,GAAgB,mBAChBC,GAAqB,yBACrBC,GAAqB,yBCpBrBsF,GAAuB,CAAI5D,EAAyB6D,EAAeC,IAAqD,CAEnI,IAAMC,EAAM,IAAI,IAEhB,QAAWC,KAAQhE,EAAW,WAAY,CACxC,IAAMiE,EAAYD,EAAK,SAAS,KAAK,EAAE,YAAY,EAEnD,GAAG,CADaH,EAAM,KAAKI,CAAS,EACvB,SAEb,IAAM3B,EAAM2B,EAAU,QAAQ,MAAO,EAAE,EAAE,KAAK,EACxCC,EAAU5B,IAAQ,IAAMA,IAAQ,KAAOA,IAAQ,IAAO,EAAKlD,EAAUkD,EAAK,CAAC,EAAI,EAC/E7B,EAAQqD,GAAc,OAAOA,GAAe,WAAaA,EAAWE,EAAK,KAAK,EAAIA,EAAK,MAC7FD,EAAI,IAAIG,EAAQzD,CAAU,CAC5B,CAEA,OAAOsD,CACT,EAEaI,GAAsBnE,GAA4B,CAC7D,GAAG,CAACA,EAAY,OAAO,KAEvB,IAAMoE,EAAMpE,EAAW,aAA4BxB,EAAQ,EAC3D,GAAG,CAAC4F,EAAK,OAAO,KAEhB,IAAMxB,EAAQwB,EAAI,MAAM,GAAG,EACrBC,EAAoB,CAAC,EAE3B,QAAUtB,KAAQH,EACbG,EAAK,KAAK,IAAM,IACnBsB,EAAQ,KAAKtB,EAAK,KAAK,CAAC,EAG1B,OAAOsB,CACT,ECrBaC,GAAiE,CAC5E,CAAcjH,GAA4BA,EAAa,cAAe,IAAI,EAC1E,CAAcC,GAA6BA,GAAc,eAAgB,IAAI,EAC7E,CAAcC,GAA6BA,GAAc,eAAgB,IAAI,EAE7E,CAAcC,GAAyBA,GAAU,WAAY,IAAI,EACjE,CAAcC,GAA8BA,EAAe,gBAAiB,IAAI,EAChF,CAAcC,GAA6BA,EAAc,eAAgB,IAAI,EAE7E,CAAcC,GAA6BA,GAAc,gBAAiB,yBAAyB,EACnG,CAAcC,GAA8BA,GAAe,iBAAkB,0BAA0B,EACvG,CAAcC,GAA8BA,GAAe,iBAAkB,0BAA0B,EACvG,CAAcC,GAA0BA,GAAW,aAAc,sBAAsB,EACvF,CAAcC,GAA+BA,GAAgB,kBAAmB,4BAA4B,EAC5G,CAAcC,GAA+BA,GAAgB,kBAAmB,4BAA4B,EAC5G,CAAcC,GAA8BA,GAAe,iBAAkB,0BAA0B,EACvG,CAAcC,GAAmCA,GAAoB,sBAAuB,gCAAgC,EAC5H,CAAcC,GAAmCA,GAAoB,sBAAuB,gCAAgC,EAC5H,CAAcC,GAA8BA,GAAe,iBAAkB,0BAA0B,EACvG,CAAcC,GAAmCA,GAAoB,sBAAuB,gCAAgC,EAC5H,CAAcC,GAAmCA,EAAoB,sBAAuB,gCAAgC,CAC9H,EAEaiG,GAAS,CAACvE,EAAyBwE,EAAsBC,IAAmC,CAEvG,IAAIC,EAAuB,KACrBC,EAAmC,CAAC,EACpCC,EAAiC,IAAI,IAIrCC,EAAyB,CAACC,EAAgBC,EAAWP,IAAY,CACrE,IAAMQ,EAAY,CAAC,GAAGD,EAAS,SAAS,EACxC,QAAUE,KAAaD,EAClBC,EAAU,WAAWH,CAAM,GAC5BN,EAAQ,UAAU,OAAOS,CAAS,CAGxC,EAEMC,EAAgB,IAAM,CAE1BL,EAAuB,OAAO,EAG9B,IAAMM,EAAYX,EAAQ,iBAAiB,UAAU,EACrD,QAAUvE,KAAYkF,EACpBN,EAAuB,QAAS5E,CAAuB,CAE3D,EAEMmF,EAAYtF,GAAuB,CACvC4E,EAAQ5E,EACR+E,EAAuB,QAAQ,EAE5B,OAAO/E,GAAQ,UAChB0E,EAAQ,UAAU,IAAI,SAAU1E,GAAM,CAE1C,EAEMuF,EAAsB,IAAM,CAGhC,GAFAH,EAAc,EAEX,EAAAP,EAAc,QAAU,GAG3B,CAAAH,EAAQ,UAAU,IAAI,QAAS,SAAUG,EAAc,IAAK,EAG5D,QAAQhE,EAAE,EAAGA,EAAEgE,EAAc,OAAQhE,IAAI,CACvC,IAAMqC,EAAO2B,EAAchE,GAC3B,GAAG,CAACqC,EAAM,SAEV,IAAM/C,EAAWuE,EAAQ,cAAc,YAAa7D,GAAI,EACrD,CAACV,GAEJA,EAAS,UAAU,IAAI,QAAS,SAAU+C,GAAO,CACnD,CAAA,CACF,EAEMsC,EAAkB,CAACzE,EAAeJ,IAAkB,CACxDkE,EAAc9D,GAASJ,EACvB4E,EAAoB,CACtB,EAEME,EAAmB,IAAM,CAE7BL,EAAc,EAGd,IAAMrC,EAAOe,GAAqB5D,EAAY,yBAAyB,EACvE,GAAG,EAAA6C,EAAK,MAAQ,GAGhB,CAAA,QAAUG,KAAQH,EAAK,CACrB,IAAMhC,EAAQmC,EAAK,GACnB2B,EAAc9D,GAASmC,EAAK,EAC9B,CAEAqC,EAAoB,CAAA,CACtB,EAEMG,EAAS,CAAClD,EAAazB,IACpB,GAAIyB,KAASzB,IAGhB4E,GAAW,CAACnD,EAAa7B,EAAkCI,IAAkB,CAEjF,IAAM6E,EAAUjB,EAAS5D,GACzB,GAAG,CAAC6E,EAAS,OAEb,IAAMC,EAAe9E,IAAU,EAAI2D,EAAUkB,EAAQ,SAErD,GAAGjF,GAAU,KAA4B,CACpCmE,EAAU,IAAIY,EAAOlD,EAAKzB,CAAK,CAAC,GACjC+D,EAAU,OAAOY,EAAOlD,EAAKzB,CAAK,CAAC,EAErC8E,EAAa,MAAM,eAAerD,CAAG,EACrC,MACF,CAEAsC,EAAU,IAAIY,EAAOlD,EAAKzB,CAAK,EAAGJ,CAAK,EACvCkF,EAAa,MAAM,YAAYrD,EAAK7B,CAAK,CAC3C,EAEMmF,GAAW,CAACtD,EAAazB,IACtB+D,EAAU,IAAIY,EAAOlD,EAAKzB,CAAK,CAAC,EAIzC,OAAC,IAAM,CAEL,QAAUmC,KAAQsB,GAAoB,CAGpC,GAAM,CAACuB,EAAiBC,EAAUC,EAAalC,CAAK,EAAIb,EAMxD,GAAGa,EAAM,CACP,IAAMhB,EAAOe,GAAqB5D,EAAY6D,CAAK,EACnD,QAAUb,KAAQH,EAAK,CACrB,IAAMhC,GAAQmC,EAAK,GACbvC,GAAQuC,EAAK,GACnByC,GAASI,EAAiBpF,GAAOI,EAAK,CACxC,CACF,KACI,CACF,IAAMmF,EAAmBhG,EAAW,aAAa8F,CAAQ,EACzDL,GAASI,EAAiBG,EAAkB,CAAC,CAC/C,CAGA,IAAMC,EAAoC,CAAC,EAE3C,GAAGF,EAAY,QAAQ,GAAG,IAAM,GAC9BE,EAAc,KAAK,CAACF,EAAa,CAAC,CAAC,MAEjC,CACFE,EAAc,KAAK,CAACF,EAAY,QAAQ,IAAK,EAAE,EAAG,CAAC,CAAC,EACpDE,EAAc,KAAK,CAACF,EAAY,QAAQ,IAAK,GAAG,EAAG,CAAC,CAAC,EACrDE,EAAc,KAAK,CAACF,EAAY,QAAQ,IAAK,GAAG,EAAG,CAAC,CAAC,EACrD,QAAQpF,EAAE,EAAGA,EAAE8D,EAAS,OAAQ9D,IAC9BsF,EAAc,KAAK,CAACF,EAAY,QAAQ,KAAMpF,EAAI,GAAG,SAAS,CAAC,EAAGA,CAAC,CAAC,CAExE,CAEA,QAAUqC,KAAQiD,EAChB,GAAG,CACD,IAAMC,EAAWlD,EAAK,GAChBnC,GAAQmC,EAAK,GAEf,OAAO,UAAU,eAAe,KAAKhD,EAAYkG,CAAQ,GAC3D,OAAO,eAAelG,EAAYkG,EAAU,CAC1C,KAAO,CACL,OAAON,GAASC,EAAiBhF,EAAK,CACxC,EAEA,IAAMf,IAAQ,CACZ2F,GAASI,EAAiB/F,GAAKe,EAAK,CACtC,CACF,CAAC,CAEL,OACOsF,EADP,CAEE,QAAQ,MAAMA,CAAE,CAClB,CAEJ,CAEAf,EAASpF,EAAW,aAA4BhD,CAAK,CAAC,EACtDuI,EAAiB,CACnB,GAAG,EAEI,CACL,SAAAE,GACA,SAAAG,GAEA,IAAI,OAAQ,CACV,OAAOlB,CACT,EAEA,IAAI,MAAM5E,EAAI,CACZsF,EAAStF,CAAG,CACd,EAEA,IAAI,eAAgB,CAClB,OAAO6E,CACT,EAEA,gBAAAW,CACF,CACF,EClOa/G,GAAiB,mBACjB9B,GAAgB,iBCehB2J,GAAiB,CAC5BpG,EACAqG,EACAC,EACAC,IACqB,CAErB,IAAMC,EAAqB,CAAC,EAItBC,EAAUvD,GAA4B,CAC1C,QAAUwD,KAAUF,EACfE,EAAO,QAAU,OAAOA,EAAO,QAAW,YAC3CA,EAAO,OAAOxD,CAAI,CAGxB,EAEMyD,EAAU,IAAM,CACpB,QAAUD,KAAUF,EACfE,EAAO,SAAW,OAAOA,EAAO,SAAY,YAC7CA,EAAO,QAAQ,CAGrB,EAEME,EAAe,CAACC,EAAmBC,IAAsB,CAC7D,QAAUJ,KAAUF,EACfE,EAAO,cAAgB,OAAOA,EAAO,cAAiB,YACvDA,EAAO,aACLG,EACAC,CACF,CAGN,EAEMC,EAAwBL,GAAoB,CAChD,GAAIA,EAAO,mBAEX,QAAU1D,KAAQ0D,EAAO,kBACvB,GAAG,EAAA,CAAC1D,EAAK,MAAQ,CAACA,EAAK,YAEvB,GAAG,CACG,OAAO,UAAU,eAAe,KAAKhD,EAAYgD,EAAK,IAAI,GAC5D,OAAO,eAAehD,EAAYgD,EAAK,KAAMA,EAAK,UAAU,CAEhE,OACOmD,EADP,CAEE,QAAQ,MAAM,8BAA+BA,CAAE,CACjD,EAEJ,EAEMa,EAAcN,GAAoB,CA1E1C,IAAAO,EA2EI,GAAG,CAACP,EAAO,IAAK,OAEhB,IAAMQ,GAASD,EAAAjH,EAAW,aAAX,KAAA,OAAAiH,EAAuB,cAAc,OAAA,EACjD,CAACC,IAEJA,EAAO,WAAaR,EAAO,IAC7B,EA6BA,MAAO,CACL,KA3BW,IAAM,CACjB,GAAI,OAAO,qBAEX,QAAUS,KAAc,OAAO,qBAAqB,CAClD,IAAMT,EAASS,EAAW,EAC1BX,EAAQ,KAAKE,CAAM,EAEhBA,EAAO,MAAQ,OAAOA,EAAO,MAAS,aAGvCA,EAAO,KACL1G,EACAqG,EACAC,EACAC,CACF,EAGAQ,EAAqBL,CAAM,EAG3BM,EAAWN,CAAM,EAErB,CACF,EAIE,OAAAD,EACA,aAAAG,EACA,QAAAD,CACF,CACF,EChHaS,GAAe,CAACpH,EAAyBC,IAA0B,CAC9E,IAAM8D,EAAM,IAAI,IACVF,EAAQ,kBAId,QAAWG,KAAQhE,EAAW,WAAY,CACxC,IAAMiE,EAAYD,EAAK,SAAS,KAAK,EAAE,YAAY,EAEnD,GAAG,CADaH,EAAM,KAAKI,CAAS,EACvB,SAEb,IAAM3B,EAAM2B,EAAU,QAAQ,QAAS,EAAE,EAAE,KAAK,EAC1CC,EAAU5B,IAAQ,IAAMA,IAAQ,KAAOA,IAAQ,IAAO,EAAKlD,EAAUkD,EAAK,CAAC,EAAI,EAC/E7B,EAAQvB,EAAS8E,EAAK,KAAK,EAAI5E,EAAU4E,EAAK,MAAO,CAAC,EAAIA,EAAK,MAErED,EAAI,IAAIG,EAAQzD,CAAK,CACvB,CAGA,IAAM5B,EAAM,KAAK,IAAI,GAAG,MAAM,KAAKkF,EAAI,KAAK,CAAC,CAAC,EACxCU,EAAsD,CAAC,EAG7DA,EAAS,KAAK,CAAC7D,GAAQZ,EAAYC,EAAU,CAAC,EAAG8D,EAAI,IAAI,CAAC,CAAC,CAAC,EAG5D,IAAIsD,EAAiBpH,EAErB,QAAQU,EAAE,EAAGA,GAAG9B,EAAK8B,IAAI,CACvB,IAAM2G,EAAcrH,EAAS,UAAU,EAAI,EAC3CoH,EAAe,MAAMC,CAAW,EAEhCD,EAAiBC,EACjB7C,EAAS,KAAK,CAAC7D,GAAQZ,EAAYsH,EAAa3G,CAAC,EAAGoD,EAAI,IAAIpD,CAAC,CAAC,CAAC,CACjE,CAEA,OAAO8D,CACT,EAEa8C,GAAiB,CAC5BvH,EACAwH,EACA3G,EACAoD,EACAwD,EACAC,EACAC,IACG,CAEH,GAAG,CAGD,OAAO,eAAe3H,EAAYiE,EAAW,CAC3C,aAAc,GACd,KAAO,CACL,GAAG,CAACuD,EAAQ,OAEZ,IAAM9B,EAAU8B,EAAO,SAAS3G,GAChC,GAAG,CAAC6E,EAAS,OAEb,IAAM5F,EAAM0H,EAAO,aAAa9B,EAAQ,OAAO,EAC/C,OAAOxG,EAASY,CAAG,EAAIV,EAAUU,EAAKA,CAAG,EAAIA,CAC/C,EAEA,IAAMA,GAAQ,CACZ0H,GAAA,MAAAA,EAAQ,SAAS1H,EAAKe,CAAAA,CACxB,CACF,CAAC,EAGD,OAAO,eAAeb,EAAYyH,EAAe,CAC/C,aAAc,GACd,KAAO,CA5Eb,IAAAR,EAAAW,EA6EQ,OAAOA,GAAAX,EAAAO,GAAA,KAAA,OAAAA,EAAQ,SAAS3G,KAAjB,KAAA,OAAAoG,EAAyB,QAAQ,YAAA,IAAjC,KAAAW,EAAkD,MAC3D,EAEA,IAAM9H,GAAQ,CACT,CAAC0H,GACJA,EAAO,aAAa3G,EAAOf,CAAG,CAChC,CACF,CAAC,EAGD,OAAO,eAAeE,EAAY0H,EAAkB,CAClD,aAAc,GACd,KAAO,CAzFb,IAAAT,EAAAW,EA0FQ,OAAOA,GAAAX,EAAAO,GAAA,KAAA,OAAAA,EAAQ,SAAR,KAAA,OAAAP,EAAgB,cAAcpG,KAA9B,KAAA+G,EAAwC,IACjD,EAEA,IAAM9H,GAAQ,CACT,CAAC0H,GAAU,CAACA,EAAO,QACtBA,EAAO,OAAO,gBAAgB3G,EAAOf,CAAG,CAC1C,CACF,CAAC,EAGD,OAAO,eAAeE,EAAY2H,EAAqB,CACrD,aAAc,GACd,KAAO,CAtGb,IAAAV,EAuGQ,OAAOA,EAAAO,GAAA,KAAA,OAAAA,EAAQ,SAAS3G,GAAO,WAAxB,KAAAoG,EAAoC,EAC7C,EAEA,IAAMnH,GAAQ,CACZ,GAAG,CAAC0H,EAAQ,OAEZ,IAAM9B,EAAU8B,GAAA,KAAA,OAAAA,EAAQ,SAAS3G,GAC9B,CAAC6E,IAEJA,EAAQ,SAAW5F,EACrB,CACF,CAAC,CACH,OACOqG,EADP,CAEE,QAAQ,MAAMA,CAAE,CAClB,CACF,EAEa0B,GAAkB,CAAC7H,EAAyBwH,IAAoB,CAE3E,IAAMvB,EAA4D,CAChE,CAAC,QAAS,YAAa,eAAgB,kBAAmB,CAAC,EAC3D,CAAC,SAAU,aAAc,gBAAiB,mBAAoB,CAAC,EAC/D,CAAC,SAAU,aAAc,gBAAiB,mBAAoB,CAAC,CACjE,EAEA,QAAQtF,EAAE,EAAGA,EAAE6G,EAAO,SAAS,OAAQ7G,IACrCsF,EAAc,KAAK,CAAC,QAAStF,EAAI,IAAM,YAAaA,EAAI,IAAM,UAAWA,EAAI,SAAW,UAAWA,EAAI,YAAcA,CAAC,CAAC,EAGzH,QAAUqC,KAAQiD,EAChBsB,GAAevH,EACbwH,EACAxE,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,EACP,CAEJ,EAEa8E,GAAsB,CAACrD,EAAsBsD,EAAiB/H,IAA4B,CAjJvG,IAAAiH,EAmJE,IAAMe,GAAaf,EAAAjH,EAAW,aAAX,KAAA,OAAAiH,EAAuB,cAAc,YAAA,EACxD,GAAIe,EAEJ,QAAUtC,KAAWjB,EAChBsD,EACDC,EAAW,QAAQtC,EAAQ,QAAQ,EAGnCsC,EAAW,OAAOtC,EAAQ,QAAQ,CAGxC,ECxGauC,GAAc,EACdC,GAAc,IACdC,GAAgB,EAChBC,GAA2B,OAE3BC,GAAS,CAACrI,EAAyBwE,EAAsB8D,IAAsE,CAE1I,IAAM7D,EAAW6D,EAAa,IAAItF,GAAQA,EAAK,EAAE,EAC7CuF,EAA+C,KAC/CC,EAA+B,KAC/BrM,EAAyB,KACzBsM,EAAyC,KAEzC7J,EAAMqJ,GACNpJ,EAAMqJ,GACN1I,EACA0D,EACAG,EAAwB3E,GACxBgK,GAAgBP,GAChB5E,GAAc,GACdC,EAAc,GAEdmF,EAAkB,GAClBC,EAAsB,EACtBC,EAAsB,EAAA,EAEtBC,EAAgB,GAEhBC,EACAC,EAEA7H,EAAW,GACX8H,GAAmB,GACnBC,GAAqCd,GAEnCe,GAAqC,CAAC,EAItCC,GAAejJ,GAAoB,CACpCgB,IAEChB,EAAI,gBACNA,EAAI,eAAe,EAGrBkJ,GAAclJ,CAAG,EAEjB,OAAO,iBAAiB,YAAakJ,EAAa,EAClD,OAAO,iBAAiB,UAAWC,EAAS,EAE5CpJ,GAAmBF,EAAYG,CAAG,EACpC,EAEMmJ,GAAanJ,GAAoB,CAClCgB,IAEH4H,EAAqB,OACrBC,EAAoB,OAEpB,OAAO,oBAAoB,YAAaK,EAAa,EACrD,OAAO,oBAAoB,UAAWA,EAAa,EAEhDH,IACD1E,EAAQ,UAAU,IAAejG,EAAc,EAGjD6B,GAAiBJ,EAAYG,CAAG,EAClC,EAEMoJ,GAAmB,CAAC1H,EAAsBf,IAAoB,CAClE,GAAG2D,EAAS,QAAU,EAAG,OAGzB,GAAGA,EAAS,SAAW,EACrB,OAAGA,EAAS,GAAG,UAAU5C,CAAO,GAAKqH,IACnC1E,EAAQ,UAAU,OAAkBjG,EAAc,EAG7CkG,EAAS,GAGlB,IAAM+E,EAAmBC,GAAmB5H,CAAO,EAEnD,GAAGiH,EAAc,CAEf,IAAIY,EAAe5I,EACb6I,GAAcC,GAAeF,CAAY,EAC5CC,KAAgB,SACjBD,EAAepK,GAAYoK,EAAcC,EAAW,GAGnDH,GACDT,EAAqBW,EACrBV,EAAoB,EAEjBE,IACD1E,EAAQ,UAAU,OAAkBjG,EAAc,GAIjDwK,IAAuB,SACxBC,EAAoBU,EAAeX,EACnCA,EAAqBW,EAG3B,CAEA,GAAG,CAACG,GAAehI,CAAO,GAAK,CAAC2H,EAAiB,CAG/C,QAAU9D,KAAWjB,EACnB,GAAIiB,EAAQ,UAAU7D,CAAO,EAE7B,OAAGqH,IACD1E,EAAQ,UAAU,OAAkBjG,EAAc,EAG7CmH,EAIT,QAAUA,KAAWjB,EACnB,GAAG8D,IAAoB7C,EAAS,OAAOA,CAE3C,CAGA,IAAIoE,EAAc,EAAA,EACdC,EAAqB,KAEzB,QAAUrE,KAAWjB,EAAS,CAC5B,IAAMuF,GAAW,KAAK,IAAIlJ,EAAU4E,EAAQ,OAAO,EAChDsE,GAAWF,IACZA,EAAcE,GACdD,EAAqBrE,EAEzB,CAEA,OAAOqE,CACT,EAEME,GAA0B,IACvBxF,EAAS,UAAUiB,GAAW6C,IAAoB7C,GAAW,CAACA,EAAQ,QAAQ,EAGjF2D,GAAiBlJ,GAAiC,CAGtD,IAAIW,EAEJ,GAAGuC,IAAkB5E,EAAS,CAC5B,GAAM,CAAE,OAAQyL,EAAW,IAAKC,CAAO,EAAI3F,EAAQ,sBAAsB,EACnE4F,EAASjK,EAAI,KAAK,QAAQ,OAAO,IAAM,GAAMA,EAAmB,QAAWA,EAAmB,QAAQ,GAAG,QAE/GW,EADY,KAAK,IAAI,KAAK,IAAI,EAAGsJ,EAASD,CAAM,EAAGD,CAAS,EAC3C,IAAOA,CAC1B,KACI,CACF,GAAM,CAAE,MAAOG,EAAU,KAAMC,CAAQ,EAAI9F,EAAQ,sBAAsB,EACnE+F,EAASpK,EAAI,KAAK,QAAQ,OAAO,IAAM,GAAMA,EAAmB,QAAWA,EAAmB,QAAQ,GAAG,QAE/GW,EADa,KAAK,IAAI,KAAK,IAAI,EAAGyJ,EAASD,CAAO,EAAGD,CAAQ,EAC3C,IAAOA,CAC3B,CASA,IAPG9G,IAAeC,KAChB1C,EAAU,IAAMA,GAGlByH,EAAkBgB,GAAiBpJ,EAAI,OAAuBW,CAAO,EAGlEgI,GAAiBrE,EAAS,OAAS,GAAKuE,IAAsB,OAAU,CAEzE,IAAMwB,EAAe/F,EAAS,GACxBgG,EAAchG,EAASA,EAAS,OAAS,GAEzCiG,EAAsBF,EAAa,QAAUxB,EAAoB,EACjE2B,GAAqBF,EAAY,QAAUzB,EAAoB,IACrE,GAAG0B,GAAuBC,GAAoB,OAE9C,QAAQhK,GAAE,EAAGA,GAAE8D,EAAS,OAAQ9D,KAC9BiK,GAAajK,GAAG8D,EAAS9D,IAAG,QAAUqI,CAAiB,EAGzD,MACF,CAEA,IAAM6B,EAAaZ,GAAwB,EACxCY,IAAe,KAChBD,GAAaC,EAAY/J,CAAO,EAChCyH,GAAA,MAAAA,EAAiB,SAAS,MAAA,EAE9B,EAEMuC,GAAqB3K,GAAoB,CAC7C,GAAIgB,GACF,SAAS,gBAAkBnB,IAC3BuI,GAAA,KAAA,OAAAA,EAAiB,UAAU,OAE7BpI,EAAI,gBAAgB,EACpBA,EAAI,eAAe,EAEnB,IAAM4K,EAAY5K,EAAI,OAAS,EACzB6K,EAAgBzH,IAAeC,EAC/ByH,EAAeF,EAAY,CAACC,EAAgBA,EAE5CH,EAAaZ,GAAwB,EACxCY,IAAe,KAEfI,EACDC,GAAOL,EAAYpG,EAASoG,GAAY,OAAO,EAG/CM,GAAON,EAAYpG,EAASoG,GAAY,OAAO,EAEnD,EAIM9J,GAAaqK,GAAyB,CACvCjK,GAAY8H,KAEZ5F,IAAkB5E,EAChB+E,EAEDoH,GAAaQ,EAAc,GAAG,EAI9BR,GAAaQ,EAAc,CAAC,EAI3B7H,GAED4H,GAAOC,EAAc3G,EAAS2G,GAAc,OAAO,EAInDF,GAAOE,EAAc3G,EAAS2G,GAAc,OAAO,EAGzD,EAEMpK,GAAcoK,GAAyB,CACxCjK,GAAY8H,KAEZ5F,IAAkB5E,EAChB+E,EAEDoH,GAAaQ,EAAc,CAAC,EAI5BR,GAAaQ,EAAc,GAAG,EAI7B7H,GAED2H,GAAOE,EAAc3G,EAAS2G,GAAc,OAAO,EAInDD,GAAOC,EAAc3G,EAAS2G,GAAc,OAAO,EAGzD,EAEMnK,GAAWmK,GAAyB,CACrCjK,GAAY8H,KAEZ5F,IAAkB5E,EAChB+E,EAED2H,GAAOC,EAAc3G,EAAS2G,GAAc,OAAO,EAInDF,GAAOE,EAAc3G,EAAS2G,GAAc,OAAO,EAIlD7H,GAEDqH,GAAaQ,EAAc,GAAG,EAI9BR,GAAaQ,EAAc,CAAC,EAGlC,EAEMlK,GAAakK,GAAyB,CACvCjK,GAAY8H,KAEZ5F,IAAkB5E,EAChB+E,EAED0H,GAAOE,EAAc3G,EAAS2G,GAAc,OAAO,EAInDD,GAAOC,EAAc3G,EAAS2G,GAAc,OAAO,EAIlD7H,GAEDqH,GAAaQ,EAAc,CAAC,EAI5BR,GAAaQ,EAAc,GAAG,EAGpC,EAIMvB,GAAkBhI,GACfA,EAAQ,UAAU,SAAS,OAAO,EAGrC4H,GAAsB5H,GACnBA,EAAQ,UAAU,SAAS,YAAY,EAG1CqJ,GAAS,CAACrK,EAAeQ,IAAiC,CAC9D,GAAGA,IAAa,OAAW,OAE3B,IAAIsI,EAAcC,GAAevI,CAAQ,EAEtCsI,GAAe,OAChBA,EAAc,GAGhBtI,GAAYsI,EAETtI,EAAW,IACZA,EAAW,GAGbuJ,GAAa/J,EAAOQ,CAAQ,CAC9B,EAEM8J,GAAS,CAACtK,EAAeQ,IAAiC,CAE9D,GAAGA,IAAa,OAAW,OAE3B,IAAIsI,EAAcC,GAAevI,CAAQ,EAEtCsI,GAAe,OAChBA,EAAc,GAGhBtI,GAAYsI,EAETtI,EAAW,MACZA,EAAW,KAGbuJ,GAAa/J,EAAOQ,CAAQ,CAC9B,EAEMgK,GAAgB,IAAM,CAEvB,CAAC5C,GACJA,EAAe,OAAO,CACpB,SAAU6C,GAAY,EACtB,OAAQC,GAAU,EAClB,UAAWC,GAAmB,EAE9B,IAAKC,GAAc,EACnB,IAAKC,GAAc,EAEnB,KAAMC,GAAQ,EACd,KAAMC,GAAQ,EACd,MAAOC,GAAS,EAChB,KAAMC,GAAQ,EAEd,QAASC,GAAO,EAChB,QAASC,GAAO,EAEhB,YAAaC,GAAc,EAC3B,YAAaC,GAAc,EAE3B,gBAAiBC,GAAkB,EACnC,oBAAqBC,GAAuB,EAC5C,oBAAqBC,GAAuB,EAC5C,cAAeC,GAAuB,EAEtC,SAAUC,GAAW,EACrB,iBAAkBC,GAAmB,CACvC,CAAC,CACH,EAEMnG,GAAuB,IAAM,CACjCgF,GAAc,CAChB,EAIMoB,GAAsBrB,GAAyB,CACnD,GAAG,EAAAzC,GAAmBlE,EAAS,QAAU,GAAK5F,IAAQD,GAEtD,GAAGwM,IAAiB,EAAE,CAGpB,IAAMsB,EAAY7D,EAAsB,KAAOhK,EAAMD,GACrD,OAAO,KAAK,IAAI,EAAG6F,EAAS2G,EAAe,GAAG,QAAUsB,CAAS,CACnE,KACI,CAGF,IAAMA,EAAY9D,EAAsB,KAAO/J,EAAMD,GACrD,OAAO,KAAK,IAAI6F,EAAS2G,EAAe,GAAG,QAAUsB,EAAW,GAAG,CACrE,CACF,EAEMC,GAAuBvB,GAAyB,CACpD,GAAG,EAAAzC,GAAmBlE,EAAS,QAAU,GAAK5F,IAAQD,GAEtD,GAAGwM,IAAiB3G,EAAS,OAAS,EAAE,CAGtC,IAAMiI,EAAY7D,EAAsB,KAAOhK,EAAMD,GACrD,OAAO,KAAK,IAAI6F,EAAS2G,EAAe,GAAG,QAAUsB,EAAW,GAAG,CACrE,KACI,CAEF,IAAMA,EAAY9D,EAAsB,KAAO/J,EAAMD,GACrD,OAAO,KAAK,IAAI,EAAG6F,EAAS2G,EAAe,GAAG,QAAUsB,CAAS,CACnE,CACF,EAMM9C,GAAkBvI,GAAqB,CAE3C,IAAIuL,EAEJ,GAAG,OAAOpN,GAAS,WAAW,CAE5B,IAAMqN,EAAelO,EAAa,EAAG,IAAKC,EAAKC,EAAKwC,CAAQ,EAG5DuL,EAAQpN,EAAKqN,EAAcxL,CAAQ,CACrC,MAGEuL,EAAQpN,EAIV,GAAGN,EAAS0N,CAAK,EAAE,CAYjB,IAAME,EAAOjO,EAAMD,EACnB,OAAAgO,EAAQE,IAAS,EAAI,EAAMF,EAAmB,IAAME,EAE7CF,CACT,CAGF,EAEMG,GAAgB1L,GAAiC,CACrD,GAAGA,IAAa,OAAW,OAE3B,IAAMvB,EAAMnB,EAAa,EAAG,IAAKC,EAAKC,EAAKwC,CAAQ,EAEnD,OAAG6B,IAAS,OACHA,EAAK,KAAK,MAAMpD,CAAG,GAGrBL,GAAiBK,EAAK4I,EAAK,CACpC,EAEMqD,GAAS,IAEV7I,IAAS,OACHA,EAAKtE,GAGPA,EAGHoN,GAAS,IAEV9I,IAAS,OACHA,EAAKrE,GAGPA,EAGH+M,GAAU,IACPpM,EAGHwN,GAAiBnM,GAAkB,CAvjB3C,IAAAoG,EAwjBI,OAAGpG,GAAS,GAAK8H,EAAwBoD,GAAO,GACzC9E,EAAA8F,GAAatI,EAAS5D,EAAQ,GAAG,OAAO,IAAxC,KAAAoG,EAA6C,EACtD,EAEMgG,GAAiBpM,GAAkB,CA5jB3C,IAAAoG,EA6jBI,OAAGxC,EAAS,QAAU,GACpB5D,GAAS4D,EAAS,OAAS,GAC3BkE,EAAwBqD,GAAO,GAE1B/E,EAAA8F,GAAatI,EAAS5D,EAAQ,GAAG,OAAO,IAAxC,KAAAoG,EAA6C,EACtD,EAEMqE,GAAc,IACX7G,EAAS,IAAIiB,GAAWA,EAAQ,OAAO,EAG1C6F,GAAY,IACT9G,EAAS,IAAIiB,GAAWqH,GAAarH,EAAQ,OAAO,CAAC,EAGxD8F,GAAqB,IAClB/G,EAAS,IAAIiB,GAAWA,EAAQ,QAAQ,EAG3C+F,GAAgB,IACb7M,EAGH8M,GAAgB,IACb7M,EAGH8M,GAAU,IACPzI,EAGH4I,GAAU,IACPzI,EAGHwI,GAAW,IACRnD,GAGH0D,GAAyB,IACtBxD,EAGHyD,GAAyB,IACtBxD,EAGHqE,GAAgBrM,GACbsI,GAAWtI,GAGdoL,GAAgB,IACb1I,GAGH2I,GAAgB,IACb1I,EAGH+I,GAAa,IACVpL,EAGHqL,GAAqB,IAClBvD,GAGHkD,GAAoB,IACjBxD,EAGH2D,GAAyB,IACtBxD,EAKH8B,GAAe,CAAC/J,EAAeQ,IAAiC,CACpE,GAAGA,IAAa,OAAW,OAG3B,IAAMsI,EAAcC,GAAevI,CAAQ,EAExCsI,IAAgB,SACjBtI,EAAW/B,GAAY+B,EAAUsI,CAAW,GAG9C,IAAMjE,EAAUjB,EAAS5D,GACzB,GAAI6E,EAEJ,CAAAA,EAAQ,eAAerE,EAAUoL,GAAmB5L,CAAK,EAAG8L,GAAoB9L,CAAK,EAAGwC,EAAME,GAAaC,CAAW,EACtHgF,GAAA,MAAAA,EAAW,eAAenF,EAAMoB,EAAS,IAAIiB,GAAWA,EAAQ,OAAO,EAAGnC,GAAaC,CAAAA,EAEvF6H,GAAc,EAEd,QAAU3F,KAAWjB,EAAS,CAC5B,IAAM0I,EAAYJ,GAAarH,EAAQ,OAAO,EAC3CyH,IAAc,SACfzH,EAAQ,QAAQ,gBAAiByH,EAAU,SAAS,CAAC,EACrDzH,EAAQ,QAAQ,iBAAkByH,EAAU,SAAS,CAAC,EAE1D,CAEAC,GAAc,EAEd9M,GAAgBN,EAAYyE,EAAS,IAAIiB,GAAWqH,GAAarH,EAAQ,OAAO,CAAC,CAAC,CAAA,CACpF,EAEM2H,GAAkB,IAAM,CAC5B,QAAQ1M,EAAE,EAAGA,EAAE8D,EAAS,OAAQ9D,IAC9BiK,GAAajK,EAAG8D,EAAS9D,GAAG,OAAO,CAEvC,EAMM2M,GAAY,CAACC,EAA0CC,IAA6C,CAExG5O,EAAMsE,IAAS,OAAY,EAAI9D,EAAUmO,EAAMtF,EAAW,EAC1DpJ,EAAMqE,IAAS,OAAYA,EAAK,OAAS,EAAI9D,EAAUoO,EAAMtF,EAAW,EAGxEuF,GAAO7O,CAAG,EACV8O,GAAO7O,CAAG,CACZ,EAEMuO,GAAgB,IAAM,CA7rB9B,IAAAnG,EAAAW,EA8rBI,QAAQjH,EAAE,EAAGA,EAAE8D,EAAS,OAAQ9D,IAAI,CAClC,IAAM+E,EAAUjB,EAAS9D,GACzB+E,EAAQ,QAAQ,kBAAkBuB,EAAA+F,GAAcrM,CAAC,IAAf,KAAAsG,EAAoB,IAAI,SAAS,CAAC,EACpEvB,EAAQ,QAAQ,kBAAkBkC,EAAAqF,GAActM,CAAC,IAAf,KAAAiH,EAAoB,IAAI,SAAS,CAAC,CACtE,CACF,EAEM6F,GAAUF,GAA6C,CAC3D3O,EAAMQ,EAAUmO,EAAMtF,EAAW,EAE9BrJ,EAAMC,IACPA,EAAMD,EAAMsJ,IAGdmF,GAAgB,CAClB,EAEMK,GAAUF,GAA6C,CAE3D3O,EAAMO,EAAUoO,EAAMtF,EAAW,EAE9BrJ,EAAMD,IACPC,EAAMD,EAAMsJ,IAGdmF,GAAgB,CAClB,EAEMM,GAAapN,GAA4C,CAM7DoI,EAAkB,GAElB,QAAQhI,EAAE,EAAGA,EAAEJ,EAAO,OAAQI,IAC5BiN,GAASrN,EAAOI,GAAIA,CAAC,EAGvBgI,EAAkB,GAGlB,QAAQhI,EAAE,EAAGA,EAAEJ,EAAO,OAAQI,IAC5BiN,GAASrN,EAAOI,GAAIA,CAAC,CAEzB,EAEMiN,GAAW,CAACC,EAA0ChN,IAAkB,CAE5E,IAAIf,EAEDoD,IAAS,QAEVpD,EAA6B+N,GAAS,KAAQ,EAAI5K,GAAqB4K,EAAM3K,CAAI,EAC9EpD,IAAQ,KACTA,EAAM,KAIRA,EAAMV,EAAUyO,EAAMjP,CAAG,EAEtBkB,EAAMlB,IACPkB,EAAMlB,GAGLkB,EAAMjB,IACPiB,EAAMjB,IAKV,IAAMiC,EAAUnC,EAAaC,EAAKC,EAAK,EAAG,IAAKiB,CAAG,EAElD8K,GAAa/J,EAAOC,CAAO,CAC7B,EAEMgN,GAAWlB,GAA0B,CACzC,GAAGA,GAAU,KAA4B,CACvCpN,EAAO,OACP,MACF,CAEA,GAAI,OAAOoN,GAAU,WAAY,CAC/BpN,EAAOoN,EACPS,GAAgB,EAChB,MACF,CAEA,GAAGnO,EAAS0N,CAAK,EAAE,CACjBpN,EAAOJ,EAAUwN,EAAO,CAAC,EAEzB,IAAME,EAAO,KAAK,IAAIjO,EAAMD,CAAG,EAC3BY,EAAOsN,IACTtN,EAAO,QAGT6N,GAAgB,EAChB,MACF,CAEA7N,EAAO,MACT,EAEMuO,GAAsBC,GAA8B,CACxDrF,EAAkBqF,EAClBX,GAAgB,CAClB,EAEMY,GAA0BC,GAAiC,EAC5D,CAAChP,EAASgP,CAAoB,GAAKA,EAAuB,KAC3DA,EAAuB,GAEzBtF,EAAsBsF,CACxB,EAEMC,GAA0BC,GAAiC,EAC5D,CAAClP,EAASkP,CAAoB,GAAKA,EAAuB,KAC3DA,EAAuB,EAAA,GAEzBvF,EAAsBuF,CACxB,EAEMjM,GAAeC,GAAuB,CAC1CjB,EAAWiB,EACXoC,EAAQ,UAAU,OAAO,WAAYrD,CAAQ,EAE1CA,EACDqD,EAAQ,aAAa,gBAAiB,MAAM,EAGxCA,EAAQ,aAAa,eAAe,GACtCA,EAAQ,gBAAgB,eAAe,CAG7C,EAEM6J,GAAuBjM,GAAuB,CAClD6G,GAAmB7G,CACrB,EAEMkM,GAAWC,GAA0C,CAEzD,GAAGA,GAAU,KAA4B,CACvCrL,EAAO,OACP,MACF,CAGA,GADAA,EAAOR,GAAU6L,CAAe,EAC7BrL,IAAS,QAAaA,EAAK,QAAU,EAAE,CACxCA,EAAO,OACP,MACF,CAEAuK,GAAO,CAAC,EACRC,GAAOxK,EAAK,OAAS,CAAC,EAEnB1D,IAAS,QACVsO,GAAQ,CAAC,CAEb,EAEMU,GAAWhN,GAAqC,CAh2BxD,IAAAyF,EAk2BO,OAAOzF,GAAU,SAClB6B,EAAO7B,EAAM,KAAK,EAAE,YAAY,IAAe/C,EAAoBA,EAAoBC,GAGvF2E,EAAgB3E,GAGlB,IAAM+P,GAAOxH,EAAAjH,EAAW,aAAX,KAAA,OAAAiH,EAAuB,cAAc,mBAAA,EAClD,GAAG,CAACwH,EAAM,OACVA,EAAK,UAAY,yBAA0BpL,IAE3CgK,GAAgB,EAGhB,IAAMqB,EAAOrL,IAAkB5E,EAAW,WAAa,aACvD,QAAUiH,KAAWjB,EACnBiB,EAAQ,QAAQ,mBAAoBgJ,CAAI,CAE5C,EAEMC,GAAkBlN,GAA0B,CAChD8B,GAAc9B,EAEXgD,EAAS,OAAS,GACnBqD,GAAoBrD,EAAUlB,GAAavD,CAAU,EAGvDqN,GAAgB,EAChBhC,GAAc,CAChB,EAEMuD,GAAkBlN,GAA0B,CAChD8B,EAAc9B,EAEX+C,EAAS,OAAS,GACnBqD,GAAoBrD,EAAUjB,EAAaxD,CAAU,EAGvDqN,GAAgB,EAChBhC,GAAc,CAChB,EAEMwD,GAAYC,GAAmB,CACnCpG,GAAQtJ,EAAU0P,EAAQ3G,EAAa,EAEpCO,GAAQ,IACTA,GAAQP,IAGVkD,GAAc,CAChB,EAEM0D,GAAqBC,GAAyD,CAC/EA,GAAoB,MAErBA,EAAgB,SAAS,EAAE,KAAK,EAAE,YAAY,IAAM,SACpD9F,GAAiB,OACjB1E,EAAQ,MAAM,eAA4BjG,EAAc,EACxDiG,EAAQ,UAAU,OAAkBjG,EAAc,IAGlD2K,GAAiB8F,EAAgB,SAAS,EAC1CxK,EAAQ,MAAM,YAAyBjG,GAAgB2K,EAAc,EACrE1E,EAAQ,UAAU,IAAejG,EAAc,EAEnD,EAEM0Q,GAAe,CAACpO,EAAeqO,IAAmC,CAEtE,IAAMxJ,EAAUjB,EAAS5D,GACtB,CAAC6E,IAEJA,EAAQ,QAAQ,aAAcwJ,CAAU,EACxC/F,GAAWtI,GAASqO,EACtB,EAEMC,GAAoBC,GAA4B,CAGpD,GAFArG,EAAqB,OAElBtE,EAAS,QAAU,EAAE,CACtBqE,EAAgB,GAChBtE,EAAQ,UAAU,OAAkB/H,EAAa,EACjD,MACF,CAEAqM,EAAgBsG,EAChB5K,EAAQ,UAAU,OAAkB/H,GAAeqM,CAAa,CAClE,EAIMuG,GAAe,IAAM,CACzBlN,GAAYtC,GAAWG,EAAW,aAA4B7C,EAAQ,CAAC,CAAC,EACxE8L,GAAmBpJ,GAAWG,EAAW,aAA4B5C,CAAgB,CAAC,EAGtF,IAAMkS,EAAe1L,GAAqB5D,EAAY,6BAA+BF,GAC5ED,GAAWC,CAAG,CACtB,EAED,QAAUkD,KAAQsM,EAAa,CAC7B,IAAMlE,EAAepI,EAAK,GACvB,CAACyB,EAAS2G,KACb3G,EAAS2G,GAAc,SAAWpI,EAAK,GACzC,CACF,EAEMuM,GAAiB,IAAM,CAE3B,IAAMC,EAAiB5L,GAAqB5D,EAAY,sBAAsB,EAE9E,QAAUgD,KAAQwM,EAAe,CAC/B,IAAM3O,EAAQmC,EAAK,GACnBiM,GAAapO,EAAOmC,EAAK,EAAY,CACvC,CACF,EAGMyM,GAAchP,GAAuC,CACzD,IAAMiP,EAAMjL,EAAS,OACf4C,EAAiB5C,EAASiL,EAAM,GAAG,SAEnCpI,EAAcD,EAAe,UAAU,EAAI,EACjDA,EAAe,MAAMC,CAAW,EAChC,IAAMqI,EAAa/O,GAAQZ,EAAYsH,EAAaoI,CAAG,EAEvD,OAAAC,EAAW,aAAa5O,GAAWC,GAAYC,GAASC,EAAS,EACjEuD,EAAS,KAAKkL,CAAU,EAExB/B,GAASnN,EAAOiP,CAAG,EACnBrC,GAAgB,EAChBhC,GAAc,EAEPqE,CACT,EAGME,GAAgB,IAAM,CAC1B,IAAMF,EAAMjL,EAAS,OACfiB,EAAUjB,EAASiL,EAAM,GAC/B,OAAIhK,GAEJA,EAAQ,QAAQ,EAChBjB,EAAS,IAAI,EAEVA,EAAS,QAAU,GACpB0K,GAAiB,EAAK,EAGxB9B,GAAgB,EAChBhC,GAAc,EAEPqE,EAAM,GAZO,EAatB,EAEA,OAAC,IAAM,CA7/BT,IAAAzI,EAAAW,EAggCI,QAAUlC,KAAWjB,EACnBiB,EAAQ,aAAa3E,GAAWC,GAAYC,GAASC,EAAS,EAIhE,IAAMkC,GAAQ6D,EAAAjH,EAAW,aAAX,KAAA,OAAAiH,EAAuB,cAAc,aAAA,EAChD7D,IACDoF,EAAYrF,GAAUC,CAAK,GAI7BoL,GAAQxO,EAAW,aAA4BjD,CAAI,CAAC,EACpD4R,GAAe9O,GAAWG,EAAW,aAA4B/C,EAAW,CAAC,CAAC,EAC9E2R,GAAe/O,GAAWG,EAAW,aAA4B9C,EAAW,CAAC,CAAC,EAE9EoQ,GAAUtN,EAAW,aAA4BrD,CAAG,EAAGqD,EAAW,aAA4BpD,CAAG,CAAC,EAClGkR,GAAQ9N,EAAW,aAA4BnD,CAAI,CAAC,EACpDyR,GAAQtO,EAAW,aAA4BtD,CAAI,CAAC,EAGpDiR,GAAUrF,EAAa,IAAItF,GAAQA,EAAK,EAAE,CAAC,EAG3C+K,GAAmBlO,GAAWG,EAAW,aAA4B1D,CAAe,CAAC,CAAC,EACtF2R,GAAuB7O,EAAUY,EAAW,aAA4BzD,CAAmB,EAAG,CAAC,CAAC,EAChG4R,GAAuB/O,EAAUY,EAAW,aAA4BxD,CAAmB,EAAG,EAAA,CAAQ,CAAC,EACvG2S,GAAiBtP,GAAWG,EAAW,aAA4BvD,CAAa,CAAC,CAAC,EAGlFoS,GAASzP,EAAUY,EAAW,aAA4BlD,CAAK,EAAGqL,EAAa,CAAC,EAChFkH,GAAa,EACbE,GAAe,EAGfpT,EAASoI,GAAOvE,EAAYwE,EAASC,CAAQ,EAC7CsK,IAAkBnH,EAAA5H,EAAW,aAA4BzB,CAAc,IAArD,KAAAqJ,EAA0DQ,EAAwB,EAGpG5D,EAAQ,iBAAiB,YAAa4E,EAAW,EACjD5E,EAAQ,iBAAiB,UAAW8E,EAAS,EAC7C9E,EAAQ,iBAAiB,YAAa6E,EAAa,EACnD7E,EAAQ,iBAAiB,aAAc6E,EAAa,EACpD,SAAS,iBAAiB,QAASyB,GAAmB,CAAE,QAAS,EAAM,CAAC,EAGxErC,EAAiBrC,GACfpG,EACAqG,GACA,CACE,UAAAsH,GACA,OAAAF,GACA,OAAAC,GACA,QAAAI,GACA,mBAAAC,GACA,uBAAAE,GACA,uBAAAE,GACA,YAAAhM,GACA,QAAAqM,GACA,eAAAG,GACA,eAAAC,GACA,SAAAC,GACA,oBAAAR,GACA,iBAAAc,GACA,QAAAb,EACF,EACA,CACE,YAAAhD,GACA,UAAAC,GACA,mBAAAC,GAEA,OAAQC,GACR,OAAQC,GAER,QAAAE,GACA,QAAAD,GACA,QAAAG,GACA,SAAAD,GAEA,WAAYE,GACZ,WAAYC,GAEZ,cAAAC,GACA,cAAAC,GAEA,WAAAK,GACA,mBAAAC,GAEA,kBAAAL,GACA,uBAAAG,GACA,uBAAAF,GACA,uBAAAC,EACF,CACF,EACA5D,EAAe,KAAK,CACtB,GAAG,EAgBI,CACL,IAAI,UAAW,CACb,OAAOhE,CACT,EAEA,IAAI,QAAS,CACX,OAAOtI,CACT,EAEA,IAAI,gBAAiB,CACnB,OAAOsM,CACT,EAEA,IAAI,KAAM,CACR,OAAOsD,GAAO,CAChB,EAEA,IAAI,KAAM,CACR,OAAOC,GAAO,CAChB,EAEA,IAAI,MAAO,CACT,OAAOJ,GAAQ,CACjB,EAEA,IAAI,iBAAkB,CACpB,OAAOO,GAAkB,CAC3B,EAEA,IAAI,gBAAgB6B,EAAkB,CACpCD,GAAmBC,CAAgB,CACrC,EAEA,IAAI,qBAAsB,CACxB,OAAO5B,GAAuB,CAChC,EAEA,IAAI,oBAAoB8B,EAAsB,CAC5CD,GAAuBC,CAAoB,CAC7C,EAEA,IAAI,qBAAsB,CACxB,OAAO7B,GAAuB,CAChC,EAEA,IAAI,oBAAoB+B,EAAsB,CAC5CD,GAAuBC,CAAoB,CAC7C,EAEA,IAAI,UAAW,CACb,OAAO7B,GAAW,CACpB,EAEA,IAAI,SAASnK,EAAW,CACtBD,GAAYC,CAAS,CACvB,EAEA,IAAI,MAAO,CACT,OAAOuJ,GAAQ,CACjB,EAEA,IAAI,MAAO,CACT,OAAOG,GAAQ,CACjB,EAEA,IAAI,KAAKtK,EAAO,CACdgN,GAAQhN,CAAK,CACf,EAEA,IAAI,aAAc,CAChB,OAAOyK,GAAc,CACvB,EAEA,IAAI,YAAYxK,EAAc,CAC5BkN,GAAelN,CAAY,CAC7B,EAEA,IAAI,aAAc,CAChB,OAAOyK,GAAc,CACvB,EAEA,IAAI,YAAYxK,EAAc,CAC5BkN,GAAelN,CAAY,CAC7B,EAEA,IAAI,OAAQ,CACV,OAAOmK,GAAS,CAClB,EAEA,IAAI,MAAMiD,EAAQ,CAChBD,GAASC,CAAM,CACjB,EAEA,IAAI,gBAAiB,CACnB,OAAO5F,EACT,EAEA,IAAI,eAAe8F,EAAiB,CAClCD,GAAkBC,CAAe,CACnC,EAEA,IAAI,kBAAmB,CACrB,OAAOxC,GAAmB,CAC5B,EAEA,IAAI,iBAAiBqD,EAAkB,CACrCxB,GAAoBwB,CAAiB,CACvC,EAEA,IAAI,eAAgB,CAClB,OAAOvD,GAAuB,CAChC,EAEA,IAAI,cAAc8C,EAAgB,CAChCD,GAAiBC,CAAc,CACjC,EAEA,OAAA3B,GACA,OAAAC,GACA,SAAAE,GACA,QAAAE,GACA,QAAAQ,GACA,aAAAvB,GACA,aAAAkC,GACA,aAAA/B,GAEA,WAAAuC,GACA,cAAAG,GAEA,QA/Ic,IAAM,CACpBpL,EAAQ,oBAAoB,YAAa4E,EAAW,EACpD5E,EAAQ,oBAAoB,UAAW8E,EAAS,EAChD9E,EAAQ,oBAAoB,YAAa6E,EAAa,EACtD7E,EAAQ,oBAAoB,aAAc6E,EAAa,EACvD,SAAS,oBAAoB,QAASyB,EAAiB,EAEvD,QAAUpF,KAAWjB,EACnBiB,EAAQ,QAAQ,EAGlB+C,GAAA,MAAAA,EAAgB,QAAA,CAClB,CAoIA,CACF,EC5uCaqH,GAAoB,CAACtI,EAAiB1B,EAAkBiK,IAAqB,CAIxF,IAAMC,EAAQ1L,GAAoB,KAAK,CAAC,CAAC2L,EAAkBpJ,EAAWqJ,EAAcC,CAAM,IACjFtJ,EAAU,QAAQ,IAAK,EAAE,IAAMf,EAAS,QAAQ,OAAQ,EAAE,CAClE,EAED,GAAGkK,GAASxI,EAAO,OAAO,CACxB,GAAM,CAACyI,EAAkBpJ,EAAWqJ,EAAcC,CAAM,EAAIH,EAEtD1N,EAAMwD,EAAS,QAAQ,MAAO,EAAE,EAAE,KAAK,EACvCjF,EAASyB,IAAQ,IAAMA,IAAQ,KAAOA,IAAQ,IAAO,EAAKlD,EAAUkD,EAAK,CAAC,EAAI,EAEpFkF,EAAO,OAAO,SAASyI,EAAkBF,EAAUlP,CAAK,EACxD,MACF,CAOA,OALG2G,GAAUA,EAAO,gBAClBA,EAAO,eAAe,aAAa1B,EAAUiK,CAAQ,EAI/CjK,QAEcnJ,EAAK,CACvB6K,EAAO,OAAOuI,CAAQ,EACtB,KACF,MAEoBnT,EAAK,CACvB4K,EAAO,OAAOuI,CAAQ,EACtB,KACF,MAEoBlT,EAAM,CACxB2K,EAAO,QAAQuI,CAAQ,EACvB,KACF,MAEoBzT,EAAiB,CACnCkL,EAAO,gBAAkB3H,GAAWkQ,CAAQ,EAC5C,KACF,MAEoBxT,EAAqB,CACvCiL,EAAO,oBAAsBpI,EAAU2Q,EAAU,CAAC,EAClD,KACF,MAEoBtT,EAAe,CACjC+K,EAAO,cAAgB3H,GAAWkQ,CAAQ,EAC1C,KACF,MAEoBvT,EAAqB,CACvCgL,EAAO,oBAAsBpI,EAAU2Q,EAAU,EAAA,CAAQ,EACzD,KACF,MAEoB5S,GAAU,CAC5BqK,EAAO,SAAW3H,GAAWkQ,CAAQ,EACrC,KACF,MAEoB3S,EAAkB,CACpCoK,EAAO,iBAAmB3H,GAAWkQ,CAAQ,EAC7C,KACF,MAEoBrT,EAAM,CACxB8K,EAAO,QAAQuI,CAAQ,EACvB,KACF,MAEoBhT,EAAM,CACxByK,EAAO,KAAOuI,EACd,KACF,MAEoB9S,GAAa,CAC/BuK,EAAO,YAAc3H,GAAWkQ,CAAQ,EACxC,KACF,MAEoB7S,GAAa,CAC/BsK,EAAO,YAAc3H,GAAWkQ,CAAQ,EACxC,KACF,MAEoBjT,EAAO,CACzB0K,EAAO,MAAQpI,EAAU2Q,EAAU5H,EAAa,EAChD,KACF,MAEoBnL,EAAO,CACtBwK,EAAO,SACRA,EAAO,OAAO,MAAQuI,GAExB,KACF,MAEoBxR,EAAgB,CAClCiJ,EAAO,eAAiBuI,EACxB,KACF,EAIF,IAAIK,EAA0B,KAkB9B,GAhBG,kBAAkB,KAAKtK,CAAQ,IAChCsK,EAAW,SAGV,6BAA6B,KAAKtK,CAAQ,IAC3CsK,EAAW,oBAGV,uBAAuB,KAAKtK,CAAQ,IACrCsK,EAAW,cAGV,0BAA0B,KAAKtK,CAAQ,IACxCsK,EAAW,iBAGV,CAACA,EAAU,OAEd,IAAM9N,EAAMwD,EAAS,QAAQ,MAAO,EAAE,EAAE,KAAK,EACvCjF,EAASyB,IAAQ,IAAMA,IAAQ,KAAOA,IAAQ,IAAO,EAAKlD,EAAUkD,EAAK,CAAC,EAAI,EAEpF,OAAQ8N,OAED,QAAS,CACZ5I,EAAO,SAASuI,EAAUlP,CAAK,EAC/B,KACF,KAEK,mBAAoB,CACvB,IAAM6E,EAAU8B,GAAA,KAAA,OAAAA,EAAQ,SAAS3G,GACjC,GAAG,CAAC6E,EAAS,OAEbA,EAAQ,SAAW7F,GAAWkQ,CAAQ,EACtC,KACF,KAEK,aAAc,CACjBvI,EAAO,aAAa3G,EAAOkP,CAAQ,EACnC,KACF,KAEK,gBAAiB,CACjBvI,EAAO,QACRA,EAAO,OAAO,gBAAgB3G,EAAOkP,CAAQ,EAE/C,KACF,EAEJ,ECtJMM,GAAN,cAA4B,WAAY,CA4LtC,aAAc,CACZ,MAAM,EA3LRC,EAAA,KAAO,QAAA,EAEPA,EAAA,KAAQ,mBAAoC,CAAC,CAAA,EAE7CA,EAAA,KAAQ,YAAqC,IAAA,EAyL3C,KAAK,aAAa,CAChB,KAAM,MACR,CAAC,CACH,CAxLA,IAAW,KAAK1D,EAAc,CACzB,KAAK,QACN,KAAK,OAAO,QAAQA,CAAK,CAE7B,CAEA,IAAW,MAAO,CA9BpB,IAAA3F,EA+BI,OAAOA,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,IACtB,CAEA,IAAW,SAAS7E,EAAoB,CACnC,KAAK,SACN,KAAK,OAAO,SAAWA,EAE3B,CAEA,IAAW,UAAW,CAxCxB,IAAA6E,EAAAW,EAyCI,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,WAAb,KAAAW,EAAyB,EAClC,CAEA,IAAW,KAAK2G,EAAc,CA5ChC,IAAAtH,GA6CIA,EAAA,KAAK,SAAL,MAAAA,EAAa,QAAQsH,CAAAA,CACvB,CAEA,IAAW,MAAO,CAhDpB,IAAAtH,EAiDI,OAAOA,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,IACtB,CAEA,IAAW,IAAIsG,EAA0C,CApD3D,IAAAtG,GAqDIA,EAAA,KAAK,SAAL,MAAAA,EAAa,OAAOsG,CAAAA,CACtB,CAEA,IAAW,KAAM,CAxDnB,IAAAtG,EAyDI,OAAOA,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,GACtB,CAEA,IAAW,IAAIuG,EAA0C,CA5D3D,IAAAvG,GA6DIA,EAAA,KAAK,SAAL,MAAAA,EAAa,OAAOuG,CAAAA,CACtB,CAEA,IAAW,KAAM,CAhEnB,IAAAvG,EAiEI,OAAOA,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,GACtB,CAEA,IAAW,MAAM6H,EAAgB,CAC5B,CAAC,KAAK,SACT,KAAK,OAAO,MAAQA,EACtB,CAEA,IAAW,OAAQ,CAzErB,IAAA7H,EAAAW,EA0EI,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,QAAb,KAAAW,EAAsBO,EAC/B,CAEA,IAAW,KAAK3G,EAA2B,CACtC,CAAC,KAAK,SACT,KAAK,OAAO,KAAOA,GAAA,KAAAA,EAAkB9C,GACvC,CAEA,IAAW,MAAO,CAlFpB,IAAAuI,EAmFI,QAAOA,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,OAAiBvI,EACvC,CAEA,IAAW,gBAAgBsP,EAA2B,CACjD,CAAC,KAAK,SACT,KAAK,OAAO,gBAAkBA,EAChC,CAEA,IAAW,iBAAkB,CA3F/B,IAAA/G,EAAAW,EA4FI,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,kBAAb,KAAAW,EAAgC,EACzC,CAEA,IAAW,oBAAoBsG,EAA8B,CACxD,CAAC,KAAK,SACT,KAAK,OAAO,oBAAsBA,EACpC,CAEA,IAAW,qBAAsB,CApGnC,IAAAjH,EAAAW,EAqGI,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,sBAAb,KAAAW,EAAoC,CAC7C,CAEA,IAAW,oBAAoBwG,EAA8B,CACxD,CAAC,KAAK,SACT,KAAK,OAAO,oBAAsBA,EACpC,CAEA,IAAW,qBAAsB,CA7GnC,IAAAnH,EAAAW,EA8GI,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,sBAAb,KAAAW,EAAoC,EAAA,CAC7C,CAEA,IAAW,MAAM2I,EAAuB,CACnC,CAAC,KAAK,QAAU,CAAC,KAAK,OAAO,SAChC,KAAK,OAAO,OAAO,MAAQA,EAC7B,CAEA,IAAW,OAAQ,CAtHrB,IAAAtJ,EAAAW,EAAA4I,EAuHI,OAAOA,GAAA5I,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,SAAb,KAAA,OAAAW,EAAqB,QAArB,KAAA4I,EAA8B,IACvC,CAEA,IAAW,IAAIC,EAAe,CACzB,CAAC,KAAK,SACT,KAAK,OAAO,YAAcA,EAC5B,CAEA,IAAW,KAAM,CA/HnB,IAAAxJ,EAAAW,EAgII,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,cAAb,KAAAW,EAA4B,EACrC,CAEA,IAAW,IAAI8I,EAAe,CACzB,CAAC,KAAK,SACT,KAAK,OAAO,YAAcA,EAC5B,CAEA,IAAW,KAAM,CAxInB,IAAAzJ,EAAAW,EAyII,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,cAAb,KAAAW,EAA4B,EACrC,CAEA,IAAW,iBAAiBiI,EAA4B,CACnD,CAAC,KAAK,SACT,KAAK,OAAO,iBAAmBA,EACjC,CAEA,IAAW,kBAAmB,CAjJhC,IAAA5I,EAAAW,EAkJI,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,mBAAb,KAAAW,EAAiC,EAC1C,CAEA,IAAW,eAAeoH,EAA+C,CACpE,CAAC,KAAK,SACT,KAAK,OAAO,eAAiBA,EAC/B,CAEA,IAAW,gBAAiB,CA1J9B,IAAA/H,EA2JI,OAAOA,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,cACtB,CAEA,IAAW,eAAe,CA9J5B,IAAAA,EAAAW,EA+JI,OAAOA,GAAAX,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,gBAAb,KAAAW,EAA8B,EACvC,CAEA,IAAW,cAAcwH,EAAqD,CACzE,KAAK,SACN,KAAK,OAAO,cAAgBvP,GAAWuP,CAAc,EAEzD,CAEA,IAAW,iBAAkB,CAC3B,OAAO,KAAK,gBACd,CAEO,WAAW3O,EAAoC,CA5KxD,IAAAwG,EA6KI,GAAG,CAAC,KAAK,OAAQ,OAEjB,IAAMpG,GAAQoG,EAAA,KAAK,SAAL,KAAA,OAAAA,EAAa,WAAWxG,CAAAA,EAEtC8G,GAAe,KACb,KAAK,OACL1G,EACA,QAASA,EAAQ,IACjB,YAAaA,EAAQ,IACrB,eAAgBA,EAAQ,IACxB,UAAWA,EAAQ,WACrB,CACF,CAEO,eAAgB,CA3LzB,IAAAoG,EA4LO,CAAC,KAAK,SACTA,EAAA,KAAK,SAAL,MAAAA,EAAa,cAAA,CACf,CAEO,OAAO0J,EAAa,CACzB,GAAG,CAAC,KAAK,WAAY,OAErB,IAAMC,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,YAAcD,EACpB,KAAK,WAAW,YAAYC,CAAK,CACnC,CAeA,mBAAoB,CArNtB,IAAA3J,EAAAW,EAsNI,GAAI,CAAC,KAAK,WAAY,OAGtB,KAAK,iBAAmBzD,GAAmB,IAAI,EAC/C,KAAK,WAAW,UAAYjI,EAAa2U,EAAQ,KAAK,gBAAgB,EAGtE,IAAM5Q,GAAWgH,EAAA,KAAK,aAAL,KAAA,OAAAA,EAAiB,cAAc,UAAA,EAChD,GAAG,CAAChH,EAAU,OAGd,IAAMuE,GAAUoD,EAAA,KAAK,aAAL,KAAA,OAAAA,EAAiB,eAAe,cAAA,EAChD,GAAG,CAACpD,EAAS,OAEb,IAAMC,EAAW2C,GAAa,KAAMnH,CAAQ,EAC5C,KAAK,OAASoI,GAAO,KAAM7D,EAASC,CAAQ,EAE5CoD,GAAgB,KAAM,KAAK,MAAM,EAEjC,KAAK,UAAY,IAAI,iBAAkBiJ,GAAc,CACnDA,EAAU,QAASC,GAAa,CA1OtC,IAAA9J,EA2OQ,GAAI,CAAC,KAAK,QAAU8J,EAAS,OAAS,aAAc,OAEpD,IAAMjL,EAAWiL,EAAS,cACvB,CAACjL,GAEJgK,GAAkB,KAAK,OAAQhK,GAAUmB,EAAA,KAAK,aAAanB,CAAQ,IAA1B,KAAAmB,EAA+B,EAAE,CAC5E,CAAC,CACH,CAAC,EAED,KAAK,UAAU,QAAQ,KAAM,CAC3B,WAAY,EACd,CAAC,CACH,CAKA,sBAAuB,CAClB,KAAK,WACN,KAAK,UAAU,WAAW,EAGxB,KAAK,QAET,KAAK,OAAO,QAAQ,CACtB,CACF,EAEO+J,GAAQX,GC5Pf,OAAO,cAAgBW,GAGlB,eAAe,IAAI,uBAAuB,GAC7C,eAAe,OAAO,wBAAyBA,EAAa,EAGzD,eAAe,IAAI,iBAAiB,GACvC,eAAe,OAAO,kBAAmB,cAAcA,EAAa,CAAC,CAAC,CAAA,GAAA,ECdjE,IAAMC,GAAuB,IAAM,CACxC,GAAG,EAAC,SAAS,cAAc,kCAAkC,EAE7D,IAAG,CACD,IAAMC,EAAW,SAAS,eAAe,UAAU,EAC7CC,EAAU,SAAS,eAAe,SAAS,EAEjDD,EAAS,iBAAiB,SAAWE,GAAqB,CACxDD,EAAQ,YAAcC,EAAI,OAAO,KACnC,CAAC,EAEDF,EAAS,MAAQ,EACnB,OACMG,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CAE/B,GAAG,CACD,IAAMC,EAAW,SAAS,eAAe,UAAU,EAC7CC,EAAU,SAAS,eAAe,SAAS,EAC3CC,EAAU,SAAS,eAAe,SAAS,EAEjDF,EAAS,iBAAiB,SAAWF,GAAqB,CACxDG,EAAQ,YAAcH,EAAI,OAAO,MACjCI,EAAQ,YAAcJ,EAAI,OAAO,MACnC,CAAC,EAEDE,EAAS,OAAS,GAClBA,EAAS,OAAS,EACpB,OACMD,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,EACjC,EAEaI,GAA4B,IAAM,CAC7C,GAAG,EAAC,SAAS,cAAc,uCAAuC,EAElE,GAAG,CACD,IAAMH,EAAW,SAAS,eAAe,UAAU,EAElDA,EAAkC,WAAa,WAElD,OACMD,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEaK,GAA8B,IAAM,CAC/C,GAAG,EAAC,SAAS,cAAc,yCAAyC,EAEpE,GAAG,CACD,IAAMC,EAAU,SAAS,eAAe,UAAU,EAClD,GAAG,CAACA,EAAS,OAEb,IAAMC,EAAO,SAAS,eAAe,mBAAmB,EACxD,GAAG,CAACA,EAAM,OAEVA,EAAK,iBAAiB,QAAS,IAAM,CACnC,IAAMC,EAAWF,EACjBE,EAAQ,eAAiB,CAACA,EAAQ,cAEpC,CAAC,CACH,OACMR,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEaS,GAAiB,IAAM,CAClC,GAAG,EAAC,SAAS,cAAc,2BAA2B,EAEtD,GAAG,CACD,IAAMH,EAAU,SAAS,eAAe,UAAU,EAC5CI,EAAa,SAAS,eAAe,iBAAiB,EACtDC,EAAY,SAAS,eAAe,uBAAuB,EAEjED,EAAW,iBAAiB,QAAS,IAAM,CACzCJ,EAAQ,IAAM,KACdA,EAAQ,IAAM,GAChB,CAAC,EAEDK,EAAU,iBAAiB,QAAS,IAAM,CACxCL,EAAQ,IAAM,KACdA,EAAQ,IAAM,GAChB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEaY,GAAgB,IAAM,CACjC,GAAG,EAAC,SAAS,cAAc,4BAA4B,EAEvD,GAAG,CACD,IAAMN,EAAU,SAAS,eAAe,UAAU,EAC5CI,EAAa,SAAS,eAAe,cAAc,EACnDC,EAAY,SAAS,eAAe,gBAAgB,EAE1DD,EAAW,iBAAiB,QAAS,IAAM,CACzCJ,EAAQ,MAAQ,CAClB,CAAC,EAEDK,EAAU,iBAAiB,QAAS,IAAM,CACxCL,EAAQ,MAAQ,CAClB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEaa,GAAe,IAAM,CAChC,GAAG,EAAC,SAAS,cAAc,wBAAwB,EAEnD,GAAG,CACD,IAAMP,EAAU,SAAS,eAAe,UAAU,EAC5CI,EAAa,SAAS,eAAe,UAAU,EAC/CC,EAAY,SAAS,eAAe,YAAY,EAMtDD,EAAW,iBAAiB,QAAS,IAAM,CACzCJ,EAAQ,KAAO,EACjB,CAAC,EAEDK,EAAU,iBAAiB,QAAS,IAAM,CACxCL,EAAQ,KAAO,MACjB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEac,GAAwB,IAAM,CACzC,GAAG,EAAC,SAAS,cAAc,mCAAmC,EAG9D,GAAG,CACD,IAAMR,EAAU,SAAS,eAAe,UAAU,EAClDA,EAAQ,KAAO,CAACS,EAAyBC,IAChCD,EAAS,GAAK,EAAI,EAE7B,OACMf,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEaiB,GAAe,IAAM,CAChC,GAAG,EAAC,SAAS,cAAc,wBAAwB,EAGnD,GAAG,CACD,IAAMX,EAAU,SAAS,eAAe,UAAU,EAC5CI,EAAa,SAAS,eAAe,UAAU,EAC/CC,EAAY,SAAS,eAAe,YAAY,EAEtDD,EAAW,iBAAiB,QAAS,IAAM,CACzCJ,EAAQ,KAAO,CAAC,MAAO,QAAS,OAAQ,SAAU,OAAQ,QAAS,SAAU,QAAS,OAAO,CAC/F,CAAC,EAEDK,EAAU,iBAAiB,QAAS,IAAM,CACxCL,EAAQ,KAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAG,CAC5D,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEakB,GAAiC,IAAM,CAClD,GAAG,EAAC,SAAS,cAAc,8CAA8C,EAEzE,GAAG,CACD,IAAMZ,EAAU,SAAS,eAAe,UAAU,EAC5CI,EAAa,SAAS,eAAe,YAAY,EACjDC,EAAY,SAAS,eAAe,cAAc,EAExDD,EAAW,iBAAiB,QAAS,IAAM,CACzCJ,EAAQ,YAAc,QACtBA,EAAQ,aAAe,SACvBA,EAAQ,aAAe,EAEvBA,EAAQ,aAAe,SACvBA,EAAQ,cAAgB,SACxBA,EAAQ,cAAgB,EAExBA,EAAQ,cAAgB,SACxBA,EAAQ,eAAiB,SACzBA,EAAQ,eAAiB,MAC3B,CAAC,EAEDK,EAAU,iBAAiB,QAAS,IAAM,CACxCL,EAAQ,YAAc,QACtBA,EAAQ,aAAe,UACvBA,EAAQ,aAAe,OAEvBA,EAAQ,aAAe,OACvBA,EAAQ,cAAgB,OACxBA,EAAQ,cAAgB,OAExBA,EAAQ,cAAgB,OACxBA,EAAQ,eAAiB,OACzBA,EAAQ,eAAiB,MAC3B,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEamB,GAAgB,IAAM,CACjC,GAAG,EAAC,SAAS,cAAc,0BAA0B,EAErD,GAAG,CACD,IAAMb,EAAU,SAAS,eAAe,WAAW,EAC7CI,EAAa,SAAS,eAAe,WAAW,EAChDC,EAAY,SAAS,eAAe,aAAa,EAEvDD,EAAW,iBAAiB,QAAS,IAAM,CACzCJ,EAAQ,SAAW,UACnBA,EAAQ,cAAgB,OACxBA,EAAQ,aAAe,OAEvBA,EAAQ,WAAa,MACrBA,EAAQ,WAAa,QACrBA,EAAQ,WAAa,OAErBA,EAAQ,eAAiB,OACzBA,EAAQ,eAAiB,OACzBA,EAAQ,eAAiB,MAC3B,CAAC,EAEDK,EAAU,iBAAiB,QAAS,IAAM,CACxCL,EAAQ,SAAW,OACnBA,EAAQ,cAAgB,OACxBA,EAAQ,aAAe,OAEvBA,EAAQ,WAAa,OACrBA,EAAQ,WAAa,OACrBA,EAAQ,WAAa,OAErBA,EAAQ,eAAiB,OACzBA,EAAQ,eAAiB,OACzBA,EAAQ,eAAiB,MAC3B,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEaoB,GAAiB,IAAM,CAClC,GAAG,EAAC,SAAS,cAAc,0BAA0B,EAErD,GAAG,CACD,IAAMd,EAAU,SAAS,eAAe,WAAW,EAC7Ce,EAAQ,SAAS,eAAe,UAAU,EAC1CC,EAAS,SAAS,eAAe,WAAW,EAC5CC,EAAU,SAAS,eAAe,YAAY,EAC9CC,EAAW,SAAS,eAAe,aAAa,EAEtDH,EAAM,iBAAiB,QAAS,IAAM,CACpCf,EAAQ,MAAQ,MAClB,CAAC,EAEDgB,EAAO,iBAAiB,QAAS,IAAM,CACrChB,EAAQ,MAAQ,OAClB,CAAC,EAEDiB,EAAQ,iBAAiB,QAAS,IAAM,CACtCjB,EAAQ,MAAQ,QAClB,CAAC,EAEDkB,EAAS,iBAAiB,QAAS,IAAM,CACvClB,EAAQ,MAAQ,SAClB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEayB,GAAwB,IAAM,CACzC,GAAG,EAAC,SAAS,cAAc,kCAAkC,EAE7D,GAAG,CACD,IAAMnB,EAAU,SAAS,eAAe,WAAW,EAC7CoB,EAAY,SAAS,eAAe,oBAAoB,EACxDC,EAAQ,SAAS,eAAe,gBAAgB,EAChDC,EAAW,SAAS,eAAe,mBAAmB,EACtDC,EAAa,SAAS,eAAe,qBAAqB,EAC1DC,EAAiB,SAAS,eAAe,yBAAyB,EAClEC,EAAc,SAAS,eAAe,uBAAuB,EAEnEL,EAAU,iBAAiB,QAAS,IAAM,CACxCpB,EAAQ,aAAe,UACzB,CAAC,EAEDqB,EAAM,iBAAiB,QAAS,IAAM,CACpCrB,EAAQ,aAAe,MACzB,CAAC,EAEDsB,EAAS,iBAAiB,QAAS,IAAM,CACvCtB,EAAQ,aAAe,SACzB,CAAC,EAEDuB,EAAW,iBAAiB,QAAS,IAAM,CACzCvB,EAAQ,aAAe,WACzB,CAAC,EAEDwB,EAAe,iBAAiB,QAAS,IAAM,CAC7CxB,EAAQ,aAAe,eACzB,CAAC,EAEDyB,EAAY,iBAAiB,QAAS,IAAM,CAC1CzB,EAAQ,aAAe,aACzB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEagC,GAA0B,IAAM,CAC3C,GAAG,EAAC,SAAS,cAAc,6BAA6B,EAExD,GAAG,CACD,IAAM1B,EAAU,SAAS,eAAe,WAAW,EAC7C2B,EAAe,SAAS,eAAe,kBAAkB,EACzDC,EAAW,SAAS,eAAe,uBAAuB,EAC1DC,EAAS,SAAS,eAAe,qBAAqB,EAE5DF,EAAa,iBAAiB,QAAS,IAAM,CAC3C3B,EAAQ,eAAiB,IAC3B,CAAC,EAED4B,EAAS,iBAAiB,QAAS,IAAM,CACvC5B,EAAQ,eAAiB,EAC3B,CAAC,EAED6B,EAAO,iBAAiB,QAAS,IAAM,CACrC7B,EAAQ,eAAiB,MAC3B,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEaoC,GAAmB,IAAM,CACpC,GAAG,EAAC,SAAS,cAAc,4BAA4B,EAEvD,IAAG,CACD,IAAM9B,EAAU,SAAS,eAAe,WAAW,EAC7C+B,EAAY,SAAS,eAAe,cAAc,EAClDC,EAAc,SAAS,eAAe,gBAAgB,EAE5DD,EAAU,iBAAiB,QAAS,IAAM,CACxC/B,EAAQ,KAAO,UACjB,CAAC,EAEDgC,EAAY,iBAAiB,QAAS,IAAM,CAC1ChC,EAAQ,KAAO,YACjB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CAE/B,GAAG,CACD,IAAMM,EAAU,SAAS,eAAe,aAAa,EAC/CiC,EAAO,SAAS,eAAe,SAAS,EACxCC,EAAO,SAAS,eAAe,SAAS,EAE9CD,EAAK,iBAAiB,QAAS,IAAM,CACnCjC,EAAQ,IAAM,EAChB,CAAC,EAEDkC,EAAK,iBAAiB,QAAS,IAAM,CACnClC,EAAQ,IAAM,EAChB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,EACjC,EAEayC,GAAsB,IAAM,CACvC,GAAG,EAAC,SAAS,cAAc,uBAAuB,EAElD,GAAG,CACD,IAAMnC,EAAU,SAAS,eAAe,WAAW,EAC7CoC,EAAO,SAAS,eAAe,SAAS,EACxCC,EAAO,SAAS,eAAe,SAAS,EAE9CD,EAAK,iBAAiB,QAAS,IAAM,CACnCpC,EAAQ,IAAM,EAChB,CAAC,EAEDqC,EAAK,iBAAiB,QAAS,IAAM,CACnCrC,EAAQ,IAAM,EAChB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEa4C,GAAmB,IAAM,CACpC,GAAG,EAAC,SAAS,cAAc,4BAA4B,EAEvD,IAAG,CACD,IAAMtC,EAAU,SAAS,eAAe,WAAW,EACtC,SAAS,eAAe,qBAAqB,EAErD,iBAAiB,QAAS,IAAM,CACnCA,EAAQ,SAAW,CAACA,EAAQ,QAC9B,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CAE/B,GAAG,CACD,IAAMM,EAAU,SAAS,eAAe,WAAW,EACtC,SAAS,eAAe,8BAA8B,EAE9D,iBAAiB,QAAS,IAAM,CACnCA,EAAQ,iBAAmB,CAACA,EAAQ,iBACpCA,EAAQ,iBAAmB,CAACA,EAAQ,gBACtC,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,EACjC,EAEa6C,GAAwB,IAAM,CACzC,GAAG,EAAC,SAAS,cAAc,kCAAkC,EAE7D,GAAG,CACD,IAAMvC,EAAU,SAAS,eAAe,WAAW,EAC7CC,EAAO,SAAS,eAAe,2BAA2B,EAEhEA,EAAK,iBAAiB,QAAS,IAAM,CACnCD,EAAQ,cAAgB,CAACA,EAAQ,cACjCC,EAAK,YAAcD,EAAQ,cAAgB,yBAA2B,uBACxE,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEa8C,GAA0B,IAAM,CAC3C,GAAG,EAAC,SAAS,cAAc,oCAAoC,EAE/D,GAAG,CACD,IAAMxC,EAAU,SAAS,eAAe,WAAW,EAC7CC,EAAO,SAAS,eAAe,6BAA6B,EAElEA,EAAK,iBAAiB,QAAS,IAAM,CACnCD,EAAQ,gBAAkB,CAACA,EAAQ,gBACnCC,EAAK,YAAcD,EAAQ,gBAAkB,2BAA6B,yBAC5E,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEa+C,GAAqB,IAAM,CACtC,GAAG,EAAC,SAAS,cAAc,+BAA+B,EAE1D,GAAG,CACD,IAAMzC,EAAU,SAAS,eAAe,WAAW,EACnDA,EAAQ,iBAAiB,YAAa,IAAM,CAEvCA,EAAQ,SAAW,QAAaA,EAAQ,OAAS,KAClDA,EAAQ,OAAS,IAGhBA,EAAQ,SAAW,QAAaA,EAAQ,OAAS,KAClDA,EAAQ,OAAS,GAErB,CAAC,CACH,OACMN,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,EAEagD,GAAmC,IAAM,CACpD,GAAG,EAAC,SAAS,cAAc,8CAA8C,EAEzE,GAAG,CACD,IAAMC,EAAQ,SAAS,eAAe,cAAc,EAC9CC,EAAQ,SAAS,eAAe,qBAAqB,EAE3DA,EAAM,iBAAiB,QAAS,IAAM,CAEpC,IAAMC,EAASF,EAAM,cAAc,iBAAiB,EACpD,GAAGE,EACDA,EAAO,OAAO,EACdD,EAAM,YAAc,oBAElB,CACF,IAAM5C,EAAU,SAAS,cAAc,iBAAiB,EACxDA,EAAQ,aAAa,MAAO,MAAM,EAClCA,EAAQ,aAAa,MAAO,KAAK,EACjCA,EAAQ,aAAa,SAAU,IAAI,EACnCA,EAAQ,aAAa,SAAU,IAAI,EACnCA,EAAQ,aAAa,kBAAmB,MAAM,EAC9C2C,EAAM,QAAQ3C,CAAO,EACrB4C,EAAM,YAAc,eACtB,CACF,CAAC,CACH,OACMlD,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CAEjC,EAEaoD,GAAwB,IAAM,CACzC,GAAG,EAAC,SAAS,cAAc,kCAAkC,EAE7D,GAAG,CACD,IAAM9C,EAAU,SAAS,eAAe,yBAAyB,EAC9C,SAAS,eAAe,2BAA2B,EAE3D,iBAAiB,QAAS,IAAM,CACzC,IAAME,EAAUF,EAChBE,EAAQ,cAAgB,CAACA,EAAQ,aACnC,CAAC,CACH,OACMR,EAAN,CAAY,QAAQ,MAAMA,CAAE,CAAG,CACjC,ECxdA,IAAMqD,GAAiB,IAAM,CAC3B,IAAMC,EAAO,SAAS,eAAe,iBAAiB,EACtD,GAAG,CAACA,EAAM,OAEVA,EAAK,iBAAiB,QAAUC,GAAQ,CACtCA,EAAI,gBAAgB,EACpB,SAAS,KAAK,UAAU,OAAO,oBAAoB,CACrD,CAAC,EAED,SAAS,KAAK,iBAAiB,QAAS,IAAM,CAC5C,SAAS,KAAK,UAAU,OAAO,oBAAoB,CACrD,CAAC,EAED,IAAMC,EAAY,SAAS,eAAe,WAAW,EACrD,GAAG,CAACA,EAAW,OAEfA,EAAU,iBAAiB,QAAUD,GAAQ,CAC3CA,EAAI,gBAAgB,CACtB,CAAC,EAED,IAAME,EAAS,SAAS,eAAe,uBAAuB,EAC3D,CAACA,GAEJA,EAAO,iBAAiB,QAAS,IAAM,CACrC,SAAS,KAAK,UAAU,OAAO,oBAAoB,CACrD,CAAC,CACH,EAEMC,GAAO,IAAM,CACjBL,GAAe,EACfM,GAAqB,EACrBC,GAA0B,EAC1BC,GAA4B,EAC5BC,GAAe,EACfC,GAAc,EACdC,GAAa,EACbC,GAAsB,EACtBC,GAAa,EACbC,GAA+B,EAC/BC,GAAc,EACdC,GAAe,EACfC,GAAsB,EACtBC,GAAwB,EACxBC,GAAiB,EACjBC,GAAoB,EACpBC,GAAiB,EACjBC,GAAsB,EACtBC,GAAwB,EACxBC,GAAmB,EACnBC,GAAiC,EACjCC,GAAsB,CACxB,EAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDrB,GAAK,CACP,CAAC",
  "names": ["P", "i", "v", "t", "y", "f", "b", "o", "s", "e", "n", "l", "d", "u", "I", "g", "m", "L", "p", "r", "a", "c", "T", "v", "i", "B", "C", "L", "P", "o", "n", "p", "l", "s", "r", "u", "c", "b", "A", "t", "e", "T", "S", "m", "f", "a", "M", "y", "E", "h", "I", "g", "x", "d", "O", "s", "i", "t", "e", "r", "c", "S", "d", "m", "g", "p", "u", "n", "o", "a", "l", "f", "E", "K", "n", "p", "o", "E", "L", "A", "O", "G", "W", "k", "d", "c", "v", "x", "P", "I", "m", "b", "i", "T", "N", "q", "e", "t", "H", "u", "r", "a", "y", "s", "g", "l", "h", "f", "w", "j", "C", "z", "U", "D", "M", "B", "F", "R", "X", "J", "V", "s", "t", "f", "o", "e", "u", "r", "n", "i", "l", "a", "g", "b", "main_html_default", "styles", "linkHrefs", "linkHref", "PointersOverlap", "PointersMinDistance", "PointersMaxDistance", "RangeDragging", "Data", "Min", "Max", "Step", "Round", "Type", "Theme", "RightToLeft", "BottomToTop", "Disabled", "KeyboardDisabled", "SliderWidth", "SliderHeight", "SliderRadius", "SliderBg", "SliderBgHover", "SliderBgFill", "PointerWidth", "PointerHeight", "PointerRadius", "PointerBg", "PointerBgHover", "PointerBgFocus", "PointerShadow", "PointerShadowHover", "PointerShadowFocus", "PointerBorder", "PointerBorderHover", "PointerBorderFocus", "AnimateOnClick", "CSSLinks", "Vertical", "Horizontal", "convertRange", "min", "max", "a", "b", "x", "temp", "isNumber", "input", "getNumber", "defaultValue", "roundToStep", "num", "step", "setDecimalPlaces", "decimalPlaces", "coeff", "__pow", "getBoolean", "val", "sendPointerClickedEvent", "$component", "$pointer", "sendMouseDownEvent", "evt", "sendMouseUpEvent", "sendOnKeyDownEvent", "sendChangeEvent", "values", "transformed", "value", "detail", "i", "Pointer", "index", "percent", "arrowLeft", "arrowRight", "arrowUp", "arrowDown", "disabled", "updatePosition", "_percent", "_leftWall", "_rightWall", "_type", "_rightToLeft", "_bottomToTop", "percentPos", "isClicked", "$target", "setCallbacks", "_arrowLeft", "_arrowRight", "_arrowUp", "_arrowDown", "setDisabled", "_disabled", "setAttr", "key", "getAttr", "pointerKeyDown", "pointerClicked", "parseData", "dataString", "parts", "list", "allValuesAreNumbers", "part", "item", "findValueIndexInData", "data", "PanelFill", "$fill", "type", "percents", "rightToLeft", "bottomToTop", "oneOnly", "first", "last", "getAttributesByRegex", "regex", "parseValue", "map", "attr", "valueProp", "keyNum", "getExternalCSSList", "str", "cssList", "stylePropertiesList", "Styles", "$slider", "pointers", "theme", "pointerShapes", "stylesMap", "removeClassesStartWith", "prefix", "$element", "classList", "className", "removeClasses", "$pointers", "setTheme", "updatePointerShapes", "setPointerShape", "setPointerShapes", "getKey", "setStyle", "pointer", "$styleHolder", "getStyle", "cssVariableName", "attrName", "apiProperty", "cssVariableValue", "apiProperties", "propName", "ex", "PluginsManager", "requestUpdatePlugins", "setters", "getters", "plugins", "update", "plugin", "destroy", "onAttrChange", "_attrName", "_newValue", "defineSettersGetters", "initStyles", "_a", "$style", "pluginFunc", "initPointers", "$latestPointer", "$newPointer", "initPointerAPI", "slider", "ariaLabelProp", "pointerShapeProp", "pointerDisabledProp", "_b", "initPointerAPIs", "changePointersOrder", "isDesc", "$container", "MIN_DEFAULT", "MAX_DEFAULT", "ROUND_DEFAULT", "ANIMATE_ON_CLICK_DEFAULT", "Slider", "pointersList", "selectedPointer", "panelFill", "pluginsManager", "round", "pointersOverlap", "pointersMinDistance", "pointersMaxDistance", "rangeDragging", "rangeDraggingStart", "rangeDraggingDiff", "keyboardDisabled", "animateOnClick", "ariaLabels", "onMouseDown", "onValueChange", "onMouseUp", "getActivePointer", "panelFillClicked", "isPanelFillClicked", "_dragPercent", "stepPercent", "getStepPercent", "isPanelClicked", "minDistance", "minDistancePointer", "distance", "getSelectedPointerIndex", "boxHeight", "boxTop", "mouseY", "boxWidth", "boxLeft", "mouseX", "firstPointer", "lastPointer", "firstSmallerThanMin", "lastGreaterThanMax", "setPositions", "foundIndex", "pointerMouseWheel", "scrollTop", "rightOrBottom", "shouldGoPrev", "goPrev", "goNext", "pointerIndex", "updatePlugins", "getPercents", "getValues", "getPointerElements", "getNumericMin", "getNumericMax", "getData", "getStep", "getRound", "getType", "getMin", "getMax", "isRightToLeft", "isBottomToTop", "isPointersOverlap", "getPointersMinDistance", "getPointersMaxDistance", "isRangeDraggingEnabled", "isDisabled", "isKeyboardDisabled", "getPointerLeftWall", "converted", "getPointerRightWall", "_step", "currentValue", "diff", "getTextValue", "getPointerMin", "getPointerMax", "getAriaLabel", "valueText", "setAriaMinMax", "setAllPositions", "setMinMax", "_min", "_max", "setMin", "setMax", "setValues", "setValue", "_val", "setStep", "setPointersOverlap", "_pointersOverlap", "setPointersMinDistance", "_pointersMinDistance", "setPointersMaxDistance", "_pointersMaxDistance", "setKeyboardDisabled", "setData", "_data", "setType", "$box", "aria", "setRightToLeft", "setBottomToTop", "setRound", "_round", "setAnimateOnClick", "_animateOnClick", "setAriaLabel", "_ariaLabel", "setRangeDragging", "_rangeDragging", "initDisabled", "disabledList", "initAriaLabels", "ariaLabelsList", "addPointer", "len", "newPointer", "removePointer", "_keyboardDisabled", "onAttributeChange", "newValue", "found", "_cssVariableName", "_apiProperty", "_regex", "property", "TCRangeSlider", "__publicField", "_theme", "_c", "_rtl", "_btt", "css", "sheet", "styles_default", "mutations", "mutation", "range_slider_default", "getSetValuesExamples", "$slider1", "$label1", "evt", "ex", "$slider2", "$label2", "$label3", "autoBindingValuesExamples", "autoGeneratedLabelsExamples", "$slider", "$btn", "$plugin", "minMaxExamples", "$changeBtn", "$resetBtn", "roundExamples", "stepExamples", "nonLinearStepExamples", "_value", "_percent", "dataExamples", "withHeightBorderRadiusExamples", "colorExamples", "themesExamples", "$rect", "$glass", "$circle", "$rainbow", "pointerShapesExamples", "$triangle", "$star", "$rhombus", "$trapezoid", "$parallelogram", "$rightArrow", "animationShapesExamples", "$animation2s", "$disable", "$reset", "verticalExamples", "$vertical", "$horizontal", "$btt", "$ttb", "rightToLeftExamples", "$rtl", "$ltr", "disabledExamples", "rangeDraggingExamples", "pointersOverlapExamples", "softLimitsExamples", "createdSliderDynamicallyExamples", "$box1", "$btn1", "$found", "movingTooltipExamples", "initMobileMenu", "$btn", "evt", "$sideMenu", "$close", "init", "getSetValuesExamples", "autoBindingValuesExamples", "autoGeneratedLabelsExamples", "minMaxExamples", "roundExamples", "stepExamples", "nonLinearStepExamples", "dataExamples", "withHeightBorderRadiusExamples", "colorExamples", "themesExamples", "pointerShapesExamples", "animationShapesExamples", "verticalExamples", "rightToLeftExamples", "disabledExamples", "rangeDraggingExamples", "pointersOverlapExamples", "softLimitsExamples", "createdSliderDynamicallyExamples", "movingTooltipExamples"]
}
