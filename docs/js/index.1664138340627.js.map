{
  "version": 3,
  "sources": ["../../dist/plugins/tcrs-binding-labels.min.js", "../../dist/plugins/tcrs-generated-labels.min.js", "../../src/core/templates/main.html.js", "../../src/core/enums/attributes-enum.ts", "../../src/core/enums/type-enum.ts", "../../src/core/domain/math-provider.ts", "../../src/core/domain/events-provider.ts", "../../src/core/ui/pointer.ts", "../../src/core/dal/data-provider.ts", "../../src/core/ui/panel-fill.ts", "../../src/core/enums/css-vars-enum.ts", "../../src/core/domain/common-provider.ts", "../../src/core/ui/styles.ts", "../../src/core/enums/css-classes-enum.ts", "../../src/core/plugins/plugins-manager.ts", "../../src/core/domain/pointers-provider.ts", "../../src/core/ui/slider.ts", "../../src/core/domain/attributes-provider.ts", "../../src/core/app/range-slider.ts", "../../src/core/index.ts", "../../src/docs/client-side/js/examples.ts", "../../src/docs/client-side/js/index.tsx"],
  "sourcesContent": ["/* \nTool Cool Range Slider - Binding Labels Plugin\nVersion: 1.0.0\nDocumentation: https://github.com/toolcool-org/toolcool-range-slider \nLicense: MIT License        \nAuthor: Tool Cool, toolcool.org@gmail.com>                          \n*/\n(()=>{var P=i=>!isNaN(parseFloat(i))&&isFinite(i),v=(i,t)=>P(i)?Number(i):t;window.tcRangeSliderPlugins=window.tcRangeSliderPlugins||[];var y=()=>{let i=null,t=null,f=null,b=[],o=[],s=(e,n)=>{Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{get(){return b[n]},set:l=>{d(n,l)}})},d=(e,n)=>{let l=!!o[e];o[e]&&(o[e].textContent=\"\");let u=document.querySelector(n);o[e]=u!=null?u:void 0,b[e]=n!=null?n:void 0,l||(e===0?(s(\"valueLabel\",e),s(\"value0Label\",e),s(\"value1Label\",e)):s(`value${e+1}Label`,e)),typeof f==\"function\"&&f()},I=()=>{var n,l,u,g,m,L,p;let e=(n=i==null?void 0:i.getValues())!=null?n:[];for(let r=0;r<e.length;r++){let a=\"\";if(r===0?(a=(l=t==null?void 0:t.getAttribute(\"value-label\"))!=null?l:\"\",a||(a=(u=t==null?void 0:t.getAttribute(\"value0-label\"))!=null?u:\"\"),a||(a=(g=t==null?void 0:t.getAttribute(\"value1-label\"))!=null?g:\"\")):a=(m=t==null?void 0:t.getAttribute(`value${r+1}-label`))!=null?m:\"\",!a){o[r]=void 0,b[r]=void 0;continue}let c=document.querySelector(a);if(!c){o[r]=void 0,b[r]=void 0;continue}o[r]=c,b[r]=a,c.textContent=(p=(L=e[r])==null?void 0:L.toString())!=null?p:\"\",r===0?(s(\"valueLabel\",r),s(\"value0Label\",r),s(\"value1Label\",r)):s(`value${r+1}Label`,r)}typeof f==\"function\"&&f()};return{get name(){return\"Binding Labels\"},init:(e,n,l,u)=>{t=e,f=n,i=u,I()},update:e=>{var n;for(let l=0;l<e.values.length;l++){let u=o[l];if(!u)continue;let g=(n=e.values[l])!=null?n:\"\";u.textContent=g.toString()}},onAttrChange:(e,n)=>{if(/^value([0-9]*)-label$/.test(e)&&typeof f==\"function\"){let l=e.replace(/\\D/g,\"\").trim(),u=l===\"\"||l===\"0\"||l===\"1\"?0:v(l,0)-1;d(u,n)}},destroy:()=>{for(let e of o)!e||e.remove()}}};window.tcRangeSliderPlugins.push(y);var T=y;})();\n", "/* \nTool Cool Range Slider - Generated Labels Plugin\nVersion: 1.0.2\nDocumentation: https://github.com/toolcool-org/toolcool-range-slider \nLicense: MIT License        \nAuthor: Tool Cool, toolcool.org@gmail.com>                          \n*/\n(()=>{var p=u=>u==null?!1:typeof u==\"boolean\"?u:u.trim().toLowerCase()===\"true\";window.tcRangeSliderPlugins=window.tcRangeSliderPlugins||[];var I=\"min-label\",P=\"max-label\",S=()=>{let u=null,i=null,t=null,g=!1,n=null,c=null,f=null,d=[],T=()=>{var r;let e=(r=u==null?void 0:u.shadowRoot)==null?void 0:r.querySelector(\".range-slider-box\");n=document.createElement(\"div\"),n.classList.add(\"labels-row\"),e.prepend(n)},b=e=>{let r=document.createElement(\"label\");return r.className=e,r.setAttribute(\"for\",\"range-slider\"),r},h=()=>{var m,l,o;let e=(t==null?void 0:t.isRightToLeft())||(t==null?void 0:t.isBottomToTop());c=b(I),c.textContent=(m=t==null?void 0:t.getTextMin().toString())!=null?m:\"\",f=b(P),f.textContent=(l=t==null?void 0:t.getTextMax().toString())!=null?l:\"\",e?(i==null||i.after(c),i==null||i.before(f)):(i==null||i.before(c),i==null||i.after(f));let r=t==null?void 0:t.getValues();if(!!r)for(let s=0;s<r.length;s++){let a=b(`value${s+1}-label generated-label`);a.textContent=((o=r[s])!=null?o:\"\").toString(),d.push(a),e?n==null||n.prepend(a):n==null||n.append(a)}},L=()=>{for(let e of d)!e||e.remove();c==null||c.remove(),f==null||f.remove(),d=[]},x=e=>{g=e,g?(T(),h()):L()};return{get name(){return\"Generated Labels\"},init:(e,r,m,l)=>{var o;u=e,t=l,i=(o=e.shadowRoot)==null?void 0:o.getElementById(\"range-slider\"),x(p(u.getAttribute(\"generate-labels\")))},update:e=>{var r,m;if(!(!g||!e.values)){for(let l=0;l<e.values.length;l++){let o=e.values[l],s=d[l];if(o===void 0&&!!s){s.remove(),d[l]=void 0;continue}if(o!==void 0&&!s){let a=b(`value${l+1}-label generated-label`);if(a.textContent=(o!=null?o:\"\").toString(),d[l]=a,e.values.length<=0)n==null||n.append(a);else{let E=(t==null?void 0:t.isRightToLeft())||(t==null?void 0:t.isBottomToTop());if(l===0)E?n==null||n.append(a):n==null||n.prepend(a);else{let M=a[l-1];E?M.before(a):M.after(a)}}continue}!s||(s.textContent=(o!=null?o:\"\").toString())}c&&(c.textContent=((r=e.textMin)!=null?r:\"\").toString()),f&&(f.textContent=((m=e.textMax)!=null?m:\"\").toString())}},onAttrChange:(e,r)=>{e===\"generate-labels\"&&x(p(r))},gettersAndSetters:[{name:\"generateLabels\",attributes:{get(){return g!=null?g:!1},set:e=>{x(p(e))}}}],css:`\n    .labels-row{\n      text-align: center;\n      display: flex;\n      justify-content: center;\n    }\n    \n    .type-vertical .labels-row{\n      flex-direction: column;\n      order: 1;\n    }\n    \n    .max-label,\n    .min-label{\n      margin: 0 1rem;\n      width: 2rem;\n      text-align: center;\n      white-space: nowrap;\n    }\n    \n    .generated-label{\n      text-align: center;\n      margin: 0 0.5rem;\n      white-space: nowrap;\n    }\n    `,destroy:L}};window.tcRangeSliderPlugins.push(S);var N=S;})();\n", "export default (styles, linkHrefs) => { return ` ${ linkHrefs && linkHrefs.length > 0 ? linkHrefs.map(linkHref => `<link rel=\"stylesheet\" href=\"${ linkHref }\" />`).join('') : '' } <style> ${styles} </style> <div class=\"range-slider-box\"> <div class=\"row\"> <div id=\"range-slider\" class=\"range-slider\"> <div class=\"container\"> <div class=\"panel\"></div> <div class=\"panel-fill\"></div> <div class=\"container\"> <div class=\"pointer\" tabindex=\"0\" role=\"slider\"> <div class=\"pointer-shape\"></div> </div> </div> </div> </div> </div> </div>`; }; ", "/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const PointersOverlap = 'pointers-overlap';\nexport const PointersMinDistance = 'pointers-min-distance';\nexport const PointersMaxDistance = 'pointers-max-distance';\nexport const RangeDragging = 'range-dragging';\n\nexport const Data = 'data';\nexport const Min = 'min';\nexport const Max = 'max';\nexport const Step = 'step';\nexport const Round = 'round';\nexport const Type = 'type';\nexport const Theme = 'theme';\nexport const RightToLeft = 'rtl';\nexport const BottomToTop = 'btt';\n\nexport const Disabled = 'disabled';\nexport const KeyboardDisabled = 'keyboard-disabled';\n\nexport const SliderWidth = 'slider-width';\nexport const SliderHeight = 'slider-height';\nexport const SliderRadius = 'slider-radius';\n\nexport const SliderBg = 'slider-bg';\nexport const SliderBgHover = 'slider-bg-hover';\nexport const SliderBgFill = 'slider-bg-fill';\n\nexport const PointerWidth = 'pointer-width';\nexport const PointerHeight = 'pointer-height';\nexport const PointerRadius = 'pointer-radius';\nexport const PointerBg = 'pointer-bg';\nexport const PointerBgHover = 'pointer-bg-hover';\nexport const PointerBgFocus = 'pointer-bg-focus';\nexport const PointerShadow = 'pointer-shadow';\nexport const PointerShadowHover = 'pointer-shadow-hover';\nexport const PointerShadowFocus = 'pointer-shadow-focus';\nexport const PointerBorder = 'pointer-border';\nexport const PointerBorderHover = 'pointer-border-hover';\nexport const PointerBorderFocus = 'pointer-border-focus';\n\nexport const AnimateOnClick = 'animate-onclick';\nexport const CSSLinks = 'css-links';\n", "/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const Vertical = 'vertical';\nexport const Horizontal = 'horizontal';\n", "/**\n * scale a range [min,max] to [a,b]\n * f(x) = (b - a) * (x - min) / (max - min) + a\n */\nexport const convertRange = (min: number, max: number, a: number, b: number, x: number) => {\n  const temp = (max - min);\n  if(temp === 0) return a;\n  return ((b - a) * (x - min)) / temp + a;\n};\n\n// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n\n// the below function should receive any\n// eslint-disable-next-line\nexport const getNumber = (input: any, defaultValue: any) : number => {\n  return isNumber(input) ? Number(input) : defaultValue;\n};\n\n/**\n * Round up to the next multiple of X,\n * where X is the step provided by the user.\n */\nexport const roundToStep = (num: number, step: number) => {\n  return step === 0 ? 0 : Math.round(num / step) * step;\n};\n\n/**\n * round to decimal places\n * https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n */\nexport const setDecimalPlaces = (num: number, decimalPlaces = Infinity) => {\n  if (decimalPlaces === Infinity) return num;\n\n  const coeff = 10 ** decimalPlaces;\n  return Math.round(num * coeff) / coeff;\n};\n\nexport const getBoolean = (val: string | null | undefined | boolean) => {\n  if(val === null || val === undefined) return false;\n  if(typeof val === 'boolean') return val;\n  return val.trim().toLowerCase() === 'true';\n};\n", "import { getNumber, isNumber } from './math-provider';\n\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\ninterface IIndexable<T = any> { [key: string]: T }\n\nexport const sendPointerClickedEvent = ($component: HTMLElement, $pointer: HTMLElement) => {\n  $component.dispatchEvent(\n    new CustomEvent('onPointerClicked', {\n      detail: {\n        $pointer: $pointer,\n      },\n    })\n  );\n};\n\nexport const sendMouseDownEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendMouseUpEvent = ($component: HTMLElement, evt: MouseEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onMouseUp', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendOnKeyDownEvent = ($component: HTMLElement, evt: KeyboardEvent) => {\n  $component.dispatchEvent(\n    new CustomEvent('onKeyDown', {\n      detail: {\n        nativeEvent: evt,\n      },\n    })\n  );\n};\n\nexport const sendChangeEvent = (\n  $component: HTMLElement,\n  values: (string | number | undefined)[],\n) => {\n\n  if(!values || values.length <= 0) return;\n\n  const transformed = values.map(value => isNumber(value) ? getNumber(value, value) : value);\n\n  const detail: IIndexable = {\n    values: transformed || [],\n  };\n\n  detail.value = transformed[0];\n  detail.value0 = transformed[0];\n  detail.value1 = transformed[0];\n\n  for(let i=1; i<transformed.length; i++){\n    detail[`value${ i + 1 }`] = transformed[i];\n  }\n\n  $component.dispatchEvent(\n    new CustomEvent('change', {\n      detail,\n    })\n  );\n};", "import * as TypeEnum from '../enums/type-enum';\nimport { sendOnKeyDownEvent, sendPointerClickedEvent } from '../domain/events-provider';\n\nexport interface IPointer {\n  readonly percent: number;\n  readonly $pointer: HTMLElement;\n\n  updatePosition: (percent: number, leftWall: number | undefined, rightWall: number | undefined, type: string, rightToLeft: boolean, bottomToTop: boolean) => void;\n\n  disabled: boolean;\n\n  isClicked: ($target: HTMLElement) => boolean;\n  setCallbacks: (\n    arrowLeft: (pointerIndex: number) => void,\n    arrowRight: (pointerIndex: number) => void,\n    arrowUp: (pointerIndex: number) => void,\n    arrowDown: (pointerIndex: number) => void\n  ) => void;\n\n  setAttr: (key: string, value: string | null | undefined) => void;\n  getAttr: (key: string) => string | null;\n\n  destroy: () => void;\n}\n\nexport const Pointer = ($component: HTMLElement, $pointer: HTMLElement, index: number) : IPointer => {\n\n  // the pointer value in % in the range [0, 100] -\n  // used to render the pointer position\n  let percent = 0;\n\n  let arrowLeft: (pointerIndex: number) => void;\n  let arrowRight: (pointerIndex: number) => void;\n  let arrowUp: (pointerIndex: number) => void;\n  let arrowDown: (pointerIndex: number) => void;\n\n  let disabled = false;\n\n  // -------------- APIs -------------------------\n  const updatePosition = (_percent: number, _leftWall: number | undefined, _rightWall: number | undefined, _type: string, _rightToLeft: boolean, _bottomToTop: boolean) => {\n    if(_rightWall !== undefined && _percent > _rightWall){\n      _percent = _rightWall;\n    }\n\n    if(_leftWall !== undefined && _percent < _leftWall){\n      _percent = _leftWall;\n    }\n\n    percent = _percent;\n    // $pointer.focus();\n\n    // the below code should not change the global pointer percent,\n    // only its position on the panel\n    let percentPos = percent;\n    if((_type === TypeEnum.Vertical && _bottomToTop) ||\n      (_type === TypeEnum.Horizontal && _rightToLeft)) {\n      percentPos = 100 - percentPos;\n    }\n\n    if (_type === TypeEnum.Vertical) {\n      $pointer.style.top = `${ percentPos }%`;\n    }\n    else {\n      $pointer.style.left = `${ percentPos }%`;\n    }\n  };\n\n  const isClicked = ($target: HTMLElement) => {\n    return $target === $pointer || $pointer.contains($target);\n  };\n\n  const setCallbacks = (\n    _arrowLeft: (pointerIndex: number) => void,\n    _arrowRight: (pointerIndex: number) => void,\n    _arrowUp: (pointerIndex: number) => void,\n    _arrowDown: (pointerIndex: number) => void\n  ) => {\n    arrowLeft = _arrowLeft;\n    arrowRight = _arrowRight;\n    arrowUp = _arrowUp;\n    arrowDown = _arrowDown;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $pointer.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $pointer.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($pointer.hasAttribute('aria-disabled')) {\n        $pointer.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setAttr = (key: string, value: string | null | undefined) => {\n    if(value === null || value === undefined){\n      $pointer.removeAttribute(key);\n    }\n    else{\n      $pointer.setAttribute(key, value);\n    }\n  };\n\n  const getAttr = (key: string) => {\n    return $pointer.getAttribute(key);\n  };\n\n  // -------------- Events ------------------------\n\n  const pointerKeyDown = (evt: KeyboardEvent) => {\n    if(disabled) return;\n\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        evt.preventDefault();\n        if(typeof arrowLeft === 'function'){\n          arrowLeft(index);\n        }\n        break;\n      }\n\n      case 'ArrowRight': {\n        evt.preventDefault();\n        if(typeof arrowRight === 'function'){\n          arrowRight(index);\n        }\n        break;\n      }\n\n      case 'ArrowUp': {\n        evt.preventDefault();\n        if(typeof arrowUp === 'function'){\n          arrowUp(index);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        evt.preventDefault();\n        if(typeof arrowDown === 'function'){\n          arrowDown(index);\n        }\n        break;\n      }\n    }\n\n    sendOnKeyDownEvent($component, evt);\n  };\n\n  const pointerClicked = () => {\n    if(disabled) return;\n    sendPointerClickedEvent($component, $pointer);\n  };\n\n  // ---------- Lifecycle ------------------------\n\n  (() => {\n    $pointer.className = `pointer pointer-${ index }`;\n\n    $pointer.addEventListener('keydown', pointerKeyDown);\n    $pointer.addEventListener('click', pointerClicked);\n  })();\n\n  const destroy = () => {\n    $pointer.removeEventListener('keydown', pointerKeyDown);\n    $pointer.removeEventListener('click', pointerClicked);\n    $pointer.remove();\n  };\n\n  return {\n    $pointer,\n\n    get percent() {\n      return percent;\n    },\n\n    get disabled() {\n      return disabled;\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    updatePosition,\n\n    isClicked,\n    setCallbacks,\n    setAttr,\n    getAttr,\n\n    destroy,\n  };\n};\n\n", "import { isNumber } from '../domain/math-provider';\n\nexport const parseData = (dataString: string | undefined | null): (string | number)[] | undefined => {\n  if (dataString === undefined || dataString === null) return undefined;\n\n  if(Array.isArray(dataString)) return dataString as (string | number)[];\n\n  const result = dataString.trim();\n  if (result === '') return undefined;\n\n  const parts = dataString.split(',');\n  const list: string[] = [];\n  let allValuesAreNumbers = true;\n\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i].trim();\n    if (part === '') continue;\n\n    list.push(part);\n\n    if (!isNumber(part)) {\n      allValuesAreNumbers = false;\n    }\n  }\n\n  if (!allValuesAreNumbers) return list;\n\n  return list.map((item) => Number(item));\n};\n\nexport const findValueIndexInData = (val: string | number, data: (string | number)[] | undefined) => {\n  return data ? data.findIndex((item) => item === val || item.toString().trim() === val.toString().trim()) : -1;\n};", "import * as TypeEnum from '../enums/type-enum';\n\nexport interface IPanelFill {\n  updatePosition: (type: string, percents: (number | undefined)[], rightToLeft: boolean, bottomToTop: boolean) => void;\n}\n\nexport const PanelFill = ($fill: HTMLElement) : IPanelFill => {\n\n  const updatePosition = (type: string, percents: (number | undefined)[], rightToLeft: boolean, bottomToTop: boolean) => {\n\n    if(percents.length <= 0) return;\n\n    const oneOnly = percents.length === 1;\n    const first = percents[0] as number;\n    const last = percents[percents.length - 1] as number;\n\n    if (type === TypeEnum.Vertical) {\n      $fill.style.removeProperty('width');\n      $fill.style.removeProperty('right');\n      $fill.style.removeProperty('left');\n\n      if (!oneOnly) {\n        $fill.style.height = `${Math.abs(first - last)}%`;\n      }\n      else{\n        $fill.style.height = `${ first }%`;\n      }\n\n      if (bottomToTop) {\n        $fill.style.bottom = '0%';\n\n        if (!oneOnly) {\n          $fill.style.top = `${Math.min(100 - last, 100 - first)}%`;\n        }\n        else{\n          $fill.style.top = 'auto';\n        }\n      }\n      else {\n        $fill.style.bottom = 'auto';\n\n        if (!oneOnly) {\n          $fill.style.top = `${Math.min(first, last)}%`;\n        }\n        else{\n          $fill.style.top = '0%';\n        }\n      }\n    }\n    else {\n      $fill.style.removeProperty('height');\n      $fill.style.removeProperty('top');\n      $fill.style.removeProperty('bottom');\n\n      if (!oneOnly) {\n        $fill.style.width = `${ Math.abs(first - last) }%`;\n      }\n      else{\n        $fill.style.width = `${ first }%`;\n      }\n\n      if (rightToLeft) {\n        $fill.style.right = '0%';\n\n        if (!oneOnly) {\n          $fill.style.left = `${ Math.min(100 - last, 100 - first) }%`;\n        }\n        else{\n          $fill.style.left = 'auto';\n        }\n      }\n      else {\n        $fill.style.right = 'auto';\n\n        if (!oneOnly) {\n          $fill.style.left = `${ Math.min(first, last) }%`;\n        }\n        else{\n          $fill.style.left = '0%';\n        }\n      }\n    }\n  };\n\n  return {\n    updatePosition,\n  };\n};", "/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const AnimateOnClick = '--animate-onclick';\nexport const SliderWidth = '--width';\nexport const SliderHeight = '--height';\nexport const SliderRadius = '--panel-bg-border-radius';\n\nexport const SliderBg = '--panel-bg';\nexport const SliderBgHover = '--panel-bg-hover';\nexport const SliderBgFill = '--panel-bg-fill';\n\nexport const PointerWidth = '--pointer-width';\nexport const PointerHeight = '--pointer-height';\nexport const PointerRadius = '--pointer-border-radius';\nexport const PointerBg = '--pointer-bg';\nexport const PointerBgHover = '--pointer-bg-hover';\nexport const PointerBgFocus = '--pointer-bg-focus';\nexport const PointerShadow = '--pointer-shadow';\nexport const PointerShadowHover = '--pointer-shadow-hover';\nexport const PointerShadowFocus = '--pointer-shadow-focus';\nexport const PointerBorder = '--pointer-border';\nexport const PointerBorderHover = '--pointer-border-hover';\nexport const PointerBorderFocus = '--pointer-border-focus';\n", "import * as AttributesEnum from '../enums/attributes-enum';\nimport { getNumber } from './math-provider';\n\nexport const getAttributesByRegex = <T>($component: HTMLElement, regex: RegExp, parseValue?: (val: string) => T) : Map<number, T> => {\n\n  const map = new Map<number, T>();\n\n  for (const attr of $component.attributes) {\n    const valueProp = attr.nodeName.trim().toLowerCase();\n    const isValue = regex.test(valueProp);\n    if(!isValue) continue;\n\n    const key = valueProp.replace(/\\D/g, '').trim();\n    const keyNum = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n    const value = parseValue && typeof parseValue === 'function' ? parseValue(attr.value) : attr.value;\n    map.set(keyNum, value as T);\n  }\n\n  return map;\n};\n\nexport const getExternalCSSList = ($component: HTMLElement) => {\n  if(!$component) return null;\n\n  const str = $component.getAttribute(AttributesEnum.CSSLinks);\n  if(!str) return null;\n\n  const parts = str.split(';');\n  const cssList: string[] = [];\n\n  for(const part of parts){\n    if(part.trim() === '') continue;\n    cssList.push(part.trim());\n  }\n\n  return cssList;\n};", "import * as AttributesEnum from '../enums/attributes-enum';\nimport * as CSSVariables from '../enums/css-vars-enum';\nimport { IPointer } from './pointer';\nimport { getAttributesByRegex } from '../domain/common-provider';\n\nexport interface IStyles {\n\n  setStyle: (key: string, value: string | null | undefined, index: number) => void;\n  getStyle: (key: string, index: number) => string | undefined;\n\n  theme: string | null;\n  readonly pointerShapes: (string | null)[];\n  setPointerShape: (index: number, value: string | null) => void;\n}\n\nexport const stylePropertiesList: [string, string, string, RegExp | null][] = [\n  [CSSVariables.SliderWidth, AttributesEnum.SliderWidth, 'sliderWidth', null],\n  [CSSVariables.SliderHeight, AttributesEnum.SliderHeight, 'sliderHeight', null],\n  [CSSVariables.SliderRadius, AttributesEnum.SliderRadius, 'sliderRadius', null],\n\n  [CSSVariables.SliderBg, AttributesEnum.SliderBg, 'sliderBg', null],\n  [CSSVariables.SliderBgHover, AttributesEnum.SliderBgHover, 'sliderBgHover', null],\n  [CSSVariables.SliderBgFill, AttributesEnum.SliderBgFill, 'sliderBgFill', null],\n\n  [CSSVariables.PointerWidth, AttributesEnum.PointerWidth, 'pointer#Width', /^pointer([0-9]*)-width$/], // pointer-width, pointer2-width, ...\n  [CSSVariables.PointerHeight, AttributesEnum.PointerHeight, 'pointer#Height', /^pointer([0-9]*)-height$/], // pointer-height$, pointer2-height, ...\n  [CSSVariables.PointerRadius, AttributesEnum.PointerRadius, 'pointer#Radius', /^pointer([0-9]*)-radius$/], // pointer-radius, pointer2-radius, ...\n  [CSSVariables.PointerBg, AttributesEnum.PointerBg, 'pointer#Bg', /^pointer([0-9]*)-bg$/], // pointer-bg, pointer2-bg, ...\n  [CSSVariables.PointerBgHover, AttributesEnum.PointerBgHover, 'pointer#BgHover', /^pointer([0-9]*)-bg-hover$/], // pointer-bg-hover, pointer2-bg-hover, ...\n  [CSSVariables.PointerBgFocus, AttributesEnum.PointerBgFocus, 'pointer#BgFocus', /^pointer([0-9]*)-bg-focus$/], // pointer-bg-focus, pointer2-bg-focus, ...\n  [CSSVariables.PointerShadow, AttributesEnum.PointerShadow, 'pointer#Shadow', /^pointer([0-9]*)-shadow$/], // pointer-shadow, pointer2-shadow, ...\n  [CSSVariables.PointerShadowHover, AttributesEnum.PointerShadowHover, 'pointer#ShadowHover', /^pointer([0-9]*)-shadow-hover$/], // pointer-shadow-hover, pointer2-shadow-hover, ...\n  [CSSVariables.PointerShadowFocus, AttributesEnum.PointerShadowFocus, 'pointer#ShadowFocus', /^pointer([0-9]*)-shadow-focus$/], // pointer-shadow-focus, pointer2-shadow-focus, .\n  [CSSVariables.PointerBorder, AttributesEnum.PointerBorder, 'pointer#Border', /^pointer([0-9]*)-border$/], // pointer-border, pointer2-border, ...\n  [CSSVariables.PointerBorderHover, AttributesEnum.PointerBorderHover, 'pointer#BorderHover', /^pointer([0-9]*)-border-hover$/], // pointer-border-hover, pointer2-border-hover, ...\n  [CSSVariables.PointerBorderFocus, AttributesEnum.PointerBorderFocus, 'pointer#BorderFocus', /^pointer([0-9]*)-border-focus$/], // pointer-border-focus, pointer2-border-focus, ...\n];\n\nexport const Styles = ($component: HTMLElement, $slider: HTMLElement, pointers: IPointer[]) : IStyles => {\n\n  let theme: string | null = null;\n  const pointerShapes: (string | null)[] = [];\n  const stylesMap: Map<string, string> = new Map();\n\n  // ----- SETTERS ---------------------------\n\n  const removeClassesStartWith = (prefix: string) => {\n    const classList = [...$slider.classList];\n    for(const className of classList){\n      if(className.startsWith(prefix)){\n        $slider.classList.remove(className);\n      }\n    }\n  };\n\n  const setTheme = (val: string | null) => {\n    theme = val;\n    removeClassesStartWith('theme-');\n\n    if(typeof val === 'string'){\n      $slider.classList.add(`theme-${ val }`);\n    }\n  };\n\n  const updatePointerShapes = () => {\n    removeClassesStartWith('shape-');\n    for(let i=0; i<pointerShapes.length; i++){\n      const item = pointerShapes[i];\n      if(!item) continue;\n      $slider.classList.add('shape', `shape${ i }-${ item }`);\n    }\n  };\n\n  const setPointerShape = (index: number, value: string) => {\n    pointerShapes[index] = value;\n    console.log(pointerShapes)\n    updatePointerShapes();\n  };\n\n  const setPointerShapes = () => {\n\n    // pointer-shape, pointer2-shape, ...\n    const list = getAttributesByRegex($component, /^pointer([0-9]*)-shape$/);\n\n    removeClassesStartWith('shape-');\n\n    for(const item of list){\n      const index = item[0] as number;\n      pointerShapes[index] = item[1] as string;\n    }\n\n    updatePointerShapes();\n  };\n\n  const getKey = (key: string, index: number) => {\n    return `${ key }-${ index }`;\n  };\n\n  const setStyle = (key: string, value: string | null | undefined, index: number) => {\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    const $styleHolder = index === 0 ? $slider : pointer.$pointer;\n\n    if(value === null || value === undefined){\n      if(stylesMap.has(getKey(key, index))){\n        stylesMap.delete(getKey(key, index));\n      }\n      $styleHolder.style.removeProperty(key);\n      return;\n    }\n\n    stylesMap.set(getKey(key, index), value);\n    $styleHolder.style.setProperty(key, value);\n  };\n\n  const getStyle = (key: string, index: number) => {\n    return stylesMap.get(getKey(key, index));\n  };\n\n  // ---- initialization ---------------------\n  (() => {\n\n    for(const item of stylePropertiesList){\n\n      // '--pointer-width', 'pointer-width', 'pointerWidth', regex or null\n      const [cssVariableName, attrName, apiProperty, regex] = item;\n\n      // apply the styles via CSS variables;\n      // if index = 0 ---> apply the style on the whole slider, so all\n      // pointers will inherit it;\n      // otherwise, apply styles on the individual pointers;\n      if(regex){\n        const list = getAttributesByRegex($component, regex);\n        for(const item of list){\n          const index = item[0];\n          const value = item[1] as string;\n          setStyle(cssVariableName, value, index);\n        }\n      }\n      else{\n        const cssVariableValue = $component.getAttribute(attrName);\n        setStyle(cssVariableName, cssVariableValue, 0);\n      }\n\n      // add APIs --------------------------\n      const apiProperties: [string, number][] = [];\n\n      if(apiProperty.indexOf('#') === -1){\n        apiProperties.push([apiProperty, 0]);\n      }\n      else{\n        apiProperties.push([apiProperty.replace('#', ''), 0]);\n        apiProperties.push([apiProperty.replace('#', '0'), 0]);\n        apiProperties.push([apiProperty.replace('#', '1'), 0]);\n        for(let i=1; i<pointers.length; i++){\n          apiProperties.push([apiProperty.replace('#', (i + 1).toString()), i]);\n        }\n      }\n\n      for(const item of apiProperties){\n        try{\n          const propName = item[0];\n          const index = item[1];\n\n          if(!Object.prototype.hasOwnProperty.call($component, propName)){\n            Object.defineProperty($component, propName, {\n              get () {\n                return getStyle(cssVariableName, index);\n              },\n\n              set: (val) => {\n                setStyle(cssVariableName, val, index);\n              },\n            });\n          }\n        }\n        catch (ex){\n          console.error(ex);\n        }\n      }\n    }\n\n    setTheme($component.getAttribute(AttributesEnum.Theme));\n    setPointerShapes();\n  })();\n\n  return {\n    setStyle,\n    getStyle,\n\n    get theme() {\n      return theme;\n    },\n\n    set theme(val){\n      setTheme(val);\n    },\n\n    get pointerShapes() {\n      return pointerShapes;\n    },\n\n    setPointerShape,\n  };\n};", "/**\n * Constants instead of typescript enums ---> smaller bundle size\n */\nexport const AnimateOnClick = 'animate-on-click';\nexport const RangeDragging = 'range-dragging';\n", "import { IPlugin, IPluginGetters, IPluginSetters, IPluginUpdateData } from './interfaces';\n\ndeclare global {\n  interface Window {\n    tcRangeSliderPlugins: (() => IPlugin)[];\n    tcRangeSliderObservedAttr: string[];\n  }\n}\n\nexport interface IPluginsManager {\n  init: () => void;\n\n  update: (data: IPluginUpdateData) => void;\n\n  onAttrChange: (attrName: string, newValue: string) =>  void;\n\n  destroy: () => void;\n}\n\nexport const PluginsManager = (\n  $component: HTMLElement,\n  requestUpdatePlugins: () => void,\n  setters: IPluginSetters,\n  getters: IPluginGetters,\n) : IPluginsManager => {\n\n  const plugins: IPlugin[] = [];\n\n  // ------ APIs ----------------------------\n\n  const update = (data: IPluginUpdateData) => {\n    for(const plugin of plugins){\n      if(plugin.update && typeof plugin.update === 'function'){\n        plugin.update(data);\n      }\n    }\n  };\n\n  const destroy = () => {\n    for(const plugin of plugins){\n      if(plugin.destroy && typeof plugin.destroy === 'function'){\n        plugin.destroy();\n      }\n    }\n  };\n\n  const onAttrChange = (_attrName: string, _newValue: string) => {\n    for(const plugin of plugins){\n      if(plugin.onAttrChange && typeof plugin.onAttrChange === 'function'){\n        plugin.onAttrChange(\n          _attrName,\n          _newValue\n        );\n      }\n    }\n  };\n\n  const defineSettersGetters = (plugin: IPlugin) => {\n    if(!plugin.gettersAndSetters) return;\n\n    for(const item of plugin.gettersAndSetters){\n      if(!item.name || !item.attributes) continue;\n\n      try{\n        if(!Object.prototype.hasOwnProperty.call($component, item.name)){\n          Object.defineProperty($component, item.name, item.attributes);\n        }\n      }\n      catch (ex){\n        console.error('defineSettersGetters error:', ex);\n      }\n    }\n  };\n\n  const initStyles = (plugin: IPlugin) => {\n    if(!plugin.css) return;\n\n    const $style = $component.shadowRoot?.querySelector('style');\n    if(!$style) return;\n\n    $style.innerHTML += plugin.css;\n  };\n\n  // ------ initialization ------------------\n  const init = () => {\n    if(!window.tcRangeSliderPlugins) return;\n\n    for(const pluginFunc of window.tcRangeSliderPlugins){\n      const plugin = pluginFunc();\n      plugins.push(plugin);\n\n      if(plugin.init && typeof plugin.init === 'function'){\n\n        // call plugin initialization function\n        plugin.init(\n          $component,\n          requestUpdatePlugins,\n          setters,\n          getters,\n        );\n\n        // if plugin has getters and setters that used for APIs ---> define them\n        defineSettersGetters(plugin);\n\n        // if plugin has css rules defined as plain text ---> they can be added dynamically\n        initStyles(plugin);\n      }\n    }\n  };\n\n  return {\n    init,\n    update,\n    onAttrChange,\n    destroy,\n  };\n};", "import { getNumber, isNumber } from './math-provider';\nimport { IPointer, Pointer } from '../ui/pointer';\nimport { ISlider } from '../ui/slider';\n\nexport const initPointers = ($component: HTMLElement, $pointer: HTMLElement) => {\n  const map = new Map<number, number | string>();\n  const regex = /^value([0-9]*)$/;\n\n  // collect data about key / value pairs: value=50, value2=70, etc.\n  // value = value0 = value1 (all these are aliases of each other)\n  for (const attr of $component.attributes) {\n    const valueProp = attr.nodeName.trim().toLowerCase();\n    const isValue = regex.test(valueProp);\n    if(!isValue) continue;\n\n    const key = valueProp.replace('value', '').trim();\n    const keyNum = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n    const value = isNumber(attr.value) ? getNumber(attr.value, 0) : attr.value;\n\n    map.set(keyNum, value);\n  }\n\n  // find the max value number in the map\n  const max = Math.max(...Array.from(map.keys()));\n  const pointers: [IPointer, string | number | undefined][] = [];\n\n  // first pointer always exists\n  pointers.push([Pointer($component, $pointer, 0), map.get(0)]);\n\n  // add all other pointers\n  let $latestPointer = $pointer;\n\n  for(let i=1; i<=max; i++){\n    const $newPointer = $pointer.cloneNode(true) as HTMLElement;\n    $latestPointer.after($newPointer);\n\n    $latestPointer = $newPointer;\n    pointers.push([Pointer($component, $newPointer, i), map.get(i)]);\n  }\n\n  return pointers;\n};\n\nexport const initPointerAPI = (\n  $component: HTMLElement,\n  slider: ISlider,\n  index: number,\n  valueProp: string,\n  ariaLabelProp: string,\n  pointerShapeProp: string,\n  pointerDisabledProp: string\n) => {\n\n  try{\n\n    // `value${ index + 1 }`: value, value0, value1, value2, etc.\n    Object.defineProperty($component, valueProp, {\n      configurable: true,\n      get () {\n        if(!slider) return undefined;\n\n        const pointer = slider.pointers[index];\n        if(!pointer) return undefined;\n\n        const val = slider.getTextValue(pointer.percent);\n        return isNumber(val) ? getNumber(val, val) : val;\n      },\n\n      set: (val) => {\n        slider?.setValue(val, index);\n      },\n    });\n\n    // `ariaLabel${ index + 1 }`\n    Object.defineProperty($component, ariaLabelProp, {\n      configurable: true,\n      get () {\n        return slider?.pointers[index]?.getAttr('aria-label') ?? undefined;\n      },\n\n      set: (val) => {\n        if(!slider) return;\n        slider.setAriaLabel(index, val);\n      },\n    });\n\n    // `pointerShape${ index + 1 }`\n    Object.defineProperty($component, pointerShapeProp, {\n      configurable: true,\n      get () {\n        return slider?.styles?.pointerShapes[index] ?? null;\n      },\n\n      set: (val) => {\n        if(!slider || !slider.styles) return;\n        slider.styles.setPointerShape(index, val);\n      },\n    });\n\n    // `pointer${ index + 1 }Disabled`\n    Object.defineProperty($component, pointerDisabledProp, {\n      configurable: true,\n      get () {\n        return slider?.pointers[index].disabled ?? false;\n      },\n\n      set: (val) => {\n        if(!slider) return;\n\n        const pointer = slider?.pointers[index];\n        if(!pointer) return;\n\n        pointer.disabled = val;\n      },\n    });\n  }\n  catch (ex){\n    console.error(ex);\n  }\n};\n\nexport const initPointerAPIs = ($component: HTMLElement, slider: ISlider) => {\n\n  const apiProperties: [string, string, string, string, number][] = [\n    ['value', 'ariaLabel', 'pointerShape', 'pointerDisabled', 0],\n    ['value0', 'ariaLabel0', 'pointerShape0', 'pointer0Disabled', 0],\n    ['value1', 'ariaLabel1', 'pointerShape1', 'pointer1Disabled', 0],\n  ];\n\n  for(let i=1; i<slider.pointers.length; i++){\n    apiProperties.push([`value${ i + 1 }`, `ariaLabel${ i + 1 }`, `pointer${ i + 1 }Shape`, `pointer${ i + 1 }Disabled`, i]);\n  }\n\n  for(const item of apiProperties){\n    initPointerAPI($component,\n      slider,\n      item[4],\n      item[0],\n      item[1],\n      item[2],\n      item[3]\n    );\n  }\n};\n\nexport const changePointersOrder = (pointers: IPointer[], isDesc: boolean, $component: HTMLElement) => {\n\n  const $container = $component.shadowRoot?.querySelector('.container') as HTMLElement\n  if(!$container) return;\n\n  for(const pointer of pointers){\n    if(isDesc){\n      $container.prepend(pointer.$pointer);\n    }\n    else{\n      $container.append(pointer.$pointer);\n    }\n  }\n};\n", "import { IPointer, Pointer } from './pointer';\nimport { convertRange, getBoolean, getNumber, isNumber, roundToStep, setDecimalPlaces } from '../domain/math-provider';\nimport * as AttributesEnum from '../enums/attributes-enum';\nimport { TData, TStep } from '../types';\nimport { findValueIndexInData, parseData } from '../dal/data-provider';\nimport * as TypeEnum from '../enums/type-enum';\nimport { IPanelFill, PanelFill } from './panel-fill';\nimport { sendChangeEvent, sendMouseDownEvent, sendMouseUpEvent } from '../domain/events-provider';\nimport { IStyles, Styles } from './styles';\nimport * as CSSVariables from '../enums/css-vars-enum';\nimport * as CssClasses from '../enums/css-classes-enum';\nimport { getAttributesByRegex } from '../domain/common-provider';\nimport { IPluginsManager, PluginsManager } from '../plugins/plugins-manager';\nimport { changePointersOrder } from '../domain/pointers-provider';\n\nexport interface ISlider {\n  readonly pointers: IPointer[];\n  readonly styles: IStyles | null;\n  readonly pluginsManager: IPluginsManager | null;\n\n  pointersOverlap: boolean;\n  pointersMinDistance: number;\n  pointersMaxDistance: number;\n  rangeDragging: boolean;\n\n  readonly min: number | string;\n  readonly max: number | string;\n  readonly step: TStep;\n  readonly data: TData;\n\n  type: string;\n  rightToLeft: boolean;\n  bottomToTop: boolean;\n  disabled: boolean;\n  keyboardDisabled: boolean;\n  round: number;\n  animateOnClick: string | undefined;\n\n  getAriaLabel: (index: number) => (string | undefined);\n  setAriaLabel: (index: number, ariaLabel: string | undefined) => void;\n\n  setMin: (value: number | string | undefined | null) => void;\n  setMax: (value: number | string | undefined | null) => void;\n  setValue: (value: number | string | undefined | null, index: number) => void;\n  setStep: (value: TStep | string) => void;\n  setData: (value: TData | string | null | number) => void;\n  getTextValue: (_percent: number | undefined) => undefined | string | number;\n\n  addPointer: (value: number | string | undefined | null) => number;\n  removePointer: () => number;\n\n  destroy: () => void;\n}\n\nexport const MIN_DEFAULT = 0;\nexport const MAX_DEFAULT = 100;\nexport const ROUND_DEFAULT = 2;\n\nexport const Slider = ($component: HTMLElement, $slider: HTMLElement, pointersList: [IPointer, string | number | undefined][]) : ISlider => {\n\n  const pointers = pointersList.map(item => item[0]);\n  let selectedPointer: IPointer | null | undefined = null;\n  let panelFill: IPanelFill | null = null;\n  let styles: IStyles | null = null;\n  let pluginsManager: IPluginsManager | null = null;\n\n  let min = MIN_DEFAULT;\n  let max = MAX_DEFAULT;\n  let step: TStep = undefined; // step is defined in absolute units (not percent!)\n  let data: TData = undefined;\n  let type: string = TypeEnum.Horizontal;\n  let round: number = ROUND_DEFAULT;\n  let rightToLeft = false;\n  let bottomToTop = false;\n\n  let pointersOverlap = false;\n  let pointersMinDistance = 0;\n  let pointersMaxDistance = Infinity;\n\n  let rangeDragging = false;\n\n  let rangeDraggingStart: number | undefined = undefined;\n  let rangeDraggingDiff: number | undefined = undefined;\n\n  let disabled = false;\n  let keyboardDisabled = false;\n  let animateOnClick: string | undefined = undefined;\n\n  const ariaLabels: (string | undefined)[] = [];\n\n  // -------------- EVENTS --------------------\n\n  const onMouseDown = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    onValueChange(evt);\n\n    window.addEventListener('mousemove', onValueChange);\n    window.addEventListener('mouseup', onMouseUp);\n\n    sendMouseDownEvent($component, evt);\n  };\n\n  const onMouseUp = (evt: MouseEvent) => {\n    if(disabled) return;\n\n    rangeDraggingStart = undefined;\n    rangeDraggingDiff = undefined;\n\n    window.removeEventListener('mousemove', onValueChange);\n    window.removeEventListener('mouseup', onValueChange);\n\n    if(animateOnClick){\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n\n    sendMouseUpEvent($component, evt);\n  };\n\n  const getActivePointer = ($target: HTMLElement, percent: number) => {\n    if(pointers.length <= 0) return;\n\n    // if only 1 pointer exists --> return it\n    if(pointers.length === 1){\n      if(pointers[0].isClicked($target) && animateOnClick){\n        $slider.classList.remove(CssClasses.AnimateOnClick);\n      }\n\n      return pointers[0];\n    }\n\n    const panelFillClicked = isPanelFillClicked($target);\n\n    if(rangeDragging){\n      let _dragPercent = percent;\n      const stepPercent = geStepPercent(_dragPercent);\n      if(stepPercent !== undefined){\n        _dragPercent = roundToStep(_dragPercent, stepPercent);\n      }\n\n      if(panelFillClicked){\n        rangeDraggingStart = _dragPercent;\n        rangeDraggingDiff = 0;\n      }\n      else{\n        if(rangeDraggingStart !== undefined){\n          rangeDraggingDiff = _dragPercent - rangeDraggingStart;\n          rangeDraggingStart = _dragPercent;\n        }\n      }\n    }\n\n    if(!isPanelClicked($target) && !panelFillClicked){\n\n      // if clicked directly on 1 of the pointers ---> return it\n      for(const pointer of pointers){\n        if(!pointer.isClicked($target)) continue;\n\n        if(animateOnClick){\n          $slider.classList.remove(CssClasses.AnimateOnClick);\n        }\n\n        return pointer;\n      }\n\n      // if already selected pointer ---> return it\n      for(const pointer of pointers){\n        if(selectedPointer === pointer) return pointer;\n      }\n    }\n\n    // find the closest pointer and return it\n    let minDistance = Infinity;\n    let minDistancePointer = null;\n\n    for(const pointer of pointers){\n      const distance = Math.abs(percent - pointer.percent);\n      if(distance < minDistance){\n        minDistance = distance;\n        minDistancePointer = pointer;\n      }\n    }\n\n    return minDistancePointer;\n  };\n\n  const getSelectedPointerIndex = () => {\n    return pointers.findIndex(pointer => selectedPointer === pointer && !pointer.disabled);\n  };\n\n  const onValueChange = (evt: MouseEvent | TouchEvent) => {\n\n    // find the percent [0, 100] of the current mouse position in vertical or horizontal slider\n    let percent;\n\n    if(type === TypeEnum.Vertical){\n      const { height: boxHeight, top: boxTop } = $slider.getBoundingClientRect();\n      const mouseY = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientY : (evt as TouchEvent).touches[0].clientY;\n      const top = Math.min(Math.max(0, mouseY - boxTop), boxHeight);\n      percent = (top * 100) / boxHeight;\n    }\n    else{\n      const { width: boxWidth, left: boxLeft } = $slider.getBoundingClientRect();\n      const mouseX = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientX : (evt as TouchEvent).touches[0].clientX;\n      const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n      percent = (left * 100) / boxWidth;\n    }\n\n    if(rightToLeft || bottomToTop){\n      percent = 100 - percent;\n    }\n\n    selectedPointer = getActivePointer(evt.target as HTMLElement, percent);\n\n    // handle range dragging\n    if(rangeDragging && pointers.length > 1 && rangeDraggingDiff !== undefined){\n\n      const firstPointer = pointers[0];\n      const lastPointer = pointers[pointers.length - 1];\n\n      const firstSmallerThanMin = firstPointer.percent + rangeDraggingDiff < 0;\n      const lastGreaterThanMax = lastPointer.percent + rangeDraggingDiff > 100;\n      if(firstSmallerThanMin || lastGreaterThanMax) return;\n\n      setPositions(0, firstPointer.percent + rangeDraggingDiff);\n      setPositions(1, lastPointer.percent + rangeDraggingDiff);\n      return;\n    }\n\n    const foundIndex = getSelectedPointerIndex();\n    if(foundIndex !== -1){\n      setPositions(foundIndex, percent);\n      selectedPointer?.$pointer.focus();\n    }\n  };\n\n  const pointerMouseWheel = (evt: WheelEvent) => {\n    if (disabled ||\n      document.activeElement !== $component ||\n      selectedPointer?.disabled) return;\n\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const scrollTop = evt.deltaY < 0;\n    const rightOrBottom = rightToLeft || bottomToTop;\n    const shouldGoPrev = scrollTop ? !rightOrBottom : rightOrBottom;\n\n    const foundIndex = getSelectedPointerIndex();\n    if(foundIndex === -1) return;\n\n    if(shouldGoPrev){\n      goPrev(foundIndex, pointers[foundIndex].percent);\n    }\n    else{\n      goNext(foundIndex, pointers[foundIndex].percent);\n    }\n  };\n\n  // -------------- Arrows --------------------\n\n  const arrowLeft = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go backwards\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n  };\n\n  const arrowRight = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // go backward\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n  };\n\n  const arrowUp = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go forwards\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go backwards\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n      else{\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n    }\n  };\n\n  const arrowDown = (pointerIndex: number) => {\n    if(disabled || keyboardDisabled) return;\n\n    if(type === TypeEnum.Vertical){\n      if(bottomToTop){\n        // go backward\n        goPrev(pointerIndex, pointers[pointerIndex].percent);\n      }\n      else{\n        // go forward\n        goNext(pointerIndex, pointers[pointerIndex].percent);\n      }\n    }\n    else{\n      if(rightToLeft){\n        // jump to the min value\n        setPositions(pointerIndex, 0);\n      }\n      else{\n        // jump to the max value\n        setPositions(pointerIndex, 100);\n      }\n    }\n  };\n\n  // -------------- Helpers ------------------------\n\n  const isPanelClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel');\n  };\n\n  const isPanelFillClicked = ($target: HTMLElement) => {\n    return $target.classList.contains('panel-fill');\n  };\n\n  const goPrev = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    let stepPercent = geStepPercent(_percent);\n\n    if(stepPercent == undefined){\n      stepPercent = 1;\n    }\n\n    _percent -= stepPercent;\n\n    if(_percent < 0){\n      _percent = 0;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const goNext = (index: number, _percent: number | undefined) => {\n\n    if(_percent === undefined) return;\n\n    let stepPercent = geStepPercent(_percent);\n\n    if(stepPercent == undefined){\n      stepPercent = 1;\n    }\n\n    _percent += stepPercent;\n\n    if(_percent > 100){\n      _percent = 100;\n    }\n\n    setPositions(index, _percent);\n  };\n\n  const updatePlugins = () => {\n\n    if(!pluginsManager) return;\n    pluginsManager.update({\n      percents: getPercents(),\n      values: getValues(),\n\n      min: getNumericMin(),\n      max: getNumericMax(),\n\n      data: getData(),\n      step: getStep(),\n      round: getRound(),\n      type: getType(),\n\n      textMin: getMin(),\n      textMax: getMax(),\n\n      rightToLeft: isRightToLeft(),\n      bottomToTop: isBottomToTop(),\n\n      pointersOverlap: isPointersOverlap(),\n      pointersMinDistance: getPointersMinDistance(),\n      pointersMaxDistance: getPointersMaxDistance(),\n      rangeDragging: isRangeDraggingEnabled(),\n\n      disabled: isDisabled(),\n      keyboardDisabled: isKeyboardDisabled(),\n    });\n  };\n\n  const requestUpdatePlugins = () => {\n    updatePlugins();\n  };\n\n  // -------------- Getters --------------------\n\n  const getPointerLeftWall = (pointerIndex: number) => {\n    if(pointersOverlap || pointers.length <= 1 || max === min) return undefined;\n\n    if(pointerIndex === 0){\n      // by default 0, but if min distance between pointers is defined --->\n      // then the distance to the next pointer\n      const converted = pointersMaxDistance * 100 / (max - min);\n      return Math.max(0, pointers[pointerIndex + 1].percent - converted);\n    }\n    else{\n      // by default previous pointer, but if min distance between pointers is defined --->\n      // then the distance to the next pointer\n      const converted = pointersMinDistance * 100 / (max - min);\n      return Math.min(pointers[pointerIndex - 1].percent + converted, 100);\n    }\n  };\n\n  const getPointerRightWall = (pointerIndex: number) => {\n    if(pointersOverlap || pointers.length <= 1 || max === min) return undefined;\n\n    if(pointerIndex === pointers.length - 1){\n      // by default 100, but if min distance between pointers is defined --->\n      // then the distance to the previous pointer\n      const converted = pointersMaxDistance * 100 / (max - min);\n      return Math.min(pointers[pointerIndex - 1].percent + converted, 100);\n    }\n    else{\n      // distance to the next pointer\n      const converted = pointersMinDistance * 100 / (max - min);\n      return Math.max(0, pointers[pointerIndex + 1].percent - converted);\n    }\n  };\n\n  /**\n   * user step is defined in absolute values;\n   * this function return it as %\n   */\n  const geStepPercent = (_percent: number) => {\n\n    let _step: number | undefined | null;\n\n    if(typeof step === 'function'){\n      // convert percent to value: [0, 100] to [min, max]\n      const currentValue = convertRange(0, 100, min, max, _percent);\n\n      // the slider function provided by user should return an absolute value, not %\n      _step = step(currentValue, _percent);\n    }\n    else{\n      // the step value provided by the user should be absolute value (not %), undefined, or null\n      _step = step;\n    }\n\n    // round percent to step\n    if(isNumber(_step)){\n\n      /*\n      min ......... max (step = 1)\n      0 ........... 100 (step = ?)\n\n      (max - min) ....... step (=1)\n      100 ............... ?\n\n      ? = 100 * step / (max - min)\n      */\n\n      const diff = max - min;\n      _step = diff === 0 ? 0 :  (_step as number) * 100 / diff;\n\n      return _step;\n    }\n\n    return undefined;\n  };\n\n  const getTextValue = (_percent: number | undefined) => {\n    if(_percent === undefined) return undefined;\n\n    const val = convertRange(0, 100, min, max, _percent);\n\n    if(data !== undefined){\n      return data[Math.round(val)];\n    }\n\n    return setDecimalPlaces(val, round);\n  };\n\n  const getMin = () => {\n\n    if(data !== undefined){\n      return data[min];\n    }\n\n    return min;\n  };\n\n  const getMax = () => {\n\n    if(data !== undefined){\n      return data[max];\n    }\n\n    return max;\n  };\n\n  const getStep = () => {\n    return step;\n  };\n\n  const getPointerMin = (index: number) => {\n    if(index <= 0 || pointersOverlap) return getMin();\n    return getTextValue(pointers[index - 1].percent) ?? '';\n  };\n\n  const getPointerMax = (index: number) => {\n    if(pointers.length <= 1 ||\n      index >= pointers.length - 1 ||\n      pointersOverlap) return getMax();\n\n    return getTextValue(pointers[index + 1].percent) ?? '';\n  };\n\n  const getPercents = () => {\n    return pointers.map(pointer => pointer.percent);\n  };\n\n  const getValues = () => {\n    return pointers.map(pointer => getTextValue(pointer.percent));\n  }\n\n  const getNumericMin = () => {\n    return min;\n  };\n\n  const getNumericMax = () => {\n    return max;\n  };\n\n  const getData = () => {\n    return data;\n  };\n\n  const getType = () => {\n    return type;\n  };\n\n  const getRound = () => {\n    return round;\n  };\n\n  const getPointersMinDistance = () => {\n    return pointersMinDistance;\n  };\n\n  const getPointersMaxDistance = () => {\n    return pointersMaxDistance;\n  };\n\n  const getAriaLabel = (index: number) => {\n    return ariaLabels[index];\n  };\n\n  const isRightToLeft = () => {\n    return rightToLeft;\n  };\n\n  const isBottomToTop = () => {\n    return bottomToTop;\n  };\n\n  const isDisabled = () => {\n    return disabled;\n  };\n\n  const isKeyboardDisabled = () => {\n    return keyboardDisabled;\n  };\n\n  const isPointersOverlap = () => {\n    return pointersOverlap;\n  };\n\n  const isRangeDraggingEnabled = () => {\n    return rangeDragging;\n  };\n\n  // -------------- Setters --------------------\n\n  const setPositions = (index: number, _percent: number | undefined) => {\n    if(_percent === undefined) return;\n\n    // round percent to step\n    const stepPercent = geStepPercent(_percent);\n\n    if(stepPercent !== undefined){\n      _percent = roundToStep(_percent, stepPercent);\n    }\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    pointer.updatePosition(_percent, getPointerLeftWall(index), getPointerRightWall(index), type, rightToLeft, bottomToTop);\n    panelFill?.updatePosition(type, pointers.map(pointer => pointer.percent), rightToLeft, bottomToTop);\n\n    updatePlugins();\n\n    for(const pointer of pointers){\n      const valueText = getTextValue(pointer.percent);\n      if(valueText !== undefined){\n        pointer.setAttr('aria-valuenow', valueText.toString());\n        pointer.setAttr('aria-valuetext', valueText.toString());\n      }\n    }\n\n    setAriaMinMax();\n\n    sendChangeEvent($component, pointers.map(pointer => getTextValue(pointer.percent)));\n  };\n\n  const setAllPositions = () => {\n    for(let i=0; i<pointers.length; i++){\n      setPositions(i, pointers[i].percent);\n    }\n  };\n\n  /**\n   * on component init, min and max should be initialized together\n   * because their validations depend on each other;\n   */\n  const setMinMax = (_min: number | string | undefined | null, _max: number | string | undefined | null) => {\n\n    min = data !== undefined ? 0 : getNumber(_min, MIN_DEFAULT);\n    max = data !== undefined ? data.length - 1 : getNumber(_max, MAX_DEFAULT);\n\n    // perform validations\n    setMin(min);\n    setMax(max);\n  };\n\n  const setAriaMinMax = () => {\n    for(let i=0; i<pointers.length; i++){\n      const pointer = pointers[i];\n      pointer.setAttr('aria-valuemin', (getPointerMin(i) ?? '').toString());\n      pointer.setAttr('aria-valuemax', (getPointerMax(i) ?? '').toString());\n    }\n  };\n\n  const setMin = (_min: number | string | undefined | null) => {\n    min = getNumber(_min, MIN_DEFAULT);\n\n    if(min > max){\n      max = min + MAX_DEFAULT;\n    }\n\n    setAllPositions();\n  };\n\n  const setMax = (_max: number | string | undefined | null) => {\n\n    max = getNumber(_max, MAX_DEFAULT);\n\n    if(max < min){\n      max = min + MAX_DEFAULT;\n    }\n\n    setAllPositions();\n  };\n\n  const setValues = (values: (number | string | undefined)[]) => {\n\n    // initial values should be initialized together\n    // because their validations may depend on each other;\n\n    // init initial values with pointers overlap ----------\n    pointersOverlap = true;\n\n    for(let i=0; i<values.length; i++){\n      setValue(values[i], i);\n    }\n\n    pointersOverlap = false;\n\n    // add all required validations ------------------------\n    for(let i=0; i<values.length; i++){\n      setValue(values[i], i);\n    }\n  };\n\n  const setValue = (_val: number | string | undefined | null, index: number) => {\n\n    let val: number;\n\n    if(data !== undefined){\n\n      val = (_val === undefined || _val === null) ? 0 : findValueIndexInData(_val, data);\n      if(val === -1){\n        val = 0;\n      }\n    }\n    else{\n      val = getNumber(_val, min);\n\n      if(val < min){\n        val = min;\n      }\n\n      if(val > max){\n        val = max;\n      }\n    }\n\n    // scale a range [min,max] to [a,b]\n    const percent = convertRange(min, max, 0, 100, val);\n\n    setPositions(index, percent);\n  };\n\n  const setStep = (_step: TStep | string) => {\n    if(_step === null || _step === undefined){\n      step = undefined;\n      return;\n    }\n\n    if (typeof _step === 'function') {\n      step = _step;\n      setAllPositions();\n      return;\n    }\n\n    if(isNumber(_step)){\n      step = getNumber(_step, 1);\n\n      const diff = Math.abs(max - min);\n      if (step > diff) {\n        step = undefined;\n      }\n\n      setAllPositions();\n      return;\n    }\n\n    step = undefined;\n  };\n\n  const setPointersOverlap = (_pointersOverlap: boolean) => {\n    pointersOverlap = _pointersOverlap;\n    setAllPositions();\n  };\n\n  const setPointersMinDistance = (_pointersMinDistance: number) => {\n    if(!isNumber(_pointersMinDistance) || _pointersMinDistance < 0){\n      _pointersMinDistance = 0;\n    }\n    pointersMinDistance = _pointersMinDistance;\n  };\n\n  const setPointersMaxDistance = (_pointersMaxDistance: number) => {\n    if(!isNumber(_pointersMaxDistance) || _pointersMaxDistance < 0){\n      _pointersMaxDistance = Infinity;\n    }\n    pointersMaxDistance = _pointersMaxDistance;\n  };\n\n  const setDisabled = (_disabled: boolean) => {\n    disabled = _disabled;\n    $slider.classList.toggle('disabled', disabled);\n\n    if(disabled){\n      $slider.setAttribute('aria-disabled', 'true');\n    }\n    else{\n      if ($slider.hasAttribute('aria-disabled')) {\n        $slider.removeAttribute('aria-disabled');\n      }\n    }\n  };\n\n  const setKeyboardDisabled = (_disabled: boolean) => {\n    keyboardDisabled = _disabled;\n  };\n\n  const setData = (_data: TData | string | number | null) => {\n\n    if(_data === null || _data === undefined){\n      data = undefined;\n      return;\n    }\n\n    data = parseData(_data as string);\n    if(data === undefined || data.length <= 0){\n      data = undefined;\n      return;\n    }\n\n    setMin(0);\n    setMax(data.length - 1);\n\n    if(step === undefined){\n      setStep(1);\n    }\n  };\n\n  const setType = (_type: string | null | undefined) => {\n\n    if(typeof _type === 'string'){\n      type = _type.trim().toLowerCase() === TypeEnum.Vertical ? TypeEnum.Vertical : TypeEnum.Horizontal;\n    }\n    else{\n      type = TypeEnum.Horizontal;\n    }\n\n    const $box = $component.shadowRoot?.querySelector('.range-slider-box');\n    if(!$box) return;\n    $box.className = `range-slider-box type-${ type }`;\n\n    setAllPositions();\n\n    // update accessibility properties\n    const aria = type === TypeEnum.Vertical ? 'vertical' : 'horizontal';\n    for(const pointer of pointers){\n      pointer.setAttr('aria-orientation', aria);\n    }\n  };\n\n  const setRightToLeft = (_rightToLeft: boolean) => {\n    rightToLeft = _rightToLeft;\n\n    if(pointers.length > 1){\n      changePointersOrder(pointers, rightToLeft, $component);\n    }\n\n    setAllPositions();\n    updatePlugins();\n  };\n\n  const setBottomToTop = (_bottomToTop: boolean) => {\n    bottomToTop = _bottomToTop;\n\n    if(pointers.length > 1){\n      changePointersOrder(pointers, bottomToTop, $component);\n    }\n\n    setAllPositions();\n    updatePlugins();\n  };\n\n  const setRound = (_round: number) => {\n    round = getNumber(_round, ROUND_DEFAULT);\n\n    if(round < 0){\n      round = ROUND_DEFAULT;\n    }\n\n    updatePlugins();\n  };\n\n  const setAnimateOnClick = (_animateOnClick: string | null | undefined) => {\n    if(_animateOnClick === null || _animateOnClick === undefined){\n      animateOnClick = undefined;\n      $slider.style.removeProperty(CSSVariables.AnimateOnClick);\n      $slider.classList.remove(CssClasses.AnimateOnClick);\n    }\n    else{\n      animateOnClick = _animateOnClick;\n      $slider.style.setProperty(CSSVariables.AnimateOnClick, animateOnClick);\n      $slider.classList.add(CssClasses.AnimateOnClick);\n    }\n  };\n\n  const setAriaLabel = (index: number, _ariaLabel: string | undefined) => {\n\n    const pointer = pointers[index];\n    if(!pointer) return;\n\n    pointer.setAttr('aria-label', _ariaLabel);\n    ariaLabels[index] = _ariaLabel;\n  };\n\n  const setRangeDragging = (_rangeDragging: boolean) => {\n    rangeDraggingStart = undefined;\n\n    if(pointers.length <= 1){\n      rangeDragging = false;\n      $slider.classList.remove(CssClasses.RangeDragging);\n      return;\n    }\n\n    rangeDragging = _rangeDragging;\n    $slider.classList.toggle(CssClasses.RangeDragging, rangeDragging);\n  };\n\n  // initialization -------------------------------------\n\n  const initDisabled = () => {\n    setDisabled(getBoolean($component.getAttribute(AttributesEnum.Disabled)));\n    keyboardDisabled = getBoolean($component.getAttribute(AttributesEnum.KeyboardDisabled))\n\n    // handle 'pointer1-disabled, pointer2-disabled, etc.\n    const disabledList = getAttributesByRegex($component, /^pointer([0-9]*)-disabled$/, (val: string) => {\n      return getBoolean(val);\n    });\n\n    for(const item of disabledList){\n      const pointerIndex = item[0];\n      if(!pointers[pointerIndex]) continue;\n      pointers[pointerIndex].disabled = item[1];\n    }\n  };\n\n  const initAriaLabels = () => {\n    // handle 'aria-label1', 'aria-label2', etc.\n    const ariaLabelsList = getAttributesByRegex($component, /^aria-label([0-9]*)$/);\n\n    for(const item of ariaLabelsList){\n      const index = item[0];\n      setAriaLabel(index, item[1] as string);\n    }\n  };\n\n  // add pointer - always to the end\n  const addPointer = (value: string | number | undefined) => {\n    const len = pointers.length;\n    const $latestPointer = pointers[len - 1].$pointer;\n\n    const $newPointer = $latestPointer.cloneNode(true) as HTMLElement;\n    $latestPointer.after($newPointer);\n    const newPointer = Pointer($component, $newPointer, len);\n\n    newPointer.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    pointers.push(newPointer);\n\n    setValue(value, len);\n    setAllPositions();\n    updatePlugins();\n\n    return len;\n  };\n\n  // always from the end\n  const removePointer = () => {\n    const len = pointers.length;\n    const pointer = pointers[len - 1];\n    if(!pointer) return -1;\n\n    pointer.destroy();\n    pointers.pop();\n\n    if(pointers.length <= 1){\n      setRangeDragging(false);\n    }\n\n    setAllPositions();\n    updatePlugins();\n\n    return len - 1;\n  };\n\n  (() => {\n\n    // init pointer callbacks for arrow keys\n    for(const pointer of pointers){\n      pointer.setCallbacks(arrowLeft, arrowRight, arrowUp, arrowDown);\n    }\n\n    // init panel fill\n    const $fill = $component.shadowRoot?.querySelector('.panel-fill') as HTMLElement;\n    if($fill){\n      panelFill = PanelFill($fill);\n    }\n\n    // init main properties from HTML attributes\n    setType($component.getAttribute(AttributesEnum.Type));\n    setRightToLeft(getBoolean($component.getAttribute(AttributesEnum.RightToLeft)));\n    setBottomToTop(getBoolean($component.getAttribute(AttributesEnum.BottomToTop)));\n\n    setMinMax($component.getAttribute(AttributesEnum.Min), $component.getAttribute(AttributesEnum.Max));\n    setStep($component.getAttribute(AttributesEnum.Step));\n    setData($component.getAttribute(AttributesEnum.Data));\n\n    // set value and render the pointers ----------------------\n    setValues(pointersList.map(item => item[1]));\n\n    // overlaps MUST be defined after the pointer values\n    setPointersOverlap(getBoolean($component.getAttribute(AttributesEnum.PointersOverlap)));\n    setPointersMinDistance(getNumber($component.getAttribute(AttributesEnum.PointersMinDistance), 0));\n    setPointersMaxDistance(getNumber($component.getAttribute(AttributesEnum.PointersMaxDistance), Infinity));\n    setRangeDragging(getBoolean($component.getAttribute(AttributesEnum.RangeDragging)));\n\n    // additional properties -----------------------------\n    setRound(getNumber($component.getAttribute(AttributesEnum.Round), ROUND_DEFAULT));\n    initDisabled();\n    initAriaLabels();\n\n    // init styles ---------\n    styles = Styles($component, $slider, pointers);\n    setAnimateOnClick($component.getAttribute(AttributesEnum.AnimateOnClick));\n\n    // init slider events -------------------------------------\n    $slider.addEventListener('mousedown', onMouseDown);\n    $slider.addEventListener('mouseup', onMouseUp);\n    $slider.addEventListener('touchmove', onValueChange);\n    $slider.addEventListener('touchstart', onValueChange);\n    document.addEventListener('wheel', pointerMouseWheel, { passive: false });\n\n    // init plugins ---------------\n    pluginsManager = PluginsManager(\n      $component,\n      requestUpdatePlugins,\n      {\n        setValues,\n        setMin,\n        setMax,\n        setStep,\n        setPointersOverlap,\n        setPointersMinDistance,\n        setPointersMaxDistance,\n        setDisabled,\n        setType,\n        setRightToLeft,\n        setBottomToTop,\n        setRound,\n        setKeyboardDisabled,\n        setRangeDragging,\n        setData,\n      },\n      {\n        getPercents,\n        getValues,\n\n        getMin: getNumericMin,\n        getMax: getNumericMax,\n\n        getStep,\n        getData,\n        getType,\n        getRound,\n\n        getTextMin: getMin,\n        getTextMax: getMax,\n\n        isRightToLeft,\n        isBottomToTop,\n\n        isDisabled,\n        isKeyboardDisabled,\n\n        isPointersOverlap,\n        isRangeDraggingEnabled,\n        getPointersMinDistance,\n        getPointersMaxDistance,\n      }\n    );\n    pluginsManager.init();\n  })();\n\n  const destroy = () => {\n    $slider.removeEventListener('mousedown', onMouseDown);\n    $slider.removeEventListener('mouseup', onMouseUp);\n    $slider.removeEventListener('touchmove', onValueChange);\n    $slider.removeEventListener('touchstart', onValueChange);\n    document.removeEventListener('wheel', pointerMouseWheel);\n\n    for(const pointer of pointers){\n      pointer.destroy();\n    }\n\n    pluginsManager?.destroy();\n  };\n\n  return {\n    get pointers() {\n      return pointers;\n    },\n\n    get styles() {\n      return styles;\n    },\n\n    get pluginsManager() {\n      return pluginsManager;\n    },\n\n    get min() {\n      return getMin();\n    },\n\n    get max() {\n      return getMax();\n    },\n\n    get step() {\n      return getStep();\n    },\n\n    get pointersOverlap() {\n      return isPointersOverlap();\n    },\n\n    set pointersOverlap(_pointersOverlap) {\n      setPointersOverlap(_pointersOverlap);\n    },\n\n    get pointersMinDistance() {\n      return getPointersMinDistance();\n    },\n\n    set pointersMinDistance(_pointersMinDistance) {\n      setPointersMinDistance(_pointersMinDistance);\n    },\n\n    get pointersMaxDistance() {\n      return getPointersMaxDistance();\n    },\n\n    set pointersMaxDistance(_pointersMaxDistance) {\n      setPointersMaxDistance(_pointersMaxDistance);\n    },\n\n    get disabled() {\n      return isDisabled();\n    },\n\n    set disabled(_disabled) {\n      setDisabled(_disabled);\n    },\n\n    get data() {\n      return getData();\n    },\n\n    get type() {\n      return getType();\n    },\n\n    set type(_type) {\n      setType(_type);\n    },\n\n    get rightToLeft() {\n      return isRightToLeft();\n    },\n\n    set rightToLeft(_rightToLeft) {\n      setRightToLeft(_rightToLeft);\n    },\n\n    get bottomToTop() {\n      return isBottomToTop();\n    },\n\n    set bottomToTop(_bottomToTop) {\n      setBottomToTop(_bottomToTop);\n    },\n\n    get round() {\n      return getRound();\n    },\n\n    set round(_round) {\n      setRound(_round);\n    },\n\n    get animateOnClick() {\n      return animateOnClick;\n    },\n\n    set animateOnClick(_animateOnClick) {\n      setAnimateOnClick(_animateOnClick);\n    },\n\n    get keyboardDisabled() {\n      return isKeyboardDisabled();\n    },\n\n    set keyboardDisabled(_keyboardDisabled){\n      setKeyboardDisabled(_keyboardDisabled);\n    },\n\n    get rangeDragging() {\n      return isRangeDraggingEnabled();\n    },\n\n    set rangeDragging(_rangeDragging) {\n      setRangeDragging(_rangeDragging);\n    },\n\n    setMin,\n    setMax,\n    setValue,\n    setStep,\n    setData,\n    getTextValue,\n    setAriaLabel,\n    getAriaLabel,\n\n    addPointer,\n    removePointer,\n\n    destroy,\n  };\n};\n\n", "import * as AttributesEnum from '../enums/attributes-enum';\nimport { ISlider, ROUND_DEFAULT } from '../ui/slider';\nimport { getBoolean, getNumber } from './math-provider';\nimport { stylePropertiesList } from '../ui/styles';\n\nexport const onAttributeChange = (slider: ISlider, attrName: string, newValue: string) => {\n\n  // handle style properties ------------------------------------\n  // try to get style property - ['--pointer-width', 'pointer-width', 1, 'pointerWidth']\n  const found = stylePropertiesList.find(([_cssVariableName, _attrName, _apiProperty, _regex]) => {\n    return _attrName.replace('#', '') === attrName.replace(/\\d+/g, '');\n  });\n\n  if(found && slider.styles){\n    const [_cssVariableName, _attrName, _apiProperty, _regex] = found;\n\n    const key = attrName.replace(/\\D/g, '').trim();\n    const index = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1);\n\n    slider.styles.setStyle(_cssVariableName, newValue, index);\n    return;\n  }\n\n  if(slider && slider.pluginsManager){\n    slider.pluginsManager.onAttrChange(attrName, newValue);\n  }\n\n  // handle static properties ----------------------------------\n  switch (attrName) {\n\n    case AttributesEnum.Min: {\n      slider.setMin(newValue);\n      break;\n    }\n\n    case AttributesEnum.Max: {\n      slider.setMax(newValue);\n      break;\n    }\n\n    case AttributesEnum.Step: {\n      slider.setStep(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersOverlap: {\n      slider.pointersOverlap = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMinDistance: {\n      slider.pointersMinDistance = getNumber(newValue, 0);\n      break;\n    }\n\n    case AttributesEnum.RangeDragging: {\n      slider.rangeDragging = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.PointersMaxDistance: {\n      slider.pointersMaxDistance = getNumber(newValue, Infinity);\n      break;\n    }\n\n    case AttributesEnum.Disabled: {\n      slider.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.KeyboardDisabled: {\n      slider.keyboardDisabled = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Data: {\n      slider.setData(newValue);\n      break;\n    }\n\n    case AttributesEnum.Type: {\n      slider.type = newValue;\n      break;\n    }\n\n    case AttributesEnum.RightToLeft: {\n      slider.rightToLeft = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.BottomToTop: {\n      slider.bottomToTop = getBoolean(newValue);\n      break;\n    }\n\n    case AttributesEnum.Round: {\n      slider.round = getNumber(newValue, ROUND_DEFAULT);\n      break;\n    }\n\n    case AttributesEnum.Theme: {\n      if(slider.styles){\n        slider.styles.theme = newValue;\n      }\n      break;\n    }\n\n    case AttributesEnum.AnimateOnClick: {\n      slider.animateOnClick = newValue;\n      break;\n    }\n  }\n\n  // handle dynamic properties ------------------------------------\n  let property: string | null = null;\n\n  if(/^value([0-9]*)$/.test(attrName)){\n    property = 'value';\n  }\n\n  if(/^pointer([0-9]*)-disabled$/.test(attrName)){\n    property = 'pointer-disabled';\n  }\n\n  if(/^aria-label([0-9]*)$/.test(attrName)){\n    property = 'aria-label';\n  }\n\n  if(/^pointer([0-9]*)-shape$/.test(attrName)){\n    property = 'pointer-shape';\n  }\n\n  if(!property) return;\n\n  const key = attrName.replace(/\\D/g, '').trim();\n  const index = (key === '' || key === '0' || key === '1') ? 0 : (getNumber(key, 0) - 1)\n\n  switch (property) {\n\n    case 'value': {\n      slider.setValue(newValue, index);\n      break;\n    }\n\n    case 'pointer-disabled': {\n      const pointer = slider?.pointers[index];\n      if(!pointer) return;\n\n      pointer.disabled = getBoolean(newValue);\n      break;\n    }\n\n    case 'aria-label': {\n      slider.setAriaLabel(index, newValue);\n      break;\n    }\n\n    case 'pointer-shape': {\n      if(slider.styles){\n        slider.styles.setPointerShape(index, newValue);\n      }\n      break;\n    }\n  }\n};", "import mainTemplate from '../templates/main.html.js'; // esbuild custom loader\nimport styles from './styles.pcss';\nimport { onAttributeChange } from '../domain/attributes-provider';\nimport { ISlider, ROUND_DEFAULT, Slider } from '../ui/slider';\nimport { TData, TStep } from '../types';\nimport { getBoolean } from '../domain/math-provider';\nimport * as TypeEnum from '../enums/type-enum';\nimport { getExternalCSSList } from '../domain/common-provider';\nimport { initPointerAPI, initPointerAPIs, initPointers } from '../domain/pointers-provider';\n\n/**\n * Usage: <toolcool-range-slider value=\"0\" min=\"0\" max=\"100\"></toolcool-range-slider>\n * Documentation: https://github.com/toolcool-org/toolcool-range-slider\n */\nclass TCRangeSlider extends HTMLElement {\n\n  public slider: ISlider | undefined;\n\n  private _externalCSSList: string[] | null = [];\n\n  private _observer: MutationObserver | null = null;\n\n  // -------------- APIs --------------------\n\n  public set step(_step: TStep) {\n    if(this.slider){\n      this.slider.setStep(_step);\n    }\n  }\n\n  public get step() {\n    return this.slider?.step;\n  }\n\n  public set disabled(_disabled: boolean) {\n    if(this.slider){\n      this.slider.disabled = _disabled;\n    }\n  }\n\n  public get disabled() {\n    return this.slider?.disabled ?? false;\n  }\n\n  public set data(_data: TData) {\n    this.slider?.setData(_data);\n  }\n\n  public get data() {\n    return this.slider?.data;\n  }\n\n  public set min(_min: number | string | undefined | null) {\n    this.slider?.setMin(_min);\n  }\n\n  public get min() {\n    return this.slider?.min;\n  }\n\n  public set max(_max: number | string | undefined | null) {\n    this.slider?.setMax(_max);\n  }\n\n  public get max() {\n    return this.slider?.max;\n  }\n\n  public set round(_round: number) {\n    if(!this.slider) return;\n    this.slider.round = _round;\n  }\n\n  public get round() {\n    return this.slider?.round ?? ROUND_DEFAULT;\n  }\n\n  public set type(_type: string | undefined) {\n    if(!this.slider) return;\n    this.slider.type = _type ?? TypeEnum.Horizontal;\n  }\n\n  public get type() {\n    return this.slider?.type || TypeEnum.Horizontal;\n  }\n\n  public set pointersOverlap(_pointersOverlap: boolean) {\n    if(!this.slider) return;\n    this.slider.pointersOverlap = _pointersOverlap;\n  }\n\n  public get pointersOverlap() {\n    return this.slider?.pointersOverlap ?? false;\n  }\n\n  public set pointersMinDistance(_pointersMinDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMinDistance = _pointersMinDistance;\n  }\n\n  public get pointersMinDistance() {\n    return this.slider?.pointersMinDistance ?? 0;\n  }\n\n  public set pointersMaxDistance(_pointersMaxDistance: number) {\n    if(!this.slider) return;\n    this.slider.pointersMaxDistance = _pointersMaxDistance;\n  }\n\n  public get pointersMaxDistance() {\n    return this.slider?.pointersMaxDistance ?? Infinity;\n  }\n\n  public set theme(_theme: string | null) {\n    if(!this.slider || !this.slider.styles) return;\n    this.slider.styles.theme = _theme;\n  }\n\n  public get theme() {\n    return this.slider?.styles?.theme ?? null;\n  }\n\n  public set rtl(_rtl: boolean) {\n    if(!this.slider) return;\n    this.slider.rightToLeft = _rtl;\n  }\n\n  public get rtl() {\n    return this.slider?.rightToLeft ?? false;\n  }\n\n  public set btt(_btt: boolean) {\n    if(!this.slider) return;\n    this.slider.bottomToTop = _btt;\n  }\n\n  public get btt() {\n    return this.slider?.bottomToTop ?? false;\n  }\n\n  public set keyboardDisabled(_keyboardDisabled: boolean) {\n    if(!this.slider) return;\n    this.slider.keyboardDisabled = _keyboardDisabled;\n  }\n\n  public get keyboardDisabled() {\n    return this.slider?.keyboardDisabled ?? false;\n  }\n\n  public set animateOnClick(_animateOnClick: string | undefined) {\n    if(!this.slider) return;\n    this.slider.animateOnClick = _animateOnClick;\n  }\n\n  public get animateOnClick() {\n    return this.slider?.animateOnClick;\n  }\n\n  public get rangeDragging(){\n    return this.slider?.rangeDragging ?? false;\n  }\n\n  public set rangeDragging(_rangeDragging: boolean | string | undefined | null) {\n    if(this.slider){\n      this.slider.rangeDragging = getBoolean(_rangeDragging);\n    }\n  }\n\n  public get externalCSSList() {\n    return this._externalCSSList;\n  }\n\n  public addPointer(value: number | string | undefined) {\n    if(!this.slider) return;\n\n    const index = this.slider?.addPointer(value);\n\n    initPointerAPI(this,\n      this.slider,\n      index,\n      `value${ index + 1 }`,\n      `ariaLabel${ index + 1 }`,\n      `pointerShape${ index + 1 }`,\n      `pointer${ index + 1 }Disabled`\n    );\n  }\n\n  public removePointer() {\n    if(!this.slider) return;\n    this.slider?.removePointer();\n  }\n\n  // ----------------------------------------------\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    // get optional external CSS list\n    this._externalCSSList = getExternalCSSList(this);\n    this.shadowRoot.innerHTML = mainTemplate(styles, this._externalCSSList);\n\n    // init first pointer\n    const $pointer = this.shadowRoot?.querySelector('.pointer') as HTMLElement;\n    if(!$pointer) return;\n\n    // init the slider\n    const $slider = this.shadowRoot?.getElementById('range-slider') as HTMLElement;\n    if(!$slider) return;\n\n    const pointers = initPointers(this, $pointer);\n    this.slider = Slider(this, $slider, pointers);\n\n    initPointerAPIs(this, this.slider);\n\n    this._observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (!this.slider || mutation.type !== 'attributes') return;\n\n        const attrName = mutation.attributeName;\n        if(!attrName) return;\n\n        onAttributeChange(this.slider, attrName, this.getAttribute(attrName) ?? '');\n      });\n    });\n\n    this._observer.observe(this, {\n      attributes: true, //configure it to listen to attribute changes\n    });\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    if(this._observer){\n      this._observer.disconnect();\n    }\n\n    if(!this.slider) return\n\n    this.slider.destroy();\n  }\n}\n\nexport default TCRangeSlider;\n", "import TCRangeSlider from './app/range-slider';\n\ntype RangeSlider = TCRangeSlider & HTMLElement & {\n  // permit any property like `value${ index + 1 }`\n  value: string | number | undefined;\n  [name: `value${number}`]: string | number | undefined;\n\n  // permit any property like `ariaLabel${ index + 1 }`\n  ariaLabel: string | number | undefined;\n  [name: `ariaLabel$${number}`]: string | null | undefined;\n\n  // permit any property like `pointerShape${ index + 1 }`\n  pointerShape: string | number | undefined;\n  [name: `pointerShape$${number}`]: string | null;\n\n  // permit any property like `pointer${ index + 1 }Disabled`\n  pointerDisabled: string | number | undefined;\n  [name: `pointer$${number}Disabled`]: boolean;\n\n  // dynamic styles -----------------------------\n  sliderWidth: string | number | null | undefined;\n  sliderHeight: string | number | null | undefined;\n  sliderRadius: string | number | null | undefined;\n  sliderBg: string | null | undefined;\n  sliderBgHover: string | null | undefined;\n  sliderBgFill: string | null | undefined;\n\n  pointerWidth: string | number | null | undefined;\n  [name: `pointer${number}Width`]: string | number| undefined | null;\n\n  pointerHeight: string | number | null | undefined;\n  [name: `pointer${number}Height`]: string | number| undefined | null;\n\n  pointerRadius: string | number | null | undefined;\n  [name: `pointer${number}Radius`]: string | number| undefined | null;\n\n  pointerBg: string | null | undefined;\n  [name: `pointer${number}Bg`]: string | undefined | null;\n\n  pointerBgHover: string | null | undefined;\n  [name: `pointer${number}BgHover`]: string| undefined | null;\n\n  pointerBgFocus: string | null | undefined;\n  [name: `pointer${number}BgFocus`]: string| undefined | null;\n\n  pointerShadow: string | null | undefined;\n  [name: `pointer${number}Shadow`]: string | undefined | null;\n\n  pointerShadowHover: string | null | undefined;\n  [name: `pointer${number}ShadowHover`]: string | undefined | null;\n\n  pointerShadowFocus: string | null | undefined;\n  [name: `pointer${number}ShadowFocus`]: string | undefined | null;\n\n  pointerBorder: string | number | null | undefined;\n  [name: `pointer${number}Border`]: string | number| undefined | null;\n\n  pointerBorderHover: string | number | null | undefined;\n  [name: `pointer${number}BorderHover`]: string | number| undefined | null;\n\n  pointerBorderFocus: string | number | null | undefined;\n  [name: `pointer${number}BorderFocus`]: string | number| undefined | null;\n};\n\ndeclare global {\n  interface Window {\n    tcRangeSlider: typeof TCRangeSlider;\n  }\n}\n\nwindow.tcRangeSlider = TCRangeSlider;\n\n// register web components\nif (!customElements.get('toolcool-range-slider')) {\n  customElements.define('toolcool-range-slider', TCRangeSlider);\n}\n\nif (!customElements.get('tc-range-slider')) {\n  customElements.define('tc-range-slider', class extends TCRangeSlider{});\n}\n\nexport default RangeSlider;\n\n\n", "import RangeSlider from '../../../core';\nimport { IBindingLabelsPlugin } from '../../../plugins/binding-labels-plugin';\nimport { IGeneratedLabelsPlugin } from '../../../plugins/generated-labels-plugin';\n\nexport const getSetValuesExamples = () => {\n  if(!document.querySelector('[data-examples=\"get-set-values\"]')) return;\n\n  try{\n    const $slider1 = document.getElementById('slider-1') as RangeSlider;\n    const $label1 = document.getElementById('label-1') as HTMLElement;\n\n    $slider1.addEventListener('change', (evt: CustomEvent) => {\n      $label1.textContent = evt.detail.value;\n    });\n\n    $slider1.value = 50;\n  }\n  catch(ex) { console.error(ex); }\n\n  try{\n    const $slider2 = document.getElementById('slider-2') as RangeSlider;\n    const $label2 = document.getElementById('label-2') as HTMLElement;\n    const $label3 = document.getElementById('label-3') as HTMLElement;\n\n    $slider2.addEventListener('change', (evt: CustomEvent) => {\n      $label2.textContent = evt.detail.value;\n      $label3.textContent = evt.detail.value2;\n    });\n\n    $slider2.value1 = 40;\n    $slider2.value2 = 80;\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const autoBindingValuesExamples = () => {\n  if(!document.querySelector('[data-examples=\"auto-binding-values\"]')) return;\n\n  try{\n    const $slider2 = document.getElementById('slider-2') as RangeSlider;\n\n    ($slider2 as IBindingLabelsPlugin).valueLabel = '.value-22';\n    // $slider2.setAttribute('value-label', '.value-22');\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const autoGeneratedLabelsExamples = () => {\n  if(!document.querySelector('[data-examples=\"auto-generated-labels\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-3');\n    if(!$slider) return;\n\n    const $btn = document.getElementById('toggle-gen-labels');\n    if(!$btn) return;\n\n    $btn.addEventListener('click', () => {\n      const $plugin = ($slider as IGeneratedLabelsPlugin);\n      $plugin.generateLabels = !$plugin.generateLabels;\n      // $slider.setAttribute('generate-labels', (!$plugin.generateLabels) + '');\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const minMaxExamples = () => {\n  if(!document.querySelector('[data-examples=\"min-max\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-4') as RangeSlider;\n    const $changeBtn = document.getElementById('set-min-max-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('set-min-max-btn-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.min = -200;\n      $slider.max = 200;\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.min = -500;\n      $slider.max = 500;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const roundExamples = () => {\n  if(!document.querySelector('[data-examples=\"rounding\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-5') as RangeSlider;\n    const $changeBtn = document.getElementById('rounding-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('rounding-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.round = 0;\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.round = 2;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const stepExamples = () => {\n  if(!document.querySelector('[data-examples=\"step\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-6') as RangeSlider;\n    const $changeBtn = document.getElementById('step-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('step-reset') as HTMLElement;\n\n    /*// get the step value\n    const step: TStep = $slider.step;\n    console.log(step);*/\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.step = 10;\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.step = undefined;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const nonLinearStepExamples = () => {\n  if(!document.querySelector('[data-examples=\"non-linear-step\"]')) return;\n\n  // non linear step example\n  try{\n    const $slider = document.getElementById('slider-7') as RangeSlider;\n    $slider.step = (_value: string | number, _percent: number) => {\n      return _value < 50 ? 5 : 10;\n    };\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const dataExamples = () => {\n  if(!document.querySelector('[data-examples=\"data\"]')) return;\n\n  // non linear step example\n  try{\n    const $slider = document.getElementById('slider-8') as RangeSlider;\n    const $changeBtn = document.getElementById('data-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('data-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.data = ['red', 'green', 'blue', 'yellow', 'pink', 'brown', 'silver', 'white', 'black'];\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.data = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const withHeightBorderRadiusExamples = () => {\n  if(!document.querySelector('[data-examples=\"width-height-border-radius\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-9') as RangeSlider;\n    const $changeBtn = document.getElementById('styles-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('styles-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.sliderWidth = '200px';\n      $slider.sliderHeight = '0.7rem';\n      $slider.sliderRadius = 0;\n\n      $slider.pointerWidth = '1.8rem';\n      $slider.pointerHeight = '1.8rem';\n      $slider.pointerRadius = 0;\n\n      $slider.pointer2Width = '1.3rem';\n      $slider.pointer2Height = '1.3rem';\n      $slider.pointer2Radius = '1rem';\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.sliderWidth = '300px';\n      $slider.sliderHeight = '0.25rem';\n      $slider.sliderRadius = '1rem';\n\n      $slider.pointerWidth = '1rem';\n      $slider.pointerHeight = '1rem';\n      $slider.pointerRadius = '100%';\n\n      $slider.pointer2Width = '1rem';\n      $slider.pointer2Height = '1rem';\n      $slider.pointer2Radius = '100%';\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const colorExamples = () => {\n  if(!document.querySelector('[data-examples=\"colors\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-10') as RangeSlider;\n    const $changeBtn = document.getElementById('color-btn') as HTMLElement;\n    const $resetBtn = document.getElementById('color-reset') as HTMLElement;\n\n    $changeBtn.addEventListener('click', () => {\n      $slider.sliderBg = '#efefef';\n      $slider.sliderBgHover = '#ddd';\n      $slider.sliderBgFill = '#ccc';\n\n      $slider.pointer1Bg = 'red';\n      $slider.pointer2Bg = 'green';\n      $slider.pointer3Bg = 'blue';\n\n      $slider.pointer1Border = 'none';\n      $slider.pointer2Border = 'none';\n      $slider.pointer3Border = 'none';\n    });\n\n    $resetBtn.addEventListener('click', () => {\n      $slider.sliderBg = undefined;\n      $slider.sliderBgHover = undefined;\n      $slider.sliderBgFill = undefined;\n\n      $slider.pointer1Bg = undefined;\n      $slider.pointer2Bg = undefined;\n      $slider.pointer3Bg = undefined;\n\n      $slider.pointer1Border = undefined;\n      $slider.pointer2Border = undefined;\n      $slider.pointer3Border = undefined;\n    });\n  }\n  catch(ex) { console.error(ex); }\n};\n\nexport const themesExamples = () => {\n  if(!document.querySelector('[data-examples=\"themes\"]')) return;\n\n  try{\n    const $slider = document.getElementById('slider-11') as RangeSlider;\n    const $rect = document.getElementById('rect-btn') as HTMLElement;\n    const $glass = document.getElementById('glass-btn') as HTMLElement;\n    const $circle = document.getElementById('circle-btn') as HTMLElement;\n    const $rainbow = document.getElementById('rainbow-btn') as HTMLElement;\n\n    $rect.addEventListener('click', () => {\n      $slider.theme = 'rect';\n    });\n\n    $glass.addEventListener('click', () => {\n      $slider.theme = 'glass';\n    });\n\n    $circle.addEventListener('click', () => {\n      $slider.theme = 'circle';\n    });\n\n    $rainbow.addEventListener('click', () => {\n      $slider.theme = 'rainbow';\n    });\n  }\n  catch(ex) { console.error(ex); }\n};", "import '../../../../dist/plugins/tcrs-themes.min.css';\nimport '../../../../dist/plugins/tcrs-binding-labels.min.js';\nimport '../../../../dist/plugins/tcrs-generated-labels.min.js';\nimport '../../../../dist/toolcool-range-slider.min.js';\n\nimport {\n  getSetValuesExamples,\n  autoBindingValuesExamples,\n  autoGeneratedLabelsExamples,\n  minMaxExamples,\n  roundExamples,\n  stepExamples,\n  nonLinearStepExamples,\n  dataExamples,\n  withHeightBorderRadiusExamples, colorExamples, themesExamples\n} from './examples';\n\nconst initMobileMenu = () => {\n  const $btn = document.getElementById('mobile-menu-btn');\n  if(!$btn) return;\n\n  $btn.addEventListener('click', (evt) => {\n    evt.stopPropagation();\n    document.body.classList.toggle('mobile-menu-opened');\n  });\n\n  document.body.addEventListener('click', () => {\n    document.body.classList.remove('mobile-menu-opened');\n  });\n\n  const $sideMenu = document.getElementById('side-menu');\n  if(!$sideMenu) return;\n\n  $sideMenu.addEventListener('click', (evt) => {\n    evt.stopPropagation();\n  });\n\n  const $close = document.getElementById('mobile-menu-close-btn');\n  if(!$close) return;\n\n  $close.addEventListener('click', () => {\n    document.body.classList.remove('mobile-menu-opened');\n  });\n};\n\nconst init = () => {\n  initMobileMenu();\n  getSetValuesExamples();\n  autoBindingValuesExamples();\n  autoGeneratedLabelsExamples();\n  minMaxExamples();\n  roundExamples();\n  stepExamples();\n  nonLinearStepExamples();\n  dataExamples();\n  withHeightBorderRadiusExamples();\n  colorExamples();\n  themesExamples();\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  init();\n});\n\nexport {};\n"],
  "mappings": "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",
  "names": ["P", "i", "v", "t", "y", "f", "b", "o", "s", "e", "n", "l", "d", "u", "I", "g", "m", "L", "p", "r", "a", "c", "T", "p", "u", "I", "P", "S", "i", "t", "g", "n", "c", "f", "d", "T", "r", "e", "b", "h", "m", "l", "o", "s", "a", "L", "x", "E", "M", "N", "main_html_default", "styles", "linkHrefs", "linkHref", "PointersOverlap", "PointersMinDistance", "PointersMaxDistance", "RangeDragging", "Data", "Min", "Max", "Step", "Round", "Type", "Theme", "RightToLeft", "BottomToTop", "Disabled", "KeyboardDisabled", "SliderWidth", "SliderHeight", "SliderRadius", "SliderBg", "SliderBgHover", "SliderBgFill", "PointerWidth", "PointerHeight", "PointerRadius", "PointerBg", "PointerBgHover", "PointerBgFocus", "PointerShadow", "PointerShadowHover", "PointerShadowFocus", "PointerBorder", "PointerBorderHover", "PointerBorderFocus", "AnimateOnClick", "CSSLinks", "Vertical", "Horizontal", "convertRange", "min", "max", "a", "b", "x", "temp", "isNumber", "input", "getNumber", "defaultValue", "roundToStep", "num", "step", "setDecimalPlaces", "decimalPlaces", "coeff", "__pow", "getBoolean", "val", "sendPointerClickedEvent", "$component", "$pointer", "sendMouseDownEvent", "evt", "sendMouseUpEvent", "sendOnKeyDownEvent", "sendChangeEvent", "values", "transformed", "value", "detail", "i", "Pointer", "index", "percent", "arrowLeft", "arrowRight", "arrowUp", "arrowDown", "disabled", "updatePosition", "_percent", "_leftWall", "_rightWall", "_type", "_rightToLeft", "_bottomToTop", "percentPos", "isClicked", "$target", "setCallbacks", "_arrowLeft", "_arrowRight", "_arrowUp", "_arrowDown", "setDisabled", "_disabled", "setAttr", "key", "getAttr", "pointerKeyDown", "pointerClicked", "parseData", "dataString", "parts", "list", "allValuesAreNumbers", "part", "item", "findValueIndexInData", "data", "PanelFill", "$fill", "type", "percents", "rightToLeft", "bottomToTop", "oneOnly", "first", "last", "getAttributesByRegex", "regex", "parseValue", "map", "attr", "valueProp", "keyNum", "getExternalCSSList", "str", "cssList", "stylePropertiesList", "Styles", "$slider", "pointers", "theme", "pointerShapes", "stylesMap", "removeClassesStartWith", "prefix", "classList", "className", "setTheme", "updatePointerShapes", "setPointerShape", "setPointerShapes", "getKey", "setStyle", "pointer", "$styleHolder", "getStyle", "cssVariableName", "attrName", "apiProperty", "cssVariableValue", "apiProperties", "propName", "ex", "PluginsManager", "requestUpdatePlugins", "setters", "getters", "plugins", "update", "plugin", "destroy", "onAttrChange", "_attrName", "_newValue", "defineSettersGetters", "initStyles", "_a", "$style", "pluginFunc", "initPointers", "$latestPointer", "$newPointer", "initPointerAPI", "slider", "ariaLabelProp", "pointerShapeProp", "pointerDisabledProp", "_b", "initPointerAPIs", "changePointersOrder", "isDesc", "$container", "MIN_DEFAULT", "MAX_DEFAULT", "ROUND_DEFAULT", "Slider", "pointersList", "selectedPointer", "panelFill", "pluginsManager", "round", "pointersOverlap", "pointersMinDistance", "pointersMaxDistance", "rangeDragging", "rangeDraggingStart", "rangeDraggingDiff", "keyboardDisabled", "animateOnClick", "ariaLabels", "onMouseDown", "onValueChange", "onMouseUp", "getActivePointer", "panelFillClicked", "isPanelFillClicked", "_dragPercent", "stepPercent", "geStepPercent", "isPanelClicked", "minDistance", "minDistancePointer", "distance", "getSelectedPointerIndex", "boxHeight", "boxTop", "mouseY", "boxWidth", "boxLeft", "mouseX", "firstPointer", "lastPointer", "firstSmallerThanMin", "lastGreaterThanMax", "setPositions", "foundIndex", "pointerMouseWheel", "scrollTop", "rightOrBottom", "shouldGoPrev", "goPrev", "goNext", "pointerIndex", "updatePlugins", "getPercents", "getValues", "getNumericMin", "getNumericMax", "getData", "getStep", "getRound", "getType", "getMin", "getMax", "isRightToLeft", "isBottomToTop", "isPointersOverlap", "getPointersMinDistance", "getPointersMaxDistance", "isRangeDraggingEnabled", "isDisabled", "isKeyboardDisabled", "getPointerLeftWall", "converted", "getPointerRightWall", "_step", "currentValue", "diff", "getTextValue", "getPointerMin", "getPointerMax", "getAriaLabel", "valueText", "setAriaMinMax", "setAllPositions", "setMinMax", "_min", "_max", "setMin", "setMax", "setValues", "setValue", "_val", "setStep", "setPointersOverlap", "_pointersOverlap", "setPointersMinDistance", "_pointersMinDistance", "setPointersMaxDistance", "_pointersMaxDistance", "setKeyboardDisabled", "setData", "_data", "setType", "$box", "aria", "setRightToLeft", "setBottomToTop", "setRound", "_round", "setAnimateOnClick", "_animateOnClick", "setAriaLabel", "_ariaLabel", "setRangeDragging", "_rangeDragging", "initDisabled", "disabledList", "initAriaLabels", "ariaLabelsList", "addPointer", "len", "newPointer", "removePointer", "_keyboardDisabled", "onAttributeChange", "newValue", "found", "_cssVariableName", "_apiProperty", "_regex", "property", "TCRangeSlider", "__publicField", "_theme", "_c", "_rtl", "_btt", "styles_default", "mutations", "mutation", "range_slider_default", "getSetValuesExamples", "$slider1", "$label1", "evt", "ex", "$slider2", "$label2", "$label3", "autoBindingValuesExamples", "autoGeneratedLabelsExamples", "$slider", "$btn", "$plugin", "minMaxExamples", "$changeBtn", "$resetBtn", "roundExamples", "stepExamples", "nonLinearStepExamples", "_value", "_percent", "dataExamples", "withHeightBorderRadiusExamples", "colorExamples", "themesExamples", "$rect", "$glass", "$circle", "$rainbow", "initMobileMenu", "$btn", "evt", "$sideMenu", "$close", "init", "getSetValuesExamples", "autoBindingValuesExamples", "autoGeneratedLabelsExamples", "minMaxExamples", "roundExamples", "stepExamples", "nonLinearStepExamples", "dataExamples", "withHeightBorderRadiusExamples", "colorExamples", "themesExamples"]
}
