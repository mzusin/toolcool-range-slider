// Tool Cool Range Slider v1.0.0, MIT License - https://github.com/toolcool-org/toolcool-color-picker
(()=>{var b=Object.defineProperty;var g=(i,s,e)=>s in i?b(i,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[s]=e;var u=(i,s,e)=>(g(i,typeof s!="symbol"?s+"":s,e),e);var m=".range-slider{position:relative;width:100%;height:.25rem;touch-action:none}.range-slider *{box-sizing:border-box}.container{position:absolute;width:100%;height:100%}.panel{position:absolute;z-index:10;width:100%;height:100%;background:#2d4373;border-radius:1rem;overflow:hidden;transition:.3s background-color ease}.panel:hover{background:#5f79b7}.pointer{position:absolute;z-index:20;outline:0}.pointer-shape{background:#fff;box-shadow:0 0 2px rgb(0 0 0 / 60%);cursor:pointer;border:1px solid hsla(0,0%,88%,0.5);border-radius:100%;height:15px;margin-top:-5px;-webkit-transform:translateX(-7px);transform:translateX(-7px);width:15px;transition:.3s all ease}.pointer-shape:hover{box-shadow:0 0 2px rgb(0 0 0 / 100%)}.pointer:focus .pointer-shape{border:1px solid hsl(201,72%,59%)}";var d=(i,s,e,t,n)=>(t-e)*(n-i)/(s-i)+e,h=(i,s)=>!isNaN(parseFloat(i))&&isFinite(i)?Number(i):s,c=(i,s)=>Math.round(i/s)*s;var p=class extends HTMLElement{constructor(){super();u(this,"_$slider");u(this,"_$pointer");u(this,"_value",0);u(this,"_min",0);u(this,"_max",100);u(this,"_step");this.attachShadow({mode:"open"}),this.pointerClicked=this.pointerClicked.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onValueChange=this.onValueChange.bind(this),this.pointerKeyDown=this.pointerKeyDown.bind(this),this.getSafeValues=this.getSafeValues.bind(this),this.render=this.render.bind(this)}static get observedAttributes(){return["value","min","max","step"]}set value(e){let t=this.getSafeValues(e,this.min,this.max);this._value=t.value,this.render(),this.sendChangeEvent()}get value(){return this._value}set min(e){let t=this.getSafeValues(this.value,e,this.max);this._min=t.min,this.render()}get min(){return this._min}set max(e){let t=this.getSafeValues(this.value,this.min,e);this._max=t.max,this.render()}get max(){return this._max}set step(e){let t=Math.abs(this.max-this.min);e!==void 0&&e>t&&(e=void 0),this._step=e}get step(){return this._step}sendChangeEvent(){this.dispatchEvent(new CustomEvent("change",{detail:{value:this.value}}))}getSafeValues(e,t,n){let r=t,a=n,o=e;return r>a&&(a=r+100),o<r&&(o=r),o>a&&(o=a),{min:r,max:a,value:o}}render(){if(!this._$pointer)return;let e=d(this.min,this.max,0,100,this.value);this._$pointer.style.left=`${e}%`}pointerClicked(){var e;(e=this._$pointer)==null||e.focus()}pointerKeyDown(e){switch(e.key){case"ArrowLeft":{let t=h(this.step,1),n=this.getSafeValues(this.value-t,this.min,this.max);this.value=n.value,this.render();break}case"ArrowRight":{let t=h(this.step,1),n=this.getSafeValues(this.value+t,this.min,this.max);this.value=n.value,this.render();break}}}onMouseDown(e){e.preventDefault&&e.preventDefault(),this.onValueChange(e),window.addEventListener("mousemove",this.onValueChange),window.addEventListener("mouseup",this.onMouseUp)}onMouseUp(){window.removeEventListener("mousemove",this.onValueChange),window.removeEventListener("mouseup",this.onValueChange)}onValueChange(e){if(!this._$slider)return;let{width:t,left:n}=this._$slider.getBoundingClientRect(),r;e.type.indexOf("mouse")!==-1?r=e.clientX:r=e.touches[0].clientX;let o=Math.min(Math.max(0,r-n),t)*100/t,l=d(0,100,this.min,this.max,o);this.step!==void 0&&(l=c(l,this.step)),this.value=l,this.render()}connectedCallback(){var t,n,r,a,o,l;if(!this.shadowRoot)return;this.min=h(this.getAttribute("min"),0),this.max=h(this.getAttribute("max"),100),this.value=h(this.getAttribute("value"),this.min);let e=d(this.min,this.max,0,100,this.value);this.shadowRoot.innerHTML=`
        <style>
            ${m} 
        </style>

        <div class="range-slider">
          <div class="container">
            <div class="panel"></div>
            
            <div class="container">
              <div class="pointer" tabindex="0" style="left: ${e}%;">
                <div class="pointer-shape"></div>
              </div>
            </div>
            
          </div>
        </div>
    `,this.render(),this._$slider=this.shadowRoot.querySelector(".range-slider"),(t=this._$slider)==null||t.addEventListener("mousedown",this.onMouseDown),(n=this._$slider)==null||n.addEventListener("mouseup",this.onMouseUp),(r=this._$slider)==null||r.addEventListener("touchmove",this.onValueChange),(a=this._$slider)==null||a.addEventListener("touchstart",this.onValueChange),this._$pointer=this.shadowRoot.querySelector(".pointer"),(o=this._$pointer)==null||o.addEventListener("click",this.pointerClicked),(l=this._$pointer)==null||l.addEventListener("keydown",this.pointerKeyDown)}disconnectedCallback(){var e,t,n,r,a,o;(e=this._$pointer)==null||e.removeEventListener("click",this.pointerClicked),(t=this._$pointer)==null||t.removeEventListener("keydown",this.pointerClicked),(n=this._$slider)==null||n.removeEventListener("mousedown",this.onMouseDown),(r=this._$slider)==null||r.removeEventListener("mouseup",this.onMouseUp),(a=this._$slider)==null||a.removeEventListener("touchmove",this.onValueChange),(o=this._$slider)==null||o.removeEventListener("touchstart",this.onValueChange)}attributeChangedCallback(e){e==="min"&&(this.min=h(this.getAttribute("min"),0),this.render()),e==="max"&&(this.max=h(this.getAttribute("max"),100),this.render()),e==="value"&&(this.value=h(this.getAttribute("value"),this.min),this.render()),e==="step"&&(this.step=h(this.getAttribute("step"),void 0))}},v=p;customElements.get("toolcool-range-slider")||customElements.define("toolcool-range-slider",v);})();
