// Tool Cool Range Slider v1.0.0, MIT License - https://github.com/toolcool-org/toolcool-color-picker
(()=>{var v=Object.defineProperty;var p=(r,i,e)=>i in r?v(r,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[i]=e;var h=(r,i,e)=>(p(r,typeof i!="symbol"?i+"":i,e),e);var d=".range-slider{position:relative;width:100%;height:.25rem;touch-action:none}.range-slider *{box-sizing:border-box}.container{position:absolute;width:100%;height:100%}.panel{position:absolute;width:100%;height:100%;background:#2d4373;border-radius:1rem;overflow:hidden}.pointer{position:absolute}.pointer-shape{background:#fff;box-shadow:0 0 2px rgb(0 0 0 / 60%);cursor:pointer;border:1px solid hsla(0,0%,88%,.5);border-radius:100%;height:15px;margin-top:-5px;-webkit-transform:translateX(-7px);transform:translateX(-7px);width:15px}";var l=class extends HTMLElement{constructor(){super();h(this,"_$slider");h(this,"_$pointer");h(this,"_value",0);this.attachShadow({mode:"open"}),this.pointerClicked=this.pointerClicked.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onValueChange=this.onValueChange.bind(this)}static get observedAttributes(){return["value"]}set value(e){this._value=Math.min(Math.max(0,e),100),this.render()}get value(){return this._value}render(){!this._$pointer||(this._$pointer.style.left=`${this.value}%`)}pointerClicked(){var e;(e=this._$pointer)==null||e.focus()}pointerKeyDown(){}onMouseDown(e){e.preventDefault&&e.preventDefault(),this.onValueChange(e),window.addEventListener("mousemove",this.onValueChange),window.addEventListener("mouseup",this.onMouseUp)}onMouseUp(){window.removeEventListener("mousemove",this.onValueChange),window.removeEventListener("mouseup",this.onValueChange)}onValueChange(e){if(!this._$slider)return;let{width:s,left:n}=this._$slider.getBoundingClientRect(),t;e.type.indexOf("mouse")!==-1?t=e.clientX:t=e.touches[0].clientX;let o=Math.min(Math.max(0,t-n),s);this.value=Math.round(o*100/s),this.render()}connectedCallback(){var e,s,n,t,o,a;!this.shadowRoot||(this.value=Number(this.getAttribute("value"))||0,this.shadowRoot.innerHTML=`
        <style>
            ${d} 
        </style>

        <div class="range-slider">
          <div class="container">
            <div class="panel"></div>
            
            <div class="container">
              <div class="pointer" style="left: ${this.value}%;">
                <div tabindex="0" class="pointer-shape"></div>
              </div>
            </div>
            
          </div>
        </div>
    `,this._$slider=this.shadowRoot.querySelector(".range-slider"),(e=this._$slider)==null||e.addEventListener("mousedown",this.onMouseDown),(s=this._$slider)==null||s.addEventListener("mouseup",this.onMouseUp),(n=this._$slider)==null||n.addEventListener("touchmove",this.onValueChange),(t=this._$slider)==null||t.addEventListener("touchstart",this.onValueChange),this._$pointer=this.shadowRoot.querySelector(".pointer"),(o=this._$pointer)==null||o.addEventListener("click",this.pointerClicked),(a=this._$pointer)==null||a.addEventListener("keydown",this.pointerKeyDown))}disconnectedCallback(){var e,s,n,t,o,a;(e=this._$pointer)==null||e.removeEventListener("click",this.pointerClicked),(s=this._$pointer)==null||s.removeEventListener("keydown",this.pointerClicked),(n=this._$slider)==null||n.removeEventListener("mousedown",this.onMouseDown),(t=this._$slider)==null||t.removeEventListener("mouseup",this.onMouseUp),(o=this._$slider)==null||o.removeEventListener("touchmove",this.onValueChange),(a=this._$slider)==null||a.removeEventListener("touchstart",this.onValueChange)}attributeChangedCallback(e){e==="value"&&(this.value=Number(this.getAttribute("value"))||0,this.render())}},u=l;customElements.get("toolcool-range-slider")||customElements.define("toolcool-range-slider",u);})();
